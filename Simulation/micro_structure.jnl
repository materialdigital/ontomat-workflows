# -*- coding: mbcs -*-
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
mdb.Model(name='HexFiberArray')
mdb.models['HexFiberArray'].ConstrainedSketch(name='HexPackSketch', sheetSize=
    10.0)
mdb.models['HexFiberArray'].sketches['HexPackSketch'].rectangle(point1=(0, 0), 
    point2=(0.3, 0.45172162719572))
mdb.models['HexFiberArray'].Part(dimensionality=THREE_D, name='HexPackPart', 
    type=DEFORMABLE_BODY)
mdb.models['HexFiberArray'].parts['HexPackPart'].BaseSolidExtrude(depth=
    0.782404809180675, sketch=
    mdb.models['HexFiberArray'].sketches['HexPackSketch'])
mdb.models['HexFiberArray'].parts['HexPackPart'].DatumPlaneByThreePoints(
    point1=(0.0, 0.0, 0.0), point2=(0.3, 0.0, 0.0), point3=(0.0, 
    0.45172162719572, 0.0))
mdb.models['HexFiberArray'].parts['HexPackPart'].features.changeKey(fromName=
    'Datum plane-1', toName='d1')
mdb.models['HexFiberArray'].parts['HexPackPart'].DatumPlaneByThreePoints(
    point1=(0.0, 0.0, 0.0), point2=(0.3, 0.0, 0.0), point3=(0.0, 0.0, 
    0.782404809180675))
mdb.models['HexFiberArray'].parts['HexPackPart'].features.changeKey(fromName=
    'Datum plane-1', toName='d2')
mdb.models['HexFiberArray'].parts['HexPackPart'].DatumPlaneByThreePoints(
    point1=(0.0, 0.0, 0.0), point2=(0.0, 0.45172162719572, 0.0), point3=(0.0, 
    0.0, 0.782404809180675))
mdb.models['HexFiberArray'].parts['HexPackPart'].features.changeKey(fromName=
    'Datum plane-1', toName='d3')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#4 ]', ), ), name='EdgeAB')
mdb.models['HexFiberArray'].ConstrainedSketch(name='PartitionSketch', 
    sheetSize=10.0, transform=
    mdb.models['HexFiberArray'].parts['HexPackPart'].MakeSketchTransform(
    sketchPlane=mdb.models['HexFiberArray'].parts['HexPackPart'].faces[0], 
    sketchPlaneSide=SIDE1, 
    sketchUpEdge=mdb.models['HexFiberArray'].parts['HexPackPart'].edges[2], 
    sketchOrientation=RIGHT, origin=(0.0, 0.0, 0.0)))
mdb.models['HexFiberArray'].parts['HexPackPart'].projectReferencesOntoSketch(
    filter=COPLANAR_EDGES, sketch=
    mdb.models['HexFiberArray'].sketches['PartitionSketch'])
mdb.models['HexFiberArray'].sketches['PartitionSketch'].ArcByCenterEnds(center=
    (0.0, 0.0), direction=CLOCKWISE, point1=(0.0, 0.3), point2=(0.3, 0.0))
mdb.models['HexFiberArray'].sketches['PartitionSketch'].ArcByCenterEnds(center=
    (0.0, 0.0), direction=CLOCKWISE, point1=(0.0, 0.315172162719572), point2=(
    0.315172162719572, 0.0))
mdb.models['HexFiberArray'].sketches['PartitionSketch'].ArcByCenterEnds(center=
    (0.782404809180675, 0.45172162719572), direction=COUNTERCLOCKWISE, point1=(
    0.482404809180675, 0.45172162719572), point2=(0.782404809180675, 
    0.15172162719572))
mdb.models['HexFiberArray'].sketches['PartitionSketch'].ArcByCenterEnds(center=
    (0.782404809180675, 0.45172162719572), direction=COUNTERCLOCKWISE, point1=(
    0.467232646461103, 0.45172162719572), point2=(0.782404809180675, 
    0.136549464476148))
mdb.models['HexFiberArray'].parts['HexPackPart'].ShellExtrude(depth=0.3, 
    flipExtrudeDirection=ON, keepInternalBoundaries=ON, sketch=
    mdb.models['HexFiberArray'].sketches['PartitionSketch'], sketchOrientation=
    RIGHT, sketchPlane=
    mdb.models['HexFiberArray'].parts['HexPackPart'].faces[0], sketchPlaneSide=
    SIDE1, sketchUpEdge=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges[2])
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#10000000 ]', ), ), name='EdgeAB')
mdb.models['HexFiberArray'].ConstrainedSketch(name='hexPartitionSketch', 
    sheetSize=10.0, transform=
    mdb.models['HexFiberArray'].parts['HexPackPart'].MakeSketchTransform(
    sketchPlane=mdb.models['HexFiberArray'].parts['HexPackPart'].faces[13], 
    sketchPlaneSide=SIDE1, 
    sketchUpEdge=mdb.models['HexFiberArray'].parts['HexPackPart'].edges[28], 
    sketchOrientation=RIGHT, origin=(0.0, 0.0, 0.0)))
mdb.models['HexFiberArray'].parts['HexPackPart'].projectReferencesOntoSketch(
    filter=COPLANAR_EDGES, sketch=
    mdb.models['HexFiberArray'].sketches['hexPartitionSketch'])
mdb.models['HexFiberArray'].sketches['hexPartitionSketch'].Line(point1=(0.0, 
    0.173205080756888), point2=(0.1, 0.173205080756888))
mdb.models['HexFiberArray'].sketches['hexPartitionSketch'].Line(point1=(0.1, 
    0.173205080756888), point2=(0.2, 0.0))
mdb.models['HexFiberArray'].sketches['hexPartitionSketch'].Line(point1=(
    0.782404809180675, 0.278516546438833), point2=(0.682404809180675, 
    0.278516546438833))
mdb.models['HexFiberArray'].sketches['hexPartitionSketch'].Line(point1=(
    0.682404809180675, 0.278516546438833), point2=(0.582404809180675, 
    0.45172162719572))
mdb.models['HexFiberArray'].parts['HexPackPart'].ShellExtrude(depth=0.3, 
    flipExtrudeDirection=ON, keepInternalBoundaries=ON, sketch=
    mdb.models['HexFiberArray'].sketches['hexPartitionSketch'], 
    sketchOrientation=RIGHT, sketchPlane=
    mdb.models['HexFiberArray'].parts['HexPackPart'].faces[13], 
    sketchPlaneSide=SIDE1, sketchUpEdge=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges[28])
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0 #80000 ]', ), ), name='EdgeAB')
mdb.models['HexFiberArray'].ConstrainedSketch(name='hexcellPartitionSketch', 
    sheetSize=10.0, transform=
    mdb.models['HexFiberArray'].parts['HexPackPart'].MakeSketchTransform(
    sketchPlane=mdb.models['HexFiberArray'].parts['HexPackPart'].faces[25], 
    sketchPlaneSide=SIDE1, 
    sketchUpEdge=mdb.models['HexFiberArray'].parts['HexPackPart'].edges[51], 
    sketchOrientation=RIGHT, origin=(0.0, 0.0, 0.0)))
mdb.models['HexFiberArray'].parts['HexPackPart'].projectReferencesOntoSketch(
    filter=COPLANAR_EDGES, sketch=
    mdb.models['HexFiberArray'].sketches['hexcellPartitionSketch'])
mdb.models['HexFiberArray'].sketches['hexcellPartitionSketch'].Line(point1=(
    0.52160320612045, 0.0), point2=(0.260801603060225, 0.45172162719572))
mdb.models['HexFiberArray'].sketches['hexcellPartitionSketch'].Line(point1=(
    0.1, 0.173205080756888), point2=(0.260801603060225, 0.45172162719572))
mdb.models['HexFiberArray'].sketches['hexcellPartitionSketch'].Line(point1=(
    0.682404809180675, 0.278516546438833), point2=(0.52160320612045, 0.0))
mdb.models['HexFiberArray'].parts['HexPackPart'].ShellExtrude(depth=0.3, 
    flipExtrudeDirection=ON, keepInternalBoundaries=ON, sketch=
    mdb.models['HexFiberArray'].sketches['hexcellPartitionSketch'], 
    sketchOrientation=RIGHT, sketchPlane=
    mdb.models['HexFiberArray'].parts['HexPackPart'].faces[25], 
    sketchPlaneSide=SIDE1, sketchUpEdge=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges[51])
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(cells=
    mdb.models['HexFiberArray'].parts['HexPackPart'].cells.getSequenceFromMask(
    mask=('[#4 ]', ), ), name='middle_cell_1')
mdb.models['HexFiberArray'].parts['HexPackPart'].PartitionCellByPlaneThreePoints(
    cells=mdb.models['HexFiberArray'].parts['HexPackPart'].cells[2], point1=(
    0.0, 0.0, 0.0), point2=(0.0, 0.45172162719572, 0.782404809180675), point3=(
    0.3, 0.0, 0.0))
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(cells=
    mdb.models['HexFiberArray'].parts['HexPackPart'].cells.getSequenceFromMask(
    mask=('[#4 ]', ), ), name='middle_cell_2')
mdb.models['HexFiberArray'].parts['HexPackPart'].PartitionCellByPlaneThreePoints(
    cells=mdb.models['HexFiberArray'].parts['HexPackPart'].cells[2], point1=(
    0.0, 0.0, 0.0), point2=(0.0, 0.45172162719572, 0.782404809180675), point3=(
    0.3, 0.0, 0.0))
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(cells=
    mdb.models['HexFiberArray'].parts['HexPackPart'].cells.getSequenceFromMask(
    mask=('[#20 ]', ), ), name='cohesive_zoneA_cell')
mdb.models['HexFiberArray'].parts['HexPackPart'].PartitionCellByPlaneThreePoints(
    cells=mdb.models['HexFiberArray'].parts['HexPackPart'].cells[5], point1=(
    0.0, 0.0, 0.0), point2=(0.0, 0.45172162719572, 0.782404809180675), point3=(
    0.3, 0.0, 0.0))
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(cells=
    mdb.models['HexFiberArray'].parts['HexPackPart'].cells.getSequenceFromMask(
    mask=('[#80 ]', ), ), name='cohesive_zoneB_cell')
mdb.models['HexFiberArray'].parts['HexPackPart'].PartitionCellByPlaneThreePoints(
    cells=mdb.models['HexFiberArray'].parts['HexPackPart'].cells[7], point1=(
    0.0, 0.0, 0.0), point2=(0.0, 0.45172162719572, 0.782404809180675), point3=(
    0.3, 0.0, 0.0))
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(cells=
    mdb.models['HexFiberArray'].parts['HexPackPart'].cells.getSequenceFromMask(
    mask=('[#200 ]', ), ), name='fiber_cell_A')
mdb.models['HexFiberArray'].parts['HexPackPart'].PartitionCellByPlaneThreePoints(
    cells=mdb.models['HexFiberArray'].parts['HexPackPart'].cells[9], point1=(
    0.0, 0.0, 0.0), point2=(0.0, 0.45172162719572, 0.782404809180675), point3=(
    0.3, 0.0, 0.0))
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(cells=
    mdb.models['HexFiberArray'].parts['HexPackPart'].cells.getSequenceFromMask(
    mask=('[#800 ]', ), ), name='cohesive_zoneB_cell')
mdb.models['HexFiberArray'].parts['HexPackPart'].PartitionCellByPlaneThreePoints(
    cells=mdb.models['HexFiberArray'].parts['HexPackPart'].cells[11], point1=(
    0.0, 0.0, 0.0), point2=(0.0, 0.45172162719572, 0.782404809180675), point3=(
    0.3, 0.0, 0.0))
mdb.models['HexFiberArray'].parts['HexPackPart'].Mirror(keepInternalBoundaries=
    ON, keepOriginal=ON, mirrorPlane=
    mdb.models['HexFiberArray'].parts['HexPackPart'].faces[44])
mdb.models['HexFiberArray'].parts['HexPackPart'].Mirror(keepInternalBoundaries=
    ON, keepOriginal=ON, mirrorPlane=
    mdb.models['HexFiberArray'].parts['HexPackPart'].faces[157])
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(cells=
    mdb.models['HexFiberArray'].parts['HexPackPart'].cells.getSequenceFromMask(
    mask=('[#80212802 #21280212 #1280 ]', ), ), name='center_fiber')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(cells=
    mdb.models['HexFiberArray'].parts['HexPackPart'].cells.getSequenceFromMask(
    mask=('[#a0a52a0a #a52a0a52 #52a0 ]', ), ), name='center_fiber_coh_zone')
mdb.models['HexFiberArray'].parts['HexPackPart'].SetByBoolean(name=
    'coh_center_ring', operation=DIFFERENCE, sets=(
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['center_fiber_coh_zone'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['center_fiber']))
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(cells=
    mdb.models['HexFiberArray'].parts['HexPackPart'].cells.getSequenceFromMask(
    mask=('[#d001 ]', ), ), name='corner1_fiber')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(cells=
    mdb.models['HexFiberArray'].parts['HexPackPart'].cells.getSequenceFromMask(
    mask=('[#2d405 ]', ), ), name='corner1_fiber_coh_zone')
mdb.models['HexFiberArray'].parts['HexPackPart'].SetByBoolean(name=
    'coh_corner1_ring', operation=DIFFERENCE, sets=(
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['corner1_fiber_coh_zone'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['corner1_fiber']))
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(cells=
    mdb.models['HexFiberArray'].parts['HexPackPart'].cells.getSequenceFromMask(
    mask=('[#0 #10000000 #d00 ]', ), ), name='corner2_fiber')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(cells=
    mdb.models['HexFiberArray'].parts['HexPackPart'].cells.getSequenceFromMask(
    mask=('[#0 #50000000 #2d40 ]', ), ), name='corner2_fiber_coh_zone')
mdb.models['HexFiberArray'].parts['HexPackPart'].SetByBoolean(name=
    'coh_corner2_ring', operation=DIFFERENCE, sets=(
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['corner2_fiber_coh_zone'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['corner2_fiber']))
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(cells=
    mdb.models['HexFiberArray'].parts['HexPackPart'].cells.getSequenceFromMask(
    mask=('[#0 #d00100 ]', ), ), name='corner3_fiber')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(cells=
    mdb.models['HexFiberArray'].parts['HexPackPart'].cells.getSequenceFromMask(
    mask=('[#0 #2d40500 ]', ), ), name='corner3_fiber_coh_zone')
mdb.models['HexFiberArray'].parts['HexPackPart'].SetByBoolean(name=
    'coh_corner3_ring', operation=DIFFERENCE, sets=(
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['corner3_fiber_coh_zone'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['corner3_fiber']))
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(cells=
    mdb.models['HexFiberArray'].parts['HexPackPart'].cells.getSequenceFromMask(
    mask=('[#100000 #d ]', ), ), name='corner4_fiber')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(cells=
    mdb.models['HexFiberArray'].parts['HexPackPart'].cells.getSequenceFromMask(
    mask=('[#40500000 #2d ]', ), ), name='corner4_fiber_coh_zone')
mdb.models['HexFiberArray'].parts['HexPackPart'].SetByBoolean(name=
    'coh_corner4_ring', operation=DIFFERENCE, sets=(
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['corner4_fiber_coh_zone'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['corner4_fiber']))
mdb.models['HexFiberArray'].parts['HexPackPart'].SetByBoolean(name=
    'cohesive_zone', sets=(
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['coh_corner1_ring'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['coh_corner2_ring'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['coh_corner3_ring'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['coh_corner4_ring'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['coh_center_ring']))
mdb.models['HexFiberArray'].parts['HexPackPart'].SetByBoolean(name=
    'all_fiber_zone', sets=(
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['corner4_fiber'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['corner3_fiber'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['corner2_fiber'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['corner1_fiber'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['center_fiber']))
mdb.models['HexFiberArray'].parts['HexPackPart'].SetByBoolean(name=
    'all_fiber_coh_zone', sets=(
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['all_fiber_zone'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['cohesive_zone']))
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(cells=
    mdb.models['HexFiberArray'].parts['HexPackPart'].cells, name='all_cells')
mdb.models['HexFiberArray'].parts['HexPackPart'].SetByBoolean(name=
    'matrix_zone', operation=DIFFERENCE, sets=(
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['all_cells'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['all_fiber_zone']))
mdb.models['HexFiberArray'].Material(name='MatFiber')
mdb.models['HexFiberArray'].materials['MatFiber'].Elastic(table=((
    80000000000.0, 0.2), ))
mdb.models['HexFiberArray'].Material(name='MatMatrix')
mdb.models['HexFiberArray'].materials['MatMatrix'].Elastic(table=((
    3350000000.0, 0.35), ))
mdb.models['HexFiberArray'].HomogeneousSolidSection(material='MatFiber', name=
    'fiber', thickness=None)
mdb.models['HexFiberArray'].HomogeneousSolidSection(material='MatMatrix', name=
    'matrix', thickness=None)
mdb.models['HexFiberArray'].parts['HexPackPart'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['all_fiber_zone'], 
    sectionName='fiber', thicknessAssignment=FROM_SECTION)
mdb.models['HexFiberArray'].parts['HexPackPart'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['matrix_zone'], 
    sectionName='matrix', thicknessAssignment=FROM_SECTION)
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:12 #40000 ]', ), ), name='EdgeGH')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:11 #80000000 ]', ), ), name='EdgeHI')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:13 #20000 ]', ), ), name='EdgeIU')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:12 #80000 ]', ), ), name='EdgeJK')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:13 #100000 ]', ), ), name='EdgeKL')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:13 #80000 ]', ), ), name='EdgeLT')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:12 #100 ]', ), ), name='EdgeAB')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:11 #200000 ]', ), ), name='EdgeBC')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:13 #400000 ]', ), ), name='EdgeCR')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:12 #400 ]', ), ), name='EdgeDE')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:12 #8000000 ]', ), ), name='EdgeEF')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:13 #10000000 ]', ), ), name='EdgeFS')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:13 #2 ]', ), ), name='EdgeQO')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:12 #2000000 ]', ), ), name='EdgeQN')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:8 #80000000 ]', ), ), name='EdgeOV')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:12 #1000 ]', ), ), name='Egde OW')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:13 #2000 ]', ), ), name='Egde OX')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:6 #400 ]', ), ), name='EdgeOY')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:13 #20000000 ]', ), ), name='EdgeOL')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:12 #200 ]', ), ), name='EdgeOO')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:12 #4 ]', ), ), name='EdgeOM')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:13 #8000 ]', ), ), name='EdgeON')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:12 #400000 ]', ), ), name='EdgeQM')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:12 #80000000 ]', ), ), name='EdgeQP')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:14 #1 ]', ), ), name='EdgeOR')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:13 #200000 ]', ), ), name='EdgeRM')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:6 #1000000 ]', ), ), name='EdgeRV')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:9 #20000 ]', ), ), name='EdgeQB')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:10 #100000 ]', ), ), name='EdgeQC')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:13 #20 ]', ), ), name='EdgeQF')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:12 #4000000 ]', ), ), name='EdgeQG')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:13 #80000000 ]', ), ), name='EdgeVG')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:5 #200 ]', ), ), name='EdgeGH2')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:4 #800000 ]', ), ), name='EdgeHI2')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:6 #200 ]', ), ), name='EdgeIU2')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:5 #100 ]', ), ), name='EdgeJK2')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:6 #1000 ]', ), ), name='EdgeKL2')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:6 #800 ]', ), ), name='EdgeLT2')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:5 #1 ]', ), ), name='EdgeAB2')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:4 #2000 ]', ), ), name='EdgeBC2')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:6 #10000 ]', ), ), name='EdgeCR2')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:4 #40000000 ]', ), ), name='EdgeDE2')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:5 #8000 ]', ), ), name='EdgeEF2')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:6 #200000 ]', ), ), name='EdgeFS2')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:5 #1000000 ]', ), ), name='EdgeQO2')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:5 #20000 ]', ), ), name='EdgeQN2')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0 #200 ]', ), ), name='EdgeOV2')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:5 #4 ]', ), ), name='Egde OW2')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:6 #8 ]', ), ), name='Egde OX2')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:6 #400 ]', ), ), name='EdgeOY2')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:6 #100000 ]', ), ), name='EdgeOL2')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:4 #80000000 ]', ), ), name='EdgeOO2')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:4 #1000000 ]', ), ), name='EdgeOM2')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:6 #20 ]', ), ), name='EdgeON2')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:5 #800 ]', ), ), name='EdgeQM2')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:5 #200000 ]', ), ), name='EdgeQP2')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:6 #2000000 ]', ), ), name='EdgeOR2')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:6 #2000 ]', ), ), name='EdgeRM2')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:6 #1000000 ]', ), ), name='EdgeRV2')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0 #8000000 ]', ), ), name='EdgeQB2')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:2 #80000000 ]', ), ), name='EdgeQC2')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:5 #8000000 ]', ), ), name='EdgeQF2')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:5 #10000 ]', ), ), name='EdgeQG2')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:6 #800000 ]', ), ), name='EdgeVG2')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0 #100 ]', ), ), name='EdgeGH4')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#200000 ]', ), ), name='EdgeHI4')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:2 #1000 ]', ), ), name='EdgeIU4')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0 #400 ]', ), ), name='EdgeJK4')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:2 #40000 ]', ), ), name='EdgeKL4')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:2 #10000 ]', ), ), name='EdgeLT4')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#40000000 ]', ), ), name='EdgeAB4')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#200 ]', ), ), name='EdgeBC4')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:2 #100000 ]', ), ), name='EdgeCR4')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0 #1 ]', ), ), name='EdgeDE4')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0 #80000 ]', ), ), name='EdgeEF4')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:2 #10000000 ]', ), ), name='EdgeFS4')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0 #2000000 ]', ), ), name='EdgeQO4')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0 #20000 ]', ), ), name='EdgeQN4')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0 #200 ]', ), ), name='EdgeOV4')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0 #4 ]', ), ), name='Egde OW4')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:2 #100 ]', ), ), name='Egde OX4')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:2 #20000 ]', ), ), name='EdgeOY4')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:2 #20000000 ]', ), ), name='EdgeOL4')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#80000000 ]', ), ), name='EdgeOO4')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#1000000 ]', ), ), name='EdgeOM4')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:2 #400 ]', ), ), name='EdgeON4')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0 #4000 ]', ), ), name='EdgeQM4')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0 #800000 ]', ), ), name='EdgeQP4')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:3 #2 ]', ), ), name='EdgeOR4')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:2 #80000 ]', ), ), name='EdgeRM4')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:3 #4 ]', ), ), name='EdgeRV4')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0 #8000000 ]', ), ), name='EdgeQB4')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:2 #80000000 ]', ), ), name='EdgeQC4')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0 #80000000 ]', ), ), name='EdgeQF4')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0 #40000 ]', ), ), name='EdgeQG4')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:3 #1 ]', ), ), name='EdgeVG4')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:9 #1 ]', ), ), name='EdgeGH3')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:8 #2000 ]', ), ), name='EdgeHI3')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:10 #8 ]', ), ), name='EdgeIU3')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:8 #40000000 ]', ), ), name='EdgeJK3')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:10 #40 ]', ), ), name='EdgeKL3')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:10 #20 ]', ), ), name='EdgeLT3')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:8 #400000 ]', ), ), name='EdgeAB3')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:8 #2 ]', ), ), name='EdgeBC3')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:10 #400 ]', ), ), name='EdgeCR3')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:8 #100000 ]', ), ), name='EdgeDE3')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:9 #80 ]', ), ), name='EdgeEF3')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:10 #20000 ]', ), ), name='EdgeFS3')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:9 #10000 ]', ), ), name='EdgeQO3')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:9 #200 ]', ), ), name='EdgeQN3')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:8 #80000000 ]', ), ), name='EdgeOV3')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:8 #1000000 ]', ), ), name='Egde OW3')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:9 #40000000 ]', ), ), name='Egde OX3')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:2 #20000 ]', ), ), name='EdgeOY3')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:10 #10000 ]', ), ), name='EdgeOL3')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:8 #200000 ]', ), ), name='EdgeOO3')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:8 #4000 ]', ), ), name='EdgeOM3')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:10 #1 ]', ), ), name='EdgeON3')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:9 #8 ]', ), ), name='EdgeQM3')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:9 #2000 ]', ), ), name='EdgeQP3')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:10 #200000 ]', ), ), name='EdgeOR3')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:10 #80 ]', ), ), name='EdgeRM3')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:3 #4 ]', ), ), name='EdgeRV3')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:9 #20000 ]', ), ), name='EdgeQB3')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:10 #100000 ]', ), ), name='EdgeQC3')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:9 #200000 ]', ), ), name='EdgeQF3')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:9 #100 ]', ), ), name='EdgeQG3')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:10 #80000 ]', ), ), name='EdgeVG3')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:11 #40000000 ]', ), ), name='EdgeGHBF')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:12 #8000 ]', ), ), name='EdgeHIBF')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:14 #1000 ]', ), ), name='EdgeIUBF')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:13 #8 ]', ), ), name='EdgeJKBF')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:12 #20000 ]', ), ), name='EdgeKLBF')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:14 #2000 ]', ), ), name='EdgeLTBF')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:11 #80000 ]', ), ), name='EdgeABBF')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:12 #20 ]', ), ), name='EdgeBCBF')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:14 #200 ]', ), ), name='EdgeCRBF')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:12 #800000 ]', ), ), name='EdgeDEBF')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:12 #80 ]', ), ), name='EdgeEFBF')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:13 #4000000 ]', ), ), name='EdgeFSBF')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:12 #10000000 ]', ), ), name='EdgeQOBF')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:13 #4000 ]', ), ), name='EdgeQNBF')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:10 #10 ]', ), ), name='EdgeOVBF')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:12 #4000 ]', ), ), name='Egde OWBF')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:12 #10000 ]', ), ), name='Egde OXBF')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:7 #40000 ]', ), ), name='EdgeOYBF')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:14 #20000 ]', ), ), name='EdgeOLBF')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:14 #2 ]', ), ), name='EdgeOOBF')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:12 #8 ]', ), ), name='EdgeOMBF')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:12 #40 ]', ), ), name='EdgeONBF')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:12 #100000 ]', ), ), name='EdgeQMBF')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:12 #40000000 ]', ), ), name='EdgeQPBF')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:14 #40000 ]', ), ), name='EdgeORBF')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:12 #20000000 ]', ), ), name='EdgeRMBF')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:7 #200000 ]', ), ), name='EdgeRVBF')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:10 #8000 ]', ), ), name='EdgeQBBF')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:10 #1000 ]', ), ), name='EdgeQCBF')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:13 #1 ]', ), ), name='EdgeQFBF')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:13 #400 ]', ), ), name='EdgeQGBF')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:13 #8000000 ]', ), ), name='EdgeVGBF')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:4 #100000 ]', ), ), name='EdgeGH2BF')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:5 #80 ]', ), ), name='EdgeHI2BF')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:7 #80 ]', ), ), name='EdgeIU2BF')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:5 #2000000 ]', ), ), name='EdgeJK2BF')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:5 #20 ]', ), ), name='EdgeKL2BF')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:7 #400 ]', ), ), name='EdgeLT2BF')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:4 #400 ]', ), ), name='EdgeAB2BF')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:4 #20000000 ]', ), ), name='EdgeBC2BF')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:7 #4 ]', ), ), name='EdgeCR2BF')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:5 #4000 ]', ), ), name='EdgeDE2BF')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:4 #8000000 ]', ), ), name='EdgeEF2BF')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:6 #80000 ]', ), ), name='EdgeFS2BF')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:5 #80000 ]', ), ), name='EdgeQO2BF')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:6 #10 ]', ), ), name='EdgeQN2BF')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:2 #8000 ]', ), ), name='EdgeOV2BF')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:5 #8 ]', ), ), name='Egde OW2BF')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:5 #40 ]', ), ), name='Egde OX2BF')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:7 #40000 ]', ), ), name='EdgeOY2BF')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:7 #20000 ]', ), ), name='EdgeOL2BF')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:6 #4000000 ]', ), ), name='EdgeOO2BF')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:4 #4000000 ]', ), ), name='EdgeOM2BF')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:4 #10000000 ]', ), ), name='EdgeON2BF')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:5 #400 ]', ), ), name='EdgeQM2BF')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:5 #100000 ]', ), ), name='EdgeQP2BF')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:7 #100000 ]', ), ), name='EdgeOR2BF')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:5 #40000 ]', ), ), name='EdgeRM2BF')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:7 #200000 ]', ), ), name='EdgeRV2BF')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:2 #8000000 ]', ), ), name='EdgeQB2BF')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:2 #4000000 ]', ), ), name='EdgeQC2BF')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:5 #400000 ]', ), ), name='EdgeQF2BF')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:6 #1 ]', ), ), name='EdgeQG2BF')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:6 #40000 ]', ), ), name='EdgeVG2BF')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#80000 ]', ), ), name='EdgeGH4BF')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0 #20 ]', ), ), name='EdgeHI4BF')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:3 #40000 ]', ), ), name='EdgeIU4BF')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0 #20000000 ]', ), ), name='EdgeJK4BF')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0 #80 ]', ), ), name='EdgeKL4BF')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:3 #80000 ]', ), ), name='EdgeLT4BF')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#80 ]', ), ), name='EdgeAB4BF')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#8000000 ]', ), ), name='EdgeBC4BF')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:3 #1000 ]', ), ), name='EdgeCR4BF')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0 #8000 ]', ), ), name='EdgeDE4BF')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#20000000 ]', ), ), name='EdgeEF4BF')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:2 #1000000 ]', ), ), name='EdgeFS4BF')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0 #100000 ]', ), ), name='EdgeQO4BF')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:2 #200 ]', ), ), name='EdgeQN4BF')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:2 #8000 ]', ), ), name='EdgeOV4BF')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0 #10 ]', ), ), name='Egde OW4BF')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0 #40 ]', ), ), name='Egde OX4BF')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:3 #40000000 ]', ), ), name='EdgeOY4BF')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:3 #20000000 ]', ), ), name='EdgeOL4BF')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:3 #8 ]', ), ), name='EdgeOO4BF')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#2000000 ]', ), ), name='EdgeOM4BF')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#10000000 ]', ), ), name='EdgeON4BF')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0 #1000 ]', ), ), name='EdgeQM4BF')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0 #400000 ]', ), ), name='EdgeQP4BF')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:3 #80000000 ]', ), ), name='EdgeOR4BF')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0 #200000 ]', ), ), name='EdgeRM4BF')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:4 #2 ]', ), ), name='EdgeRV4BF')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:2 #8000000 ]', ), ), name='EdgeQB4BF')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:2 #4000000 ]', ), ), name='EdgeQC4BF')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0 #1000000 ]', ), ), name='EdgeQF4BF')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:2 #20 ]', ), ), name='EdgeQG4BF')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:2 #2000000 ]', ), ), name='EdgeVG4BF')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:8 #400 ]', ), ), name='EdgeGH3BF')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:8 #20000000 ]', ), ), name='EdgeHI3BF')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:11 #4 ]', ), ), name='EdgeIU3BF')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:9 #40000 ]', ), ), name='EdgeJK3BF')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:8 #8000000 ]', ), ), name='EdgeKL3BF')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:11 #8 ]', ), ), name='EdgeLT3BF')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:7 #40000000 ]', ), ), name='EdgeAB3BF')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:8 #80000 ]', ), ), name='EdgeBC3BF')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:10 #20000000 ]', ), ), name='EdgeCR3BF')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:9 #40 ]', ), ), name='EdgeDE3BF')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:8 #20000 ]', ), ), name='EdgeEF3BF')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:10 #4000 ]', ), ), name='EdgeFS3BF')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:9 #800 ]', ), ), name='EdgeQO3BF')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:9 #80000000 ]', ), ), name='EdgeQN3BF')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:10 #10 ]', ), ), name='EdgeOV3BF')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:8 #2000000 ]', ), ), name='Egde OW3BF')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:8 #10000000 ]', ), ), name='Egde OX3BF')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:3 #40000000 ]', ), ), name='EdgeOY3BF')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:11 #400 ]', ), ), name='EdgeOL3BF')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:10 #400000 ]', ), ), name='EdgeOO3BF')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:8 #10000 ]', ), ), name='EdgeOM3BF')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:8 #40000 ]', ), ), name='EdgeON3BF')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:9 #4 ]', ), ), name='EdgeQM3BF')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:9 #1000 ]', ), ), name='EdgeQP3BF')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:11 #800 ]', ), ), name='EdgeOR3BF')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:9 #400 ]', ), ), name='EdgeRM3BF')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:4 #2 ]', ), ), name='EdgeRV3BF')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:10 #8000 ]', ), ), name='EdgeQB3BF')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:10 #1000 ]', ), ), name='EdgeQC3BF')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:9 #4000 ]', ), ), name='EdgeQF3BF')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:9 #4000000 ]', ), ), name='EdgeQG3BF')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:10 #2000 ]', ), ), name='EdgeVG3BF')
mdb.models['HexFiberArray'].parts['HexPackPart'].SetByBoolean(name=
    'cohesive_zone_radial_edges', sets=(
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeOL'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeOL2'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeOL2BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeOL3'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeOL3BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeOL4'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeOL4BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeOLBF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeOM'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeOM2'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeOM2BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeOM3'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeOM3BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeOM4'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeOM4BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeOMBF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeON'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeON2'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeON2BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeON3'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeON3BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeON4'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeON4BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeONBF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeOO'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeOO2'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeOO2BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeOO3'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeOO3BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeOO4'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeOO4BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeOOBF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeOV2'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeOV2BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeOV3'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeOV3BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeOV4'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeOV4BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeOVBF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeOY'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeOY2'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeOY2BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeOY3'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeOY3BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeOY4'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeOY4BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeOYBF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['Egde OXBF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['Egde OX4BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['Egde OX4'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['Egde OX3BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['Egde OX3'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['Egde OX2BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['Egde OX2'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['Egde OX'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['Egde OWBF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['Egde OW4BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['Egde OW4'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['Egde OW3BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['Egde OW3'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['Egde OW2BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['Egde OW2'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['Egde OW']))
mdb.models['HexFiberArray'].parts['HexPackPart'].seedEdgeByNumber(constraint=
    FINER, edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#93000000 #254 #20028500 #60000008 #95000000 #4c #4100428', 
    ' #60000 #93254000 #40000000 #410011 #400 #1524c #2000a000', ' #20002 ]', 
    ), ), number=1)
mdb.models['HexFiberArray'].parts['HexPackPart'].SetByBoolean(name=
    'seed_by_number_edges', sets=(
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeQBBF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeQB'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeQB2'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeQB2BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeQB3'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeQB3BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeQB4'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeQB4BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeQF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeQF2'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeQF2BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeQF3'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeQF3BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeQF4'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeQF4BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeQFBF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeQG'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeQGBF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeQG4BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeQG4'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeQG3BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeQG3'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeQG2BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeQG2'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeQM'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeQMBF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeQM4BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeQM4'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeQM3BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeQM3'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeQM2BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeQM2'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeQP'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeQPBF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeQP4BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeQP4'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeQP3BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeQP3'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeQP2BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeQP2'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeRM'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeRM2'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeRM2BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeRM3'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeRM3BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeRM4'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeRM4BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeRMBF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeRV'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeRV2'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeRV2BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeRV3'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeRV3BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeRV4'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeRV4BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeRVBF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeVG'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeVG2'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeVG2BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeVG3'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeVG3BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeVG4'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeVG4BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeVGBF']))
mdb.models['HexFiberArray'].parts['HexPackPart'].seedEdgeByBias(biasMethod=
    SINGLE, constraint=FINER, end1Edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0 #89e45000 #a080020 #5 #2 #8750c00 #1842001', 
    ' #200000 #0 #422750c #8a080 #0 #e4500000 #88200421 ]', ), ), maxSize=
    0.0206431043400878, minSize=0.0136549464476148)
mdb.models['HexFiberArray'].parts['HexPackPart'].SetByBoolean(name=
    'all_matrix_coh_zone_edges', sets=(
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeAB'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeAB2'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeAB2BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeAB3'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeAB3BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeAB4'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeAB4BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeABBF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeBC'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeBC2'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeBC2BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeBC3'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeBC3BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeBC4'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeBC4BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeBCBF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeCR'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeCR2'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeCR2BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeCR3'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeCR3BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeCR4'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeCR4BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeCRBF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeDE'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeDE2'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeDE2BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeDE3'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeDE3BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeDE4'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeDE4BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeDEBF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeEF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeEF2'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeEF2BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeEF3'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeEF3BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeEF4'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeEF4BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeEFBF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeFS'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeFS2'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeFS2BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeFS3'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeFS3BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeFS4'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeFS4BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeFSBF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeGH'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeGH2'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeGH2BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeGH3'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeGH3BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeGH4'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeGH4BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeGHBF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeHI'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeHI2'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeHI2BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeHI3'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeHI3BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeHI4'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeHI4BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeHIBF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeIU'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeIU2'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeIU2BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeIU3'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeIU3BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeIU4'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeIU4BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeIUBF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeJK'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeJK2'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeJK2BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeJK3'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeJK3BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeJK4'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeJK4BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeJKBF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeKL'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeKL2'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeKL2BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeKL3'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeKL3BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeKL4'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeKL4BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeKLBF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeLT'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeLT2'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeLT2BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeLT3'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeLT3BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeLT4'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeLT4BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeLTBF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeOL'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeOL2'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeOL2BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeOL3'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeOL3BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeOL4'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeOL4BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeOLBF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeOM'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeOM2'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeOM2BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeOM3'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeOM3BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeOM4'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeOM4BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeOMBF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeON'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeON2'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeON2BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeON3'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeON3BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeON4'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeON4BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeONBF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeOO'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeOO2'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeOO2BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeOO3'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeOO3BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeOO4'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeOO4BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeOOBF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeOR'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeOR2'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeOR2BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeOR3'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeOR3BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeOR4'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeOR4BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeORBF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeOV'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeOV2'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeOV2BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeOV3'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeOV3BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeOV4'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeOV4BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeOVBF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeOY'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeOY2'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeOY2BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeOY3'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeOY3BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeOY4'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeOY4BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeOYBF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeQB'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeQB2'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeQB2BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeQB3'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeQB3BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeQB4'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeQB4BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeQBBF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeQC'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeQC2'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeQC2BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeQC3'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeQC3BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeQC4'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeQC4BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeQCBF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeQF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeQF2'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeQF2BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeQF3'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeQF3BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeQF4'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeQF4BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeQFBF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeQG'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeQG2'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeQG2BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeQG3'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeQG3BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeQG4'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeQG4BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeQGBF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeQM'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeQM2'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeQM2BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeQM3'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeQM3BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeQM4'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeQM4BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeQMBF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeQN'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeQN2'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeQN2BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeQN3'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeQN3BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeQN4'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeQN4BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeQNBF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeQO'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeQO2'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeQO2BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeQO3'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeQO3BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeQO4'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeQO4BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeQOBF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeQP'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeQP2'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeQP2BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeQP3'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeQP3BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeQP4'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeQP4BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeQPBF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeRM'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeRM2'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeRM2BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeRM3'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeRM3BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeRM4'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeRM4BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeRMBF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeRV'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeRV2'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeRV2BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeRV3'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeRV3BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeRV4'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeRV4BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeRVBF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeVG'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeVG2'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeVG2BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeVG3'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeVG3BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeVG4'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeVG4BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeVGBF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['Egde OW'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['Egde OW2'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['Egde OW2BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['Egde OW3'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['Egde OW3BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['Egde OW4'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['Egde OW4BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['Egde OWBF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['Egde OX'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['Egde OX2'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['Egde OX2BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['Egde OX3'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['Egde OX3BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['Egde OX4'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['Egde OX4BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['Egde OXBF']))
mdb.models['HexFiberArray'].parts['HexPackPart'].SetByBoolean(name=
    'seed_by_bias', operation=DIFFERENCE, sets=(
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['all_matrix_coh_zone_edges'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['cohesive_zone_radial_edges'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['seed_by_number_edges']))
mdb.models['HexFiberArray'].parts['HexPackPart'].SetByBoolean(name=
    'seed_by_min_max_size', sets=(
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeDE'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeDE2'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeDE2BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeDE3'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeDE3BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeDE4'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeDE4BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeDEBF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeEF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeEF2'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeEF2BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeEF3'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeEF3BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeEF4'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeEF4BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeEFBF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeFS'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeFS2'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeFS2BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeFS3'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeFS3BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeFS4'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeFS4BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeFSBF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeJK'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeJK2'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeJK2BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeJK3'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeJK3BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeJK4'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeJK4BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeJKBF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeKL'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeKL2'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeKL2BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeKL3'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeKL3BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeKL4'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeKL4BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeKLBF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeLT'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeLT2'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeLT2BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeLT3'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeLT3BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeLT4'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeLTBF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeLT4BF']))
mdb.models['HexFiberArray'].parts['HexPackPart'].SetByBoolean(name=
    'seed_by_bias_number', operation=DIFFERENCE, sets=(
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['seed_by_bias'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['seed_by_min_max_size']))
mdb.models['HexFiberArray'].parts['HexPackPart'].SetByBoolean(name=
    'backface_flipSet', sets=(
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeAB3BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeAB2BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeAB4BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeABBF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeCR2BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeCR3BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeCR4BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeCRBF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeEF2BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeEF3BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeEF4BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeEFBF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeHI2BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeHI3BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeHI4BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeHIBF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeJK2BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeJK3BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeJK4BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeJKBF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeLT2BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeLT3BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeLTBF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeOR2BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeOR3BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeOR4BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeORBF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeQN2BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeQN3BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeQN4BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeQNBF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeLT4BF']))
mdb.models['HexFiberArray'].parts['HexPackPart'].SetByBoolean(name=
    'frontface_flipSet', sets=(
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeAB'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeAB2'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeAB3'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeAB4'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeCR'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeCR2'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeCR3'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeCR4'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeEF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeEF2'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeEF3'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeEF4'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeHI'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeHI2'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeHI3'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeHI4'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeJK'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeJK2'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeJK3'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeJK4'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeLT'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeLT2'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeLT3'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeLT4'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeOR'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeOR2'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeOR3'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeOR4'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeQN'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeQN2'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeQN3'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeQN4']))
mdb.models['HexFiberArray'].parts['HexPackPart'].SetByBoolean(name=
    'front_face_all', sets=(
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeAB'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeAB2'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeAB3'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeAB4'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeCR'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeCR2'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeCR3'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeCR4'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeEF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeEF2'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeEF3'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeEF4'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeHI'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeHI2'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeHI4'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeHI3'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeBC'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeBC2'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeBC3'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeBC4'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeFS'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeFS2'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeFS3'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeFS4'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeGH'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeGH2'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeGH3'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeGH4'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeIU'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeIU2'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeIU3'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeIU4'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeJK'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeJK2'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeJK3'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeJK4'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeKL'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeKL2'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeKL3'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeKL4'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeLT'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeLT2'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeLT3'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeQN2'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeQN3'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeQN4'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeQO'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeQO2'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeQO3'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeQO4'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeLT4'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeDE'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeDE2'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeDE3'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeDE4'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeQN'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeOR'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeOR2'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeOR3'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeOR4']))
mdb.models['HexFiberArray'].parts['HexPackPart'].SetByBoolean(name='Set-303', 
    operation=DIFFERENCE, sets=(
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['front_face_all'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['frontface_flipSet']))
mdb.models['HexFiberArray'].parts['HexPackPart'].SetByBoolean(name=
    'front_face_flipright', operation=DIFFERENCE, sets=(
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['front_face_all'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['frontface_flipSet']))
mdb.models['HexFiberArray'].parts['HexPackPart'].SetByBoolean(name=
    'frontface_rightflip', operation=DIFFERENCE, sets=(
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['front_face_all'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['frontface_flipSet']))
mdb.models['HexFiberArray'].parts['HexPackPart'].SetByBoolean(name=
    'frontface_rightflip', operation=DIFFERENCE, sets=(
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['front_face_all'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['frontface_flipSet']))
mdb.models['HexFiberArray'].parts['HexPackPart'].SetByBoolean(name=
    'hex_edges_frontflip', sets=(
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeOR'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeOR2'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeOR3'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeOR4']))
mdb.models['HexFiberArray'].parts['HexPackPart'].SetByBoolean(name=
    'final_frontFlip', sets=(
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['frontface_rightflip'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['hex_edges_frontflip']))
mdb.models['HexFiberArray'].parts['HexPackPart'].SetByBoolean(name=
    'seed_by_min_max_flip', sets=(
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeKL4'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeKL3'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeKL2'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeKL'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeFS4'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeFS3'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeFS2'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeFS'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeDE4'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeDE3'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeDE2'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeDE'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeLTBF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeLT3BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeLT2BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeLT4BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeJKBF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeJK4BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeJK3BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeJK2BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeEFBF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeEF4BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeEF3BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeEF2BF']))
mdb.models['HexFiberArray'].parts['HexPackPart'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=0.03)
mdb.models['HexFiberArray'].parts['HexPackPart'].seedEdgeByBias(biasMethod=
    SINGLE, constraint=FINER, end1Edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#20000000 #20088481 #11050000 #80000 #48000000 #200c120 #281800', 
    ' #400 #48120000 #400c0 #24060 #8 #88a0480 #14180008', ' #2000 ]', ), ), 
    maxSize=0.0206431043400878, minSize=0.0136549464476148)
mdb.models['HexFiberArray'].parts['HexPackPart'].seedEdgeByBias(biasMethod=
    SINGLE, constraint=FINER, end2Edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#20000000 #20000001 #10040000 #80000 #48000000 #2000000 #201000', 
    ' #400 #120000 #40000 #20040 #8 #480 #10100008', ' #2000 ]', ), ), maxSize=
    0.0206431043400878, minSize=0.0136549464476148)
mdb.models['HexFiberArray'].parts['HexPackPart'].seedEdgeByBias(biasMethod=
    SINGLE, constraint=FINER, end2Edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=(
    '[#48280280 #2120120 #84101200 #80041002 #20902400 #10a0281 #2010210', 
    ' #40100084 #20482402 #80010a01 #20301408 #c0280804 #12048120 #424002', 
    ' #41201 ]', ), ), number=10, ratio=1.44085545139978)
mdb.models['HexFiberArray'].parts['HexPackPart'].SetByBoolean(name=
    'frontface_flipset11', sets=(
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeBC'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeBC2'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeBC3'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeBC4'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeGH'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeGH2'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeGH3'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeGH4'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeIU'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeIU2'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeIU3'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeIU4']))
mdb.models['HexFiberArray'].parts['HexPackPart'].seedEdgeByBias(biasMethod=
    SINGLE, constraint=FINER, end1Edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#200 #100 #1000 #0 #2000 #200:2 #0', 
    ' #2 #1 #8 #200000 #40000 #20000 ]', ), ), number=10, ratio=
    1.44085545139978)
mdb.models['HexFiberArray'].parts['HexPackPart'].SetByBoolean(name=
    'backside_flip11', sets=(
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeAB2BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeAB3BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeAB4BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeABBF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeCR2BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeCR3BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeCR4BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeCRBF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeHI2BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeHI4BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeHIBF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeHI3BF']))
mdb.models['HexFiberArray'].parts['HexPackPart'].seedEdgeByBias(biasMethod=
    SINGLE, constraint=FINER, end1Edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#80 #20 #0 #1000 #400 #80 #0', 
    ' #40000004 #20000000 #0 #20000000 #80000 #8000 #0', ' #200 ]', ), ), 
    number=10, ratio=1.44085545139978)
mdb.models['HexFiberArray'].parts['HexPackPart'].SetByBoolean(name=
    'hexagon_backface_flip11', sets=(
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeQN2BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeQN3BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeQN4BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeQNBF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeORBF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeOR4BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeOR3BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeOR2BF']))
mdb.models['HexFiberArray'].parts['HexPackPart'].seedEdgeByBias(biasMethod=
    SINGLE, constraint=FINER, end1Edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:2 #200 #80000000 #0:2 #10 #100000 #0', 
    ' #80000000 #0 #800 #0 #4000 #40000 ]', ), ), number=10, ratio=
    1.44085545139978)
mdb.models['HexFiberArray'].parts['HexPackPart'].SetByBoolean(name=
    'hexagon_frontface_flip11', sets=(
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeOR4'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeOR3'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeOR2'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeOR'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeQO'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeQO2'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeQO3'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['EdgeQO4']))
mdb.models['HexFiberArray'].parts['HexPackPart'].seedEdgeByBias(biasMethod=
    SINGLE, constraint=FINER, end1Edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0 #2000000 #0 #2 #0 #1000000 #2000000', 
    ' #0:2 #10000 #200000 #0:2 #2 #1 ]', ), ), number=10, ratio=
    1.44085545139978)
mdb.models['HexFiberArray'].parts['HexPackPart'].seedEdgeByNumber(constraint=
    FINER, edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0 #89e45000 #a080020 #5 #2 #8750c00 #1842001', 
    ' #200000 #0 #422750c #8a080 #0 #e4500000 #88200421 ]', ), ), number=9)
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:14 #800 ]', ), ), name='Corner1')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:7 #10 ]', ), ), name='Corner2')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:10 #80000000 ]', ), ), name='Corner3')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:3 #4000 ]', ), ), name='Corner4')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:7 #80000 ]', ), ), name='Midedge1')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:4 #1 ]', ), ), name='Midedge2')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:11 #40 ]', ), ), name='Midedge3')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:3 #1000000 ]', ), ), name='Midedge4')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:7 #8000 ]', ), ), name='origin edge')
mdb.models['HexFiberArray'].parts['HexPackPart'].SetByBoolean(name='depth_bias'
    , sets=(
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['origin edge'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['Midedge1'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['Midedge2'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['Midedge3'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['Midedge4'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['Corner1'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['Corner2'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['Corner3'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['Corner4']))
mdb.models['HexFiberArray'].parts['HexPackPart'].seedEdgeByNumber(constraint=
    FINER, edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:3 #1004000 #1 #0:2 #88010 #0:2 #80000000', ' #40 #0:2 #800 ]', 
    ), ), number=5)
mdb.models['HexFiberArray'].parts['HexPackPart'].setElementType(elemTypes=(
    ElemType(elemCode=C3D8, elemLibrary=STANDARD, secondOrderAccuracy=OFF, 
    distortionControl=DEFAULT), ElemType(elemCode=C3D6, elemLibrary=STANDARD), 
    ElemType(elemCode=C3D4, elemLibrary=STANDARD)), regions=Region(
    cells=mdb.models['HexFiberArray'].parts['HexPackPart'].cells.getSequenceFromMask(
    mask=('[#7fce07fc #ce07fce0 #e07f ]', ), )))
mdb.models['HexFiberArray'].parts['HexPackPart'].setElementType(elemTypes=(
    ElemType(elemCode=C3D8, elemLibrary=STANDARD, secondOrderAccuracy=OFF, 
    distortionControl=DEFAULT), ElemType(elemCode=C3D6, elemLibrary=STANDARD), 
    ElemType(elemCode=C3D4, elemLibrary=STANDARD)), regions=Region(
    cells=mdb.models['HexFiberArray'].parts['HexPackPart'].cells.getSequenceFromMask(
    mask=('[#8031f803 #31f8031f #1f80 ]', ), )))
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:11 #1000000 ]', ), ), name='RadialBCBF')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:7 #100 ]', ), ), name='RadialDEBF')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:11 #4000 ]', ), ), name='RadialEFBF')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:14 #100 ]', ), ), name='RadialGHBF')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:4 #4000 ]', ), ), name='RadialBC2BF')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:7 #100 ]', ), ), name='RadialDE2BF')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:4 #10 ]', ), ), name='RadialEF2BF')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:7 #8 ]', ), ), name='RadialGH2BF')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#1000 ]', ), ), name='RadialBC3BF')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:3 #20000 ]', ), ), name='RadialDE3BF')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#4 ]', ), ), name='RadialEF3BF')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:3 #800 ]', ), ), name='RadialGH3BF')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:8 #4 ]', ), ), name='RadialBC4BF')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:3 #20000 ]', ), ), name='RadialDE4BF')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:7 #1000000 ]', ), ), name='RadialEF4BF')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:10 #40000000 ]', ), ), name='RadialGH4BF')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:11 #4000000 ]', ), ), name='RadialBC')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:6 #100 ]', ), ), name='RadialDE')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:11 #1000 ]', ), ), name='RadialEF')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:13 #800000 ]', ), ), name='RadialGH')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:4 #10000 ]', ), ), name='RadialBC2')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:6 #100 ]', ), ), name='RadialDE2')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:4 #4 ]', ), ), name='RadialEF2')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:6 #8000 ]', ), ), name='RadialGH2')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#4000 ]', ), ), name='RadialBC3')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:2 #2000 ]', ), ), name='RadialDE3')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#1 ]', ), ), name='RadialEF3')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:2 #200000 ]', ), ), name='RadialGH3')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:8 #10 ]', ), ), name='RadialBC4')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:2 #2000 ]', ), ), name='RadialDE4')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:7 #400000 ]', ), ), name='RadialEF4')
mdb.models['HexFiberArray'].parts['HexPackPart'].Set(edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#0:10 #200 ]', ), ), name='RadialGH4')
mdb.models['HexFiberArray'].parts['HexPackPart'].SetByBoolean(name=
    'seed_by_size', sets=(
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['RadialBC'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['RadialBC2'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['RadialBC2BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['RadialBC3'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['RadialBC3BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['RadialBC4'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['RadialBC4BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['RadialBCBF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['RadialDE'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['RadialDE2'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['RadialDE2BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['RadialDE3'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['RadialDE3BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['RadialDE4'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['RadialDE4BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['RadialDEBF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['RadialEF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['RadialEF2'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['RadialEF2BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['RadialEF3'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['RadialEF3BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['RadialEF4'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['RadialEF4BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['RadialEFBF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['RadialGH'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['RadialGH2'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['RadialGH2BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['RadialGH3'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['RadialGH3BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['RadialGH4'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['RadialGH4BF'], 
    mdb.models['HexFiberArray'].parts['HexPackPart'].sets['RadialGHBF']))
mdb.models['HexFiberArray'].parts['HexPackPart'].seedEdgeBySize(constraint=
    FINER, deviationFactor=0.1, edges=
    mdb.models['HexFiberArray'].parts['HexPackPart'].edges.getSequenceFromMask(
    mask=('[#5005 #0 #202000 #20800 #14014 #0 #8100', 
    ' #1400108 #14 #0 #40000200 #5005000 #0 #800000', ' #100 ]', ), ), 
    minSizeFactor=0.1, size=0.0171490253938513)
mdb.models['HexFiberArray'].parts['HexPackPart'].generateMesh()
mdb.models['HexFiberArray'].rootAssembly.Instance(dependent=ON, name=
    'HexPackPart-1', part=mdb.models['HexFiberArray'].parts['HexPackPart'])
mdb.models['HexFiberArray'].parts['HexPackPart'].deleteSets(setNames=(
    'Corner1', 'Corner2', 'Corner3', 'Corner4', 'EdgeAB', 'EdgeAB2', 
    'EdgeAB2BF', 'EdgeAB3', 'EdgeAB3BF', 'EdgeAB4', 'EdgeAB4BF', 'EdgeABBF', 
    'EdgeBC', 'EdgeBC2', 'EdgeBC2BF', 'EdgeBC3', 'EdgeBC3BF', 'EdgeBC4', 
    'EdgeBC4BF', 'EdgeBCBF', 'EdgeCR', 'EdgeCR2', 'EdgeCR2BF', 'EdgeCR3', 
    'EdgeCR3BF', 'EdgeCR4', 'EdgeCR4BF', 'EdgeCRBF', 'EdgeDE', 'EdgeDE2', 
    'EdgeDE2BF', 'EdgeDE3', 'EdgeDE3BF', 'EdgeDE4', 'EdgeDE4BF', 'EdgeDEBF', 
    'EdgeEF', 'EdgeEF2', 'EdgeEF2BF', 'EdgeEF3', 'EdgeEF3BF', 'EdgeEF4', 
    'EdgeEF4BF', 'EdgeEFBF', 'EdgeFS', 'EdgeFS2', 'EdgeFS2BF', 'EdgeFS3', 
    'EdgeFS3BF', 'EdgeFS4', 'EdgeFS4BF', 'EdgeFSBF', 'EdgeGH', 'EdgeGH2', 
    'EdgeGH2BF', 'EdgeGH3', 'EdgeGH3BF', 'EdgeGH4', 'EdgeGH4BF', 'EdgeGHBF', 
    'EdgeHI', 'EdgeHI2', 'EdgeHI2BF', 'EdgeHI3', 'EdgeHI3BF', 'EdgeHI4', 
    'EdgeHI4BF', 'EdgeHIBF', 'EdgeIU', 'EdgeIU2', 'EdgeIU2BF', 'EdgeIU3', 
    'EdgeIU3BF', 'EdgeIU4', 'EdgeIU4BF', 'EdgeIUBF', 'EdgeJK', 'EdgeJK2', 
    'EdgeJK2BF', 'EdgeJK3', 'EdgeJK3BF', 'EdgeJK4', 'EdgeJK4BF', 'EdgeJKBF', 
    'EdgeKL', 'EdgeKL2', 'EdgeKL2BF', 'EdgeKL3', 'EdgeKL3BF', 'EdgeKL4', 
    'EdgeKL4BF', 'EdgeKLBF', 'EdgeLT', 'EdgeLT2', 'EdgeLT2BF', 'EdgeLT3', 
    'EdgeLT3BF', 'EdgeLT4', 'EdgeLT4BF', 'EdgeLTBF', 'EdgeOL', 'EdgeOL2', 
    'EdgeOL2BF', 'EdgeOL3', 'EdgeOL3BF', 'EdgeOL4', 'EdgeOL4BF', 'EdgeOLBF', 
    'EdgeOM', 'EdgeOM2', 'EdgeOM2BF', 'EdgeOM3', 'EdgeOM3BF', 'EdgeOM4', 
    'EdgeOM4BF', 'EdgeOMBF', 'EdgeON', 'EdgeON2', 'EdgeON2BF', 'EdgeON3', 
    'EdgeON3BF', 'EdgeON4', 'EdgeON4BF', 'EdgeONBF', 'EdgeOO', 'EdgeOO2', 
    'EdgeOO2BF', 'EdgeOO3', 'EdgeOO3BF', 'EdgeOO4', 'EdgeOO4BF', 'EdgeOOBF', 
    'EdgeOR', 'EdgeOR2', 'EdgeOR2BF', 'EdgeOR3', 'EdgeOR3BF', 'EdgeOR4', 
    'EdgeOR4BF', 'EdgeORBF', 'EdgeOV', 'EdgeOV2', 'EdgeOV2BF', 'EdgeOV3', 
    'EdgeOV3BF', 'EdgeOV4', 'EdgeOV4BF', 'EdgeOVBF', 'EdgeOY', 'EdgeOY2', 
    'EdgeOY2BF', 'EdgeOY3', 'EdgeOY3BF', 'EdgeOY4', 'EdgeOY4BF', 'EdgeOYBF', 
    'EdgeQB', 'EdgeQB2', 'EdgeQB2BF', 'EdgeQB3', 'EdgeQB3BF', 'EdgeQB4', 
    'EdgeQB4BF', 'EdgeQBBF', 'EdgeQC', 'EdgeQC2', 'EdgeQC2BF', 'EdgeQC3', 
    'EdgeQC3BF', 'EdgeQC4', 'EdgeQC4BF', 'EdgeQCBF', 'EdgeQF', 'EdgeQF2', 
    'EdgeQF2BF', 'EdgeQF3', 'EdgeQF3BF', 'EdgeQF4', 'EdgeQF4BF', 'EdgeQFBF', 
    'EdgeQG', 'EdgeQG2', 'EdgeQG2BF', 'EdgeQG3', 'EdgeQG3BF', 'EdgeQG4', 
    'EdgeQG4BF', 'EdgeQGBF', 'EdgeQM', 'EdgeQM2', 'EdgeQM2BF', 'EdgeQM3', 
    'EdgeQM3BF', 'EdgeQM4', 'EdgeQM4BF', 'EdgeQMBF', 'EdgeQN', 'EdgeQN2', 
    'EdgeQN2BF', 'EdgeQN3', 'EdgeQN3BF', 'EdgeQN4', 'EdgeQN4BF', 'EdgeQNBF', 
    'EdgeQO', 'EdgeQO2', 'EdgeQO2BF', 'EdgeQO3', 'EdgeQO3BF', 'EdgeQO4', 
    'EdgeQO4BF', 'EdgeQOBF', 'EdgeQP', 'EdgeQP2', 'EdgeQP2BF', 'EdgeQP3', 
    'EdgeQP3BF', 'EdgeQP4', 'EdgeQP4BF', 'EdgeQPBF', 'EdgeRM', 'EdgeRM2', 
    'EdgeRM2BF', 'EdgeRM3', 'EdgeRM3BF', 'EdgeRM4', 'EdgeRM4BF', 'EdgeRMBF', 
    'EdgeRV', 'EdgeRV2', 'EdgeRV2BF', 'EdgeRV3', 'EdgeRV3BF', 'EdgeRV4', 
    'EdgeRV4BF', 'EdgeRVBF', 'EdgeVG', 'EdgeVG2', 'EdgeVG2BF', 'EdgeVG3', 
    'EdgeVG3BF', 'EdgeVG4', 'EdgeVG4BF', 'EdgeVGBF', 'Egde OW', 'Egde OW2', 
    'Egde OW2BF', 'Egde OW3', 'Egde OW3BF', 'Egde OW4', 'Egde OW4BF', 
    'Egde OWBF', 'Egde OX', 'Egde OX2', 'Egde OX2BF', 'Egde OX3', 'Egde OX3BF', 
    'Egde OX4', 'Egde OX4BF', 'Egde OXBF'))
mdb.models['HexFiberArray'].parts['HexPackPart'].deleteSets(setNames=(
    'Midedge1', 'Midedge2', 'Midedge3', 'Midedge4'))
mdb.models['HexFiberArray'].parts['HexPackPart'].deleteSets(setNames=(
    'RadialKLBF', 'RadialAB', 'RadialAB2', 'RadialAB2BF', 'RadialAB3', 
    'RadialAB3BF', 'RadialAB4', 'RadialAB4BF', 'RadialABBF', 'RadialBC', 
    'RadialBC2', 'RadialBC2BF', 'RadialBC3', 'RadialBC3BF', 'RadialBC4', 
    'RadialBC4BF', 'RadialBCBF', 'RadialCD', 'RadialCD2', 'RadialCD2BF', 
    'RadialCD3', 'RadialCD3BF', 'RadialCD4', 'RadialCD4BF', 'RadialCDBF', 
    'RadialDE', 'RadialDE2', 'RadialDE2BF', 'RadialDE3', 'RadialDE3BF', 
    'RadialDE4', 'RadialDE4BF', 'RadialDEBF', 'RadialEF', 'RadialEF2', 
    'RadialEF2BF', 'RadialEF3', 'RadialEF3BF', 'RadialEF4', 'RadialEF4BF', 
    'RadialEFBF', 'RadialFG', 'RadialFG2', 'RadialFG2BF', 'RadialFG3', 
    'RadialFG3BF', 'RadialFG4', 'RadialFG4BF', 'RadialFGBF', 'RadialGH', 
    'RadialGH2', 'RadialGH2BF', 'RadialGH3', 'RadialGH3BF', 'RadialGH4', 
    'RadialGH4BF', 'RadialGHBF', 'RadialKL', 'RadialKL2', 'RadialKL2BF', 
    'RadialKL3', 'RadialKL3BFBF', 'RadialKL4', 'RadialKL4BF'))
mdb.models['HexFiberArray'].parts['HexPackPart'].deleteSets(setNames=(
    'Set-303', 'cohesive_zone_radial_edges'))
mdb.models['HexFiberArray'].parts['HexPackPart'].deleteSets(setNames=(
    'origin edge', 'hexagon_frontface_flip11', 'hexagon_backface_flip11', 
    'hex_edges_frontflip', 'frontface_rightflip', 'frontface_flipset11', 
    'frontface_flipSet', 'front_face_flipright', 'final_frontFlip'))
mdb.models['HexFiberArray'].parts['HexPackPart'].deleteSets(setNames=(
    'backside_flip11', 'backface_flipSet'))
del mdb.models['HexFiberArray'].parts['HexPackPart'].sets['front_face_all']
mdb.models['HexFiberArray'].parts['HexPackPart'].deleteSets(setNames=(
    'all_fiber_coh_zone', 'center_fiber_coh_zone', 'coh_center_ring', 
    'coh_corner1_ring', 'coh_corner2_ring', 'coh_corner3_ring', 
    'coh_corner4_ring', 'cohesive_zoneA_cell', 'cohesive_zoneB_cell', 
    'corner1_fiber', 'corner1_fiber_coh_zone', 'corner2_fiber', 
    'corner2_fiber_coh_zone', 'corner3_fiber', 'corner3_fiber_coh_zone', 
    'corner4_fiber', 'corner4_fiber_coh_zone', 'fiber_cell_A', 'middle_cell_1', 
    'middle_cell_2'))
mdb.models['HexFiberArray'].parts['HexPackPart'].deleteSets(setNames=(
    'all_cells', 'all_matrix_coh_zone_edges', 'center_fiber', 'depth_bias', 
    'seed_by_bias', 'seed_by_bias_number', 'seed_by_min_max_flip', 
    'seed_by_min_max_size', 'seed_by_number_edges', 'seed_by_size'))
mdb.models['HexFiberArray'].materials['MatFiber'].elastic.setValues(table=((
    230000.0, 0.1), ))
mdb.models['HexFiberArray'].materials['MatMatrix'].elastic.setValues(table=((
    2000.0, 0.33), ))
mdb.models['HexFiberArray'].rootAssembly.regenerate()
mdb.Job(activateLoadBalancing=False, atTime=None, contactPrint=OFF, 
    description='', echoPrint=OFF, explicitPrecision=SINGLE, 
    getMemoryFromAnalysis=True, historyPrint=OFF, memory=90, memoryUnits=
    PERCENTAGE, model='HexFiberArray', modelPrint=OFF, multiprocessingMode=
    DEFAULT, name='UD_hex_homogen', nodalOutputPrecision=SINGLE, numCpus=1, 
    numDomains=1, numGPUs=0, numThreadsPerMpiProcess=1, queue=None, 
    resultsFormat=ODB, scratch='', type=ANALYSIS, userSubroutine='', waitHours=
    0, waitMinutes=0)
mdb.models['HexFiberArray'].keywordBlock.setValues(edited=False)
mdb.models['HexFiberArray'].rootAssembly.Set(name='RVE_AG_NegX', nodes=
    [mdb.models['HexFiberArray'].rootAssembly.instances['HexPackPart-1'].nodes.getSequenceFromMask(
    mask=('[#b307f0f0 #ea8ceacc #353e03c3 #f0f55c9 #15334cf8 #b07f0f07 #23b2', 
    ' #fffff000 #3ff #0 #ffffff00 #3f #ffffc0 #0', 
    ' #ff800 #e0000000 #3fffff #80000000 #ffffff #fc000000 #fffff', 
    ' #c0000000 #ffffff #ff0000 #3fe #fffe #c03fff80 #ffffffff', 
    ' #7 #ff000000 #1fffffff #0:2 #fffe #3fff80 #ff80', 
    ' #3fffe00 #fffffffc #0 #c0000000 #fffffff #0:2 #3ffff000', 
    ' #7fc00000 #ff000000 #1ffff #fffc0000 #fff00007 #c000001f #ffffff', 
    ' #0 #7fc03fc #ffc01ff0 #1f #ff000000 #fffff #0', 
    ' #fffffffe #ffc0003f #f000001f #7ff #f00007fc #1fff #ffffffc0', 
    ' #f #0 #fffffffc #0:2 #ffff0000 #fc000003 #f0000007', 
    ' #1fffff #c0000000 #7fffff #ff000000 #3ffff #f0000000 #3fffff', 
    ' #0 #1ff00ff #1fffc00 #7fff0000 #0 #3ffff00 #80000000', 
    ' #ffffffff #fff0000f #fc000007 #c01ff007 #7f #ffffc000 #fff', 
    ' #0 #fffffc00 #ff #3ffff00 #0 #3fe000 #80000000', 
    ' #ffffff #fffe0000 #fff80003 #f #ffffffc0 #ff000000 #f803fe00', 
    ' #fff8000f #f007fc03 #ffffffff #1 #0 #fffe0 #ff803fe0', 
    ' #3fe00 #0 #ffffff00 #3fffffff #0:9 #fffffff0 #3ffffff', 
    ' #0:16 #fffffc00 #ffffffff #3ffff #0:8 #fffffffc #ffffffff', 
    ' #3ff #0:7 #fc000000 #ffffffff:2 #3 #0:7 #fc000000', 
    ' #ffffffff:2 #3 #0:7 #fc000000 #ffffffff:2 #3 #0:5', 
    ' #ffffffff #3fffff #0:5 #fffffff0 #3ffffff #0:3 #fffc0000', 
    ' #ffffffff:4 #1fffffff #0:14 #ffff0000 #ffffffff:4 #7ffffff #0:16', 
    ' #fffffff0 #3ffffff #0:5 #ffffff00 #3fffffff #0:8 #ffffffc0', 
    ' #ffffffff #3fff #0:3 #ffc00000 #ffffffff #fff #0:8', 
    ' #fffc0000 #ffffffff #ff #0:15 #ffffffc0 #ffffffff #3fff', 
    ' #0:7 #c0000000 #ffffffff:2 #3f #0:5 #ffc00000 #ffffffff', 
    ' #3fffffff #0:6 #ffffc000 #ffffffff #3fffff #0:8 #ffffc000', 
    ' #ffffffff #3fffff #0:6 #ffffffc0 #fffffff #0:3 #fc000000', 
    ' #ffffffff #ffff #0:10 #fffffe00 #ffffffff:4 #fffff #0:11', 
    ' #80000000 #ffffffff:5 #3ff #0:8 #fffc0000 #ffffffff #ff', 
    ' #0:4 #ffc00000 #ffffffff #fff #0:7 #fffffffc #ffffffff', 
    ' #3ff #0:5 #fc000000 #ffffffff #ffff #0:8 #ffc00000', 
    ' #ffffffff #fff #0:15 #fffffc00 #ffffffff #3ffff #0:8', 
    ' #fffffffc #ffffffff #3ff #0:7 #fc000000 #ffffffff:2 #3', 
    ' #0:7 #fc000000 #ffffffff:2 #3 #0:7 #fc000000 #ffffffff:2', 
    ' #3 #0:5 #fffc0000 #ffffffff #ff #0:4 #ffc00000', 
    ' #ffffffff #fff #0:10 #ffffffe0 #ffffffff:4 #ffff #0:9', 
    ' #fffff800 #ffffffff:4 #3fffff #0:8 #c0000000 #ffffffff #fffff', 
    ' #0:5 #fffffffc #ffffff #0:5 #c0000000 #ffffffff:2 #3f', 
    ' #0:5 #fffff000 #ffffffff #3 #0:8 #ffffff00 #3fffffff', 
    ' #0:16 #ffffc000 #ffffffff #3fffff #0:8 #ffffffc0 #ffffffff', 
    ' #3fff #0:5 #c0000000 #ffffffff:2 #3f #0:5 #ffc00000', 
    ' #ffffffff #3fffffff #0:8 #ffc00000 #ffffffff #3fffffff #0:5', 
    ' #f0000000 #ffffffff #3ffff #0:3 #ffff0000 #ffffffff #3f', 
    ' #0:2 #c0000000 #ffffffff:5 #1ff #0:6 #f0000000 #ffffffff:5', 
    ' #7f #0:15 #ffff0000 #ffffffff #3f #0:4 #fff00000', 
    ' #ffffffff #3ff #0:6 #fffffffc #ffffffff #3ff ]', ), )])
mdb.models['HexFiberArray'].rootAssembly.Set(name='RVE_AG_PosX', nodes=
    [mdb.models['HexFiberArray'].rootAssembly.instances['HexPackPart-1'].nodes.getSequenceFromMask(
    mask=(
    '[#4cf80f0f #15731533 #cac1fc3c #f0f0aa36 #eaccb307 #4f80f0f8 #ffffdc4d', 
    ' #fff #0 #fffffc00 #ff #0 #ff000000 #3ff', 
    ' #7fc #1ffffff0 #0 #7fffffc0 #0 #3ffffff #0', 
    ' #3ffffff0 #0 #ff00ff00 #fffc0001 #ff000001 #7f #0', 
    ' #fffffff8 #ff #e0000000 #ffffffff #fffc0003 #ff000001 #c000007f', 
    ' #ff00007f #1ff #0 #3fffffff #0 #f0000000 #3ffffff', 
    ' #fc000000 #fff #80000000 #ff #fffe0000 #3ff #ffff8', 
    ' #3fffe0 #ff000000 #3ffff #f803fc00 #3fe00f #f00fffe0 #ffffff', 
    ' #f0000000 #ffffffff #1 #0 #fffe0 #3fff800 #ff800', 
    ' #3fffe000 #0 #fffffff0 #3 #0 #3fffffff #c0000000', 
    ' #ffff #0 #ff8 #ffe00000 #3fff #ff800000 #ffff', 
    ' #fffc0000 #fff #ffc00000 #ffff #fe00ff00 #fe000003 #800000ff', 
    ' #ffc03fff #fc0000ff #7fffffff #0:2 #3fff8 #3fe00ff8 #ffffff80', 
    ' #3fff #0 #fffff000 #3ff #0 #fc000000 #fff', 
    ' #1ff0 #7fffffc0 #0 #1ffff #7fffc #fffff000 #3f', 
    ' #ff0000 #7fc01ff #7fff0 #ff80000 #0 #fffffffe #ffc0003f', 
    ' #f000001f #7fc01f #fffc01ff #ffffffff #ff #0:8 #ffffc000', 
    ' #ffffffff #f #0:15 #fffffffc #ffffffff #3ff #0:7', 
    ' #fc000000 #ffffffff:2 #3 #0:7 #fffc0000 #ffffffff #3ffffff', 
    ' #0:8 #fffc0000 #ffffffff #3ffffff #0:8 #fffc0000 #ffffffff', 
    ' #3ffffff #0:6 #fffffc00 #ffffffff #0:5 #ffffc000 #ffffffff', 
    ' #f #0:9 #e0000000 #ffffffff:5 #ff #0:13 #f8000000', 
    ' #ffffffff:5 #3f #0:8 #ffffc000 #ffffffff #f #0:4', 
    ' #fffc0000 #ffffffff #ff #0:6 #c0000000 #ffffffff:2 #3f', 
    ' #0:7 #fffff000 #ffffffff #3 #0:8 #ffffff00 #3fffffff', 
    ' #0:16 #ffffc000 #ffffffff #3fffff #0:8 #ffffffc0 #ffffffff', 
    ' #3fff #0:5 #c0000000 #ffffffff:2 #3f #0:5 #ffc00000', 
    ' #ffffffff #3fffffff #0:8 #ffc00000 #ffffffff #3fffffff #0:5', 
    ' #f0000000 #ffffffff #3ffff #0:3 #ffff0000 #ffffffff #3f', 
    ' #0:2 #c0000000 #ffffffff:5 #1ff #0:11 #fff00000 #ffffffff:4', 
    ' #7fffffff #0:16 #ffffff00 #3fffffff #0:5 #fffff000 #ffffffff', 
    ' #3 #0:7 #fffffc00 #ffffffff #3ffff #0:5 #ffff0000', 
    ' #ffffffff #3f #0:8 #fffff000 #ffffffff #3 #0:15', 
    ' #fffc0000 #ffffffff #3ffffff #0:8 #fffffc00 #ffffffff #3ffff', 
    ' #0:8 #fffffffc #ffffffff #3ff #0:8 #fffffffc #ffffffff', 
    ' #3ff #0:8 #fffffffc #ffffffff #3ff #0:5 #ffffff00', 
    ' #3fffffff #0:5 #fffff000 #ffffffff #3 #0:2 #fc000000', 
    ' #ffffffff:5 #1f #0:9 #ffffffff:5 #7ff #0:15 #fff00000', 
    ' #ffffffff #3ff #0:4 #ff000000 #ffffffff #3fff #0:6', 
    ' #ffffffc0 #ffffffff #3fff #0 #ffc00000 #ffffffff #fff', 
    ' #0:8 #fffc0000 #ffffffff #ff #0:15 #ffffffc0 #ffffffff', 
    ' #3fff #0:7 #c0000000 #ffffffff:2 #3f #0:5 #ffc00000', 
    ' #ffffffff #3fffffff #0:6 #ffffc000 #ffffffff #3fffff #0:8', 
    ' #ffffc000 #ffffffff #3fffff #0:6 #ffffffc0 #fffffff #0:3', 
    ' #fc000000 #ffffffff #ffff #0:10 #fffffe00 #ffffffff:4 #fffff', 
    ' #0:7 #ffffff80 #ffffffff:4 #3ffff #0:8 #fc000000 #ffffffff', 
    ' #ffff #0:4 #c0000000 #ffffffff #fffff #0:5 #fc000000', 
    ' #ffffffff:2 #3 ]', ), )])
mdb.models['HexFiberArray'].rootAssembly.Set(name='RVE_AG_NegY', nodes=
    [mdb.models['HexFiberArray'].rootAssembly.instances['HexPackPart-1'].nodes.getSequenceFromMask(
    mask=('[#0:2 #f000001b #c0a0 #0 #6c0 #a3c #0:30', 
    ' #7e0000 #c01f8000 #3fc03f #0:10 #7f80 #fffc01fe #3', 
    ' #0:4 #ff000000 #e0000001 #3fff #0:3 #ffe01ff0 #3f', 
    ' #0:26 #80000000 #e000001f #f00ff007 #f #0:9 #1fe00000', 
    ' #7f8000 #ffff #0:3 #ff000000 #e0000001 #3fff #0:2', 
    ' #3ffff #0:169 #fffffffc #3ffff #0:54 #ffffc000 #ffffffff', 
    ' #3fff #0:49 #fffffc00 #ffffffff #3ffff #0:27 #fffc0000', 
    ' #ffffffff #3ffffff #0:163 #fffffffc #3ffff #0:54 #ffffc000', 
    ' #ffffffff #3fff #0:51 #fffc0000 #ffffffff #3ffffff #0:19', 
    ' #fffffc00 #ffffffff #3ffff ]', ), )])
mdb.models['HexFiberArray'].rootAssembly.Set(name='RVE_AG_PosY', nodes=
    [mdb.models['HexFiberArray'].rootAssembly.instances['HexPackPart-1'].nodes.getSequenceFromMask(
    mask=('[#6c #302800f0 #0 #6c0000 #80f00000 #2 #e0000000', 
    ' #f8000007 #fc03fc01 #3 #0:11 #1fe000 #ff007f80 #ff', 
    ' #0:6 #1ff00000 #fe000000 #3ff #0:3 #fffe01ff #3', 
    ' #0:26 #7e00000 #1f80000 #3fc03fc #0:12 #80001fe0 #ffff007f', 
    ' #0:5 #7fc00000 #f8000000 #fff #0 #c0000000 #ffff', 
    ' #0:32 #c0000000 #ffffffff #3fff #0:58 #fffc0000 #ffffffff', 
    ' #3ffff #0:60 #ffffffc0 #ffffffff #3fff #0:20 #ffffc000', 
    ' #ffffffff #3fffff #0:163 #ffffffc0 #3fffff #0:58 #fc000000', 
    ' #ffffffff #3ffffff #0:48 #ffc00000 #ffffffff #3fffffff #0:26', 
    ' #ffffc000 #ffffffff #3fffff ]', ), )])
mdb.models['HexFiberArray'].rootAssembly.Set(name='RVE_AG_NegZ', nodes=
    [mdb.models['HexFiberArray'].rootAssembly.instances['HexPackPart-1'].nodes.getSequenceFromMask(
    mask=('[#0:4 #c00f0000 #f #3f03 #0:70 #f80001fe #ffff007', 
    ' #0:7 #3ffff8 #7ffff00 #3fffff0 #3fc01f8 #0:13 #f007f800', 
    ' #fff #0:5 #ffffe0 #1ffffc00 #fffffc0 #ff007e0 #0:372', 
    ' #fc000000 #ffffffff #3ffffff #0:64 #ffffffc0 #ffffffff:3 #3fffffff', 
    ' #0:5 #fffc0000 #ffffffff #3 #0:68 #ffffc000 #ffffffff', 
    ' #3fff #0:55 #fffc0000 #ffffffff:4 #3ff #0:9 #ffffc000', ' #3fffffff ]', 
    ), )])
mdb.models['HexFiberArray'].rootAssembly.Set(name='RVE_AG_PosZ', nodes=
    [mdb.models['HexFiberArray'].rootAssembly.instances['HexPackPart-1'].nodes.getSequenceFromMask(
    mask=('[#0 #fc000f #c000000 #3f0 #0:15 #1fe00 #fff007f8', 
    ' #f #0:8 #ffffe #1ffffc0 #fffffc #ff007e #0:14', 
    ' #e0000000 #3fffc01f #0:7 #ffffe0 #1ffffc00 #fffffc0 #ff007e0', 
    ' #0:113 #fffc0000 #ffffffff #3ffff #0:64 #ffffffc0 #ffffffff:3', 
    ' #3fffffff #0:10 #fffffffc #3ffff #0:72 #ffffc000 #ffffffff', 
    ' #3fff #0:64 #fc000000 #ffffffff:4 #3ffff #0:5 #ffffffc0', ' #3fffff ]', 
    ), )])
mdb.models['HexFiberArray'].rootAssembly.Set(elements=
    [mdb.models['HexFiberArray'].rootAssembly.elements, 
    mdb.models['HexFiberArray'].rootAssembly.instances['HexPackPart-1'].elements]
    , name='RVE_AG_ALL_ORIG_ELEMENTS')
mdb.models['HexFiberArray'].rootAssembly.Set(name=
    'RVE_AG_NodePairing_IgnoreNodeset', objectToCopy=
    mdb.models['HexFiberArray'].rootAssembly.sets['RVE_AG_PosX'])
mdb.models['HexFiberArray'].rootAssembly.SetByBoolean(name=
    'RVE_AG_PosY_RVE_AG_RED', operation=DIFFERENCE, sets=
    [mdb.models['HexFiberArray'].rootAssembly.sets['RVE_AG_PosY'], 
    mdb.models['HexFiberArray'].rootAssembly.sets['RVE_AG_NodePairing_IgnoreNodeset']])
mdb.models['HexFiberArray'].rootAssembly.SetByBoolean(name=
    'RVE_AG_NodePairing_IgnoreNodeset', operation=UNION, sets=
    [mdb.models['HexFiberArray'].rootAssembly.sets['RVE_AG_NodePairing_IgnoreNodeset'], 
    mdb.models['HexFiberArray'].rootAssembly.sets['RVE_AG_PosY_RVE_AG_RED']])
mdb.models['HexFiberArray'].rootAssembly.SetByBoolean(name=
    'RVE_AG_PosZ_RVE_AG_RED', operation=DIFFERENCE, sets=
    [mdb.models['HexFiberArray'].rootAssembly.sets['RVE_AG_PosZ'], 
    mdb.models['HexFiberArray'].rootAssembly.sets['RVE_AG_NodePairing_IgnoreNodeset']])
mdb.models['HexFiberArray'].rootAssembly.SetByBoolean(name=
    'RVE_AG_NodePairing_IgnoreNodeset', operation=UNION, sets=
    [mdb.models['HexFiberArray'].rootAssembly.sets['RVE_AG_NodePairing_IgnoreNodeset'], 
    mdb.models['HexFiberArray'].rootAssembly.sets['RVE_AG_PosZ_RVE_AG_RED']])
del mdb.models['HexFiberArray'].rootAssembly.sets['RVE_AG_NodePairing_IgnoreNodeset']
mdb.models['HexFiberArray'].rootAssembly.SetFromNodeLabels(name=
    'RVE_AG_NegX_RVE_AGSORT', nodeLabels=[['HexPackPart-1', [8, 5, 6, 7, 16, 
    13, 14, 15, 17, 18, 19, 26, 25, 30, 29, 32, 35, 36, 39, 40, 42, 44, 46, 47, 
    48, 51, 52, 56, 58, 60, 62, 64, 65, 66, 63, 72, 73, 74, 71, 82, 83, 84, 86, 
    85, 89, 91, 93, 94, 97, 100, 103, 104, 105, 107, 109, 111, 114, 115, 116, 
    113, 122, 123, 124, 121, 132, 133, 134, 136, 135, 140, 139, 143, 145, 146, 
    149, 150, 153, 155, 157, 161, 162, 163, 172, 169, 170, 171, 180, 177, 178, 
    179, 181, 182, 183, 190, 189, 192, 194, 197, 198, 200, 201, 202, 206, 242, 
    241, 240, 239, 238, 237, 251, 250, 249, 248, 247, 246, 245, 244, 243, 257, 
    256, 255, 254, 253, 252, 266, 265, 264, 263, 262, 261, 260, 259, 258, 334, 
    333, 332, 331, 330, 329, 343, 342, 341, 340, 339, 338, 337, 336, 335, 349, 
    348, 347, 346, 345, 344, 358, 357, 356, 355, 354, 353, 352, 351, 350, 399, 
    398, 397, 396, 395, 394, 393, 392, 391, 408, 407, 406, 405, 404, 403, 402, 
    401, 400, 468, 467, 466, 465, 464, 463, 462, 461, 460, 517, 516, 515, 514, 
    513, 512, 511, 510, 525, 524, 523, 522, 521, 520, 519, 518, 534, 533, 532, 
    531, 530, 529, 528, 527, 526, 583, 582, 581, 580, 579, 578, 577, 576, 591, 
    590, 589, 588, 587, 586, 585, 584, 600, 599, 598, 597, 596, 595, 594, 593, 
    592, 643, 642, 641, 640, 639, 638, 637, 636, 635, 651, 650, 649, 648, 647, 
    646, 645, 644, 660, 659, 658, 657, 656, 655, 654, 653, 652, 711, 710, 709, 
    708, 707, 706, 705, 704, 703, 719, 718, 717, 716, 715, 714, 713, 712, 728, 
    727, 726, 725, 724, 723, 722, 721, 720, 760, 759, 758, 757, 756, 755, 754, 
    753, 778, 777, 776, 775, 774, 773, 772, 771, 770, 807, 806, 805, 804, 803, 
    802, 816, 815, 814, 813, 812, 811, 810, 809, 808, 848, 847, 846, 845, 844, 
    843, 842, 841, 840, 854, 853, 852, 851, 850, 849, 871, 870, 869, 868, 867, 
    866, 865, 864, 863, 890, 889, 888, 887, 886, 885, 884, 883, 882, 881, 880, 
    879, 878, 877, 876, 875, 874, 873, 872, 899, 898, 897, 896, 895, 894, 893, 
    892, 891, 961, 960, 959, 958, 957, 956, 955, 954, 953, 980, 979, 978, 977, 
    976, 975, 974, 973, 972, 971, 970, 969, 968, 967, 966, 965, 964, 963, 962, 
    989, 988, 987, 986, 985, 984, 983, 982, 981, 1063, 1062, 1061, 1060, 1059, 
    1058, 1072, 1071, 1070, 1069, 1068, 1067, 1066, 1065, 1064, 1101, 1100, 
    1099, 1098, 1097, 1096, 1110, 1109, 1108, 1107, 1106, 1105, 1104, 1103, 
    1102, 1136, 1135, 1134, 1133, 1132, 1131, 1130, 1129, 1128, 1169, 1168, 
    1167, 1166, 1165, 1164, 1163, 1162, 1178, 1177, 1176, 1175, 1174, 1173, 
    1172, 1171, 1170, 1192, 1191, 1190, 1189, 1188, 1187, 1201, 1200, 1199, 
    1198, 1197, 1196, 1195, 1194, 1193, 1207, 1206, 1205, 1204, 1203, 1202, 
    1216, 1215, 1214, 1213, 1212, 1211, 1210, 1209, 1208, 1284, 1283, 1282, 
    1281, 1280, 1279, 1293, 1292, 1291, 1290, 1289, 1288, 1287, 1286, 1285, 
    1299, 1298, 1297, 1296, 1295, 1294, 1308, 1307, 1306, 1305, 1304, 1303, 
    1302, 1301, 1300, 1397, 1396, 1395, 1394, 1393, 1392, 1391, 1390, 1389, 
    1406, 1405, 1404, 1403, 1402, 1401, 1400, 1399, 1398, 1439, 1438, 1437, 
    1436, 1435, 1434, 1433, 1432, 1431, 1472, 1471, 1470, 1469, 1468, 1467, 
    1466, 1465, 1480, 1479, 1478, 1477, 1476, 1475, 1474, 1473, 1489, 1488, 
    1487, 1486, 1485, 1484, 1483, 1482, 1481, 1530, 1529, 1528, 1527, 1526, 
    1525, 1524, 1523, 1539, 1538, 1537, 1536, 1535, 1534, 1533, 1532, 1531, 
    1565, 1564, 1563, 1562, 1561, 1560, 1559, 1558, 1557, 1573, 1572, 1571, 
    1570, 1569, 1568, 1567, 1566, 1607, 1606, 1605, 1604, 1603, 1602, 1601, 
    1600, 1599, 1615, 1614, 1613, 1612, 1611, 1610, 1609, 1608, 1624, 1623, 
    1622, 1621, 1620, 1619, 1618, 1617, 1616, 1674, 1673, 1672, 1671, 1670, 
    1669, 1668, 1667, 1691, 1690, 1689, 1688, 1687, 1686, 1685, 1684, 1683, 
    1709, 1708, 1707, 1706, 1705, 1704, 1703, 1702, 1701, 1727, 1726, 1725, 
    1724, 1723, 1722, 1721, 1720, 1719, 1733, 1732, 1731, 1730, 1729, 1728, 
    1793, 1792, 1791, 1790, 1789, 1788, 1787, 1786, 1785, 1812, 1811, 1810, 
    1809, 1808, 1807, 1806, 1805, 1804, 1803, 1802, 1801, 1800, 1799, 1798, 
    1797, 1796, 1795, 1794, 1866, 1865, 1864, 1863, 1862, 1861, 1860, 1859, 
    1858, 1885, 1884, 1883, 1882, 1881, 1880, 1879, 1878, 1877, 1876, 1875, 
    1874, 1873, 1872, 1871, 1870, 1869, 1868, 1867, 1894, 1893, 1892, 1891, 
    1890, 1889, 1888, 1887, 1886, 1916, 1915, 1914, 1913, 1912, 1911, 1925, 
    1924, 1923, 1922, 1921, 1920, 1919, 1918, 1917, 1954, 1953, 1952, 1951, 
    1950, 1949, 1963, 1962, 1961, 1960, 1959, 1958, 1957, 1956, 1955, 1995, 
    1994, 1993, 1992, 1991, 1990, 1989, 1988, 1987, 2020, 2019, 2018, 2017, 
    2016, 2015, 2014, 2013, 2029, 2028, 2027, 2026, 2025, 2024, 2023, 2022, 
    2021, 2060, 2059, 2058, 2057, 2056, 2055, 2069, 2068, 2067, 2066, 2065, 
    2064, 2063, 2062, 2061, 2075, 2074, 2073, 2072, 2071, 2070, 2084, 2083, 
    2082, 2081, 2080, 2079, 2078, 2077, 2076, 2152, 2151, 2150, 2149, 2148, 
    2147, 2161, 2160, 2159, 2158, 2157, 2156, 2155, 2154, 2153, 2167, 2166, 
    2165, 2164, 2163, 2162, 2176, 2175, 2174, 2173, 2172, 2171, 2170, 2169, 
    2168, 2265, 2264, 2263, 2262, 2261, 2260, 2259, 2258, 2257, 2274, 2273, 
    2272, 2271, 2270, 2269, 2268, 2267, 2266, 2307, 2306, 2305, 2304, 2303, 
    2302, 2301, 2300, 2299, 2340, 2339, 2338, 2337, 2336, 2335, 2334, 2333, 
    2348, 2347, 2346, 2345, 2344, 2343, 2342, 2341, 2357, 2356, 2355, 2354, 
    2353, 2352, 2351, 2350, 2349, 2406, 2405, 2404, 2403, 2402, 2401, 2400, 
    2399, 2414, 2413, 2412, 2411, 2410, 2409, 2408, 2407, 2423, 2422, 2421, 
    2420, 2419, 2418, 2417, 2416, 2415, 2465, 2464, 2463, 2462, 2461, 2460, 
    2459, 2458, 2457, 2473, 2472, 2471, 2470, 2469, 2468, 2467, 2466, 2482, 
    2481, 2480, 2479, 2478, 2477, 2476, 2475, 2474, 2533, 2532, 2531, 2530, 
    2529, 2528, 2527, 2526, 2525, 2541, 2540, 2539, 2538, 2537, 2536, 2535, 
    2534, 2550, 2549, 2548, 2547, 2546, 2545, 2544, 2543, 2542, 2600, 2599, 
    2598, 2597, 2596, 2595, 2594, 2593, 2617, 2616, 2615, 2614, 2613, 2612, 
    2611, 2610, 2609, 2640, 2639, 2638, 2637, 2636, 2635, 2649, 2648, 2647, 
    2646, 2645, 2644, 2643, 2642, 2641, 2681, 2680, 2679, 2678, 2677, 2676, 
    2675, 2674, 2673, 2687, 2686, 2685, 2684, 2683, 2682, 2737, 2736, 2735, 
    2734, 2733, 2732, 2731, 2730, 2729, 2746, 2745, 2744, 2743, 2742, 2741, 
    2740, 2739, 2738, 2792, 2791, 2790, 2789, 2788, 2787, 2786, 2785, 2784, 
    2811, 2810, 2809, 2808, 2807, 2806, 2805, 2804, 2803, 2802, 2801, 2800, 
    2799, 2798, 2797, 2796, 2795, 2794, 2793, 2820, 2819, 2818, 2817, 2816, 
    2815, 2814, 2813, 2812, 2842, 2841, 2840, 2839, 2838, 2837, 2851, 2850, 
    2849, 2848, 2847, 2846, 2845, 2844, 2843, 2883, 2882, 2881, 2880, 2879, 
    2878, 2877, 2876, 2875, 2901, 2900, 2899, 2898, 2897, 2896, 2895, 2894, 
    2893, 2919, 2918, 2917, 2916, 2915, 2914, 2913, 2912, 2911, 2964, 2963, 
    2962, 2961, 2960, 2959, 2973, 2972, 2971, 2970, 2969, 2968, 2967, 2966, 
    2965, 2979, 2978, 2977, 2976, 2975, 2974, 2988, 2987, 2986, 2985, 2984, 
    2983, 2982, 2981, 2980, 3056, 3055, 3054, 3053, 3052, 3051, 3065, 3064, 
    3063, 3062, 3061, 3060, 3059, 3058, 3057, 3071, 3070, 3069, 3068, 3067, 
    3066, 3080, 3079, 3078, 3077, 3076, 3075, 3074, 3073, 3072, 3121, 3120, 
    3119, 3118, 3117, 3116, 3115, 3114, 3113, 3130, 3129, 3128, 3127, 3126, 
    3125, 3124, 3123, 3122, 3190, 3189, 3188, 3187, 3186, 3185, 3184, 3183, 
    3182, 3239, 3238, 3237, 3236, 3235, 3234, 3233, 3232, 3247, 3246, 3245, 
    3244, 3243, 3242, 3241, 3240, 3256, 3255, 3254, 3253, 3252, 3251, 3250, 
    3249, 3248, 3289, 3288, 3287, 3286, 3285, 3284, 3283, 3282, 3298, 3297, 
    3296, 3295, 3294, 3293, 3292, 3291, 3290, 3324, 3323, 3322, 3321, 3320, 
    3319, 3318, 3317, 3316, 3332, 3331, 3330, 3329, 3328, 3327, 3326, 3325, 
    3375, 3374, 3373, 3372, 3371, 3370, 3369, 3368, 3367, 3383, 3382, 3381, 
    3380, 3379, 3378, 3377, 3376, 3392, 3391, 3390, 3389, 3388, 3387, 3386, 
    3385, 3384, 3424, 3423, 3422, 3421, 3420, 3419, 3418, 3417, 3442, 3441, 
    3440, 3439, 3438, 3437, 3436, 3435, 3434, 3460, 3459, 3458, 3457, 3456, 
    3455, 3454, 3453, 3452, 3484, 3483, 3482, 3481, 3480, 3479, 3478, 3477, 
    3476, 3490, 3489, 3488, 3487, 3486, 3485, 3507, 3506, 3505, 3504, 3503, 
    3502, 3501, 3500, 3499, 3525, 3524, 3523, 3522, 3521, 3520, 3519, 3518, 
    3517, 3544, 3543, 3542, 3541, 3540, 3539, 3538, 3537, 3536, 3535, 3534, 
    3533, 3532, 3531, 3530, 3529, 3528, 3527, 3526, 3553, 3552, 3551, 3550, 
    3549, 3548, 3547, 3546, 3545, 3627, 3626, 3625, 3624, 3623, 3622, 3636, 
    3635, 3634, 3633, 3632, 3631, 3630, 3629, 3628, 3662, 3661, 3660, 3659, 
    3658, 3657, 3656, 3655, 3654, 3680, 3679, 3678, 3677, 3676, 3675, 3674, 
    3673, 3672, 3698, 3697, 3696, 3695, 3694, 3693, 3692, 3691, 3690, 3753, 
    3754, 3755, 3756, 3757, 3758, 3759, 3760, 3761, 3762, 3763, 3764, 3765, 
    3766, 3767, 3768, 3769, 3770, 3771, 3772, 3773, 3774, 3775, 3776, 3777, 
    3778, 3779, 3780, 3781, 3782, 3783, 3784, 3785, 3786, 3787, 3788, 3789, 
    3790, 3791, 3792, 3793, 3794, 3795, 3796, 3797, 3798, 3799, 3800, 3801, 
    3802, 3803, 3804, 3805, 3806, 4101, 4102, 4103, 4104, 4105, 4106, 4107, 
    4108, 4109, 4110, 4111, 4112, 4113, 4114, 4115, 4116, 4117, 4118, 4119, 
    4120, 4121, 4122, 4123, 4124, 4125, 4126, 4127, 4128, 4129, 4130, 4131, 
    4132, 4133, 4134, 4135, 4136, 4137, 4138, 4139, 4140, 4141, 4142, 4143, 
    4144, 4145, 4146, 4147, 4148, 4149, 4150, 4151, 4152, 4153, 4154, 4683, 
    4684, 4685, 4686, 4687, 4688, 4689, 4690, 4691, 4692, 4693, 4694, 4695, 
    4696, 4697, 4698, 4699, 4700, 4701, 4702, 4703, 4704, 4705, 4706, 4707, 
    4708, 4709, 4710, 4711, 4712, 4713, 4714, 4715, 4716, 4717, 4718, 4719, 
    4720, 4721, 4722, 4723, 4724, 4725, 4726, 4727, 4728, 4729, 4730, 4731, 
    4732, 4733, 4734, 4735, 4736, 4737, 4738, 4739, 4740, 4741, 4742, 4743, 
    4744, 4745, 4746, 4747, 4748, 4749, 4750, 4751, 4752, 4753, 4754, 5027, 
    5028, 5029, 5030, 5031, 5032, 5033, 5034, 5035, 5036, 5037, 5038, 5039, 
    5040, 5041, 5042, 5043, 5044, 5045, 5046, 5047, 5048, 5049, 5050, 5051, 
    5052, 5053, 5054, 5055, 5056, 5057, 5058, 5059, 5060, 5061, 5062, 5063, 
    5064, 5065, 5066, 5067, 5068, 5069, 5070, 5071, 5072, 5073, 5074, 5075, 
    5076, 5077, 5078, 5079, 5080, 5081, 5082, 5083, 5084, 5085, 5086, 5087, 
    5088, 5089, 5090, 5091, 5092, 5093, 5094, 5095, 5096, 5097, 5098, 5371, 
    5372, 5373, 5374, 5375, 5376, 5377, 5378, 5379, 5380, 5381, 5382, 5383, 
    5384, 5385, 5386, 5387, 5388, 5389, 5390, 5391, 5392, 5393, 5394, 5395, 
    5396, 5397, 5398, 5399, 5400, 5401, 5402, 5403, 5404, 5405, 5406, 5407, 
    5408, 5409, 5410, 5411, 5412, 5413, 5414, 5415, 5416, 5417, 5418, 5419, 
    5420, 5421, 5422, 5423, 5424, 5425, 5426, 5427, 5428, 5429, 5430, 5431, 
    5432, 5433, 5434, 5435, 5436, 5437, 5438, 5439, 5440, 5441, 5442, 5723, 
    5724, 5725, 5726, 5727, 5728, 5729, 5730, 5731, 5732, 5733, 5734, 5735, 
    5736, 5737, 5738, 5739, 5740, 5741, 5742, 5743, 5744, 5745, 5746, 5747, 
    5748, 5749, 5750, 5751, 5752, 5753, 5754, 5755, 5756, 5757, 5758, 5759, 
    5760, 5761, 5762, 5763, 5764, 5765, 5766, 5767, 5768, 5769, 5770, 5771, 
    5772, 5773, 5774, 5775, 5776, 5777, 5778, 5779, 5780, 5781, 5782, 5783, 
    5784, 5785, 5786, 5787, 5788, 5789, 5790, 5791, 5792, 5793, 5794, 6075, 
    6076, 6077, 6078, 6079, 6080, 6081, 6082, 6083, 6084, 6085, 6086, 6087, 
    6088, 6089, 6090, 6091, 6092, 6093, 6094, 6095, 6096, 6097, 6098, 6099, 
    6100, 6101, 6102, 6103, 6104, 6105, 6106, 6107, 6108, 6109, 6110, 6111, 
    6112, 6113, 6114, 6115, 6116, 6117, 6118, 6119, 6120, 6121, 6122, 6123, 
    6124, 6125, 6126, 6127, 6128, 6129, 6130, 6131, 6132, 6133, 6134, 6135, 
    6136, 6137, 6138, 6139, 6140, 6141, 6142, 6143, 6144, 6145, 6146, 6337, 
    6338, 6339, 6340, 6341, 6342, 6343, 6344, 6345, 6346, 6347, 6348, 6349, 
    6350, 6351, 6352, 6353, 6354, 6355, 6356, 6357, 6358, 6359, 6360, 6361, 
    6362, 6363, 6364, 6365, 6366, 6367, 6368, 6369, 6370, 6371, 6372, 6373, 
    6374, 6375, 6376, 6377, 6378, 6379, 6380, 6381, 6382, 6383, 6384, 6385, 
    6386, 6387, 6388, 6389, 6390, 6565, 6566, 6567, 6568, 6569, 6570, 6571, 
    6572, 6573, 6574, 6575, 6576, 6577, 6578, 6579, 6580, 6581, 6582, 6583, 
    6584, 6585, 6586, 6587, 6588, 6589, 6590, 6591, 6592, 6593, 6594, 6595, 
    6596, 6597, 6598, 6599, 6600, 6601, 6602, 6603, 6604, 6605, 6606, 6607, 
    6608, 6609, 6610, 6611, 6612, 6613, 6614, 6615, 6616, 6617, 6618, 6739, 
    6740, 6741, 6742, 6743, 6744, 6745, 6746, 6747, 6748, 6749, 6750, 6751, 
    6752, 6753, 6754, 6755, 6756, 6757, 6758, 6759, 6760, 6761, 6762, 6763, 
    6764, 6765, 6766, 6767, 6768, 6769, 6770, 6771, 6772, 6773, 6774, 6775, 
    6776, 6777, 6778, 6779, 6780, 6781, 6782, 6783, 6784, 6785, 6786, 6787, 
    6788, 6789, 6790, 6791, 6792, 6793, 6794, 6795, 6796, 6797, 6798, 6799, 
    6800, 6801, 6802, 6803, 6804, 6805, 6806, 6807, 6808, 6809, 6810, 6811, 
    6812, 6813, 6814, 6815, 6816, 6817, 6818, 6819, 6820, 6821, 6822, 6823, 
    6824, 6825, 6826, 6827, 6828, 6829, 6830, 6831, 6832, 6833, 6834, 6835, 
    6836, 6837, 6838, 6839, 6840, 6841, 6842, 6843, 6844, 6845, 6846, 6847, 
    6848, 6849, 6850, 6851, 6852, 6853, 6854, 6855, 6856, 6857, 6858, 6859, 
    6860, 6861, 6862, 6863, 6864, 6865, 6866, 6867, 6868, 6869, 6870, 6871, 
    6872, 6873, 6874, 6875, 6876, 6877, 6878, 6879, 6880, 6881, 6882, 6883, 
    6884, 6885, 6886, 6887, 6888, 6889, 6890, 6891, 6892, 6893, 6894, 6895, 
    6896, 6897, 6898, 6899, 6900, 6901, 6902, 6903, 6904, 6905, 6906, 6907, 
    6908, 6909, 7377, 7378, 7379, 7380, 7381, 7382, 7383, 7384, 7385, 7386, 
    7387, 7388, 7389, 7390, 7391, 7392, 7393, 7394, 7395, 7396, 7397, 7398, 
    7399, 7400, 7401, 7402, 7403, 7404, 7405, 7406, 7407, 7408, 7409, 7410, 
    7411, 7412, 7413, 7414, 7415, 7416, 7417, 7418, 7419, 7420, 7421, 7422, 
    7423, 7424, 7425, 7426, 7427, 7428, 7429, 7430, 7431, 7432, 7433, 7434, 
    7435, 7436, 7437, 7438, 7439, 7440, 7441, 7442, 7443, 7444, 7445, 7446, 
    7447, 7448, 7449, 7450, 7451, 7452, 7453, 7454, 7455, 7456, 7457, 7458, 
    7459, 7460, 7461, 7462, 7463, 7464, 7465, 7466, 7467, 7468, 7469, 7470, 
    7471, 7472, 7473, 7474, 7475, 7476, 7477, 7478, 7479, 7480, 7481, 7482, 
    7483, 7484, 7485, 7486, 7487, 7488, 7489, 7490, 7491, 7492, 7493, 7494, 
    7495, 7496, 7497, 7498, 7499, 7500, 7501, 7502, 7503, 7504, 7505, 7506, 
    7507, 7508, 7509, 7510, 7511, 7512, 7513, 7514, 7515, 7516, 7517, 7518, 
    7519, 7520, 7521, 7522, 7523, 7524, 7525, 7526, 7527, 7528, 7529, 7530, 
    7531, 7532, 7533, 7534, 7535, 7536, 7537, 7538, 7539, 7540, 7541, 7542, 
    7543, 7544, 7545, 7546, 7547, 8069, 8070, 8071, 8072, 8073, 8074, 8075, 
    8076, 8077, 8078, 8079, 8080, 8081, 8082, 8083, 8084, 8085, 8086, 8087, 
    8088, 8089, 8090, 8091, 8092, 8093, 8094, 8095, 8096, 8097, 8098, 8099, 
    8100, 8101, 8102, 8103, 8104, 8105, 8106, 8107, 8108, 8109, 8110, 8111, 
    8112, 8113, 8114, 8115, 8116, 8117, 8118, 8119, 8120, 8121, 8122, 8297, 
    8298, 8299, 8300, 8301, 8302, 8303, 8304, 8305, 8306, 8307, 8308, 8309, 
    8310, 8311, 8312, 8313, 8314, 8315, 8316, 8317, 8318, 8319, 8320, 8321, 
    8322, 8323, 8324, 8325, 8326, 8327, 8328, 8329, 8330, 8331, 8332, 8333, 
    8334, 8335, 8336, 8337, 8338, 8339, 8340, 8341, 8342, 8343, 8344, 8345, 
    8346, 8347, 8348, 8349, 8350, 8615, 8616, 8617, 8618, 8619, 8620, 8621, 
    8622, 8623, 8624, 8625, 8626, 8627, 8628, 8629, 8630, 8631, 8632, 8633, 
    8634, 8635, 8636, 8637, 8638, 8639, 8640, 8641, 8642, 8643, 8644, 8645, 
    8646, 8647, 8648, 8649, 8650, 8651, 8652, 8653, 8654, 8655, 8656, 8657, 
    8658, 8659, 8660, 8661, 8662, 8663, 8664, 8665, 8666, 8667, 8668, 8669, 
    8670, 8671, 8672, 8673, 8674, 8675, 8676, 8677, 8678, 8679, 8680, 8681, 
    8682, 8683, 8684, 8685, 8686, 8823, 8824, 8825, 8826, 8827, 8828, 8829, 
    8830, 8831, 8832, 8833, 8834, 8835, 8836, 8837, 8838, 8839, 8840, 8841, 
    8842, 8843, 8844, 8845, 8846, 8847, 8848, 8849, 8850, 8851, 8852, 8853, 
    8854, 8855, 8856, 8857, 8858, 8859, 8860, 8861, 8862, 8863, 8864, 8865, 
    8866, 8867, 8868, 8869, 8870, 8871, 8872, 8873, 8874, 8875, 8876, 9171, 
    9172, 9173, 9174, 9175, 9176, 9177, 9178, 9179, 9180, 9181, 9182, 9183, 
    9184, 9185, 9186, 9187, 9188, 9189, 9190, 9191, 9192, 9193, 9194, 9195, 
    9196, 9197, 9198, 9199, 9200, 9201, 9202, 9203, 9204, 9205, 9206, 9207, 
    9208, 9209, 9210, 9211, 9212, 9213, 9214, 9215, 9216, 9217, 9218, 9219, 
    9220, 9221, 9222, 9223, 9224, 9735, 9736, 9737, 9738, 9739, 9740, 9741, 
    9742, 9743, 9744, 9745, 9746, 9747, 9748, 9749, 9750, 9751, 9752, 9753, 
    9754, 9755, 9756, 9757, 9758, 9759, 9760, 9761, 9762, 9763, 9764, 9765, 
    9766, 9767, 9768, 9769, 9770, 9771, 9772, 9773, 9774, 9775, 9776, 9777, 
    9778, 9779, 9780, 9781, 9782, 9783, 9784, 9785, 9786, 9787, 9788, 9789, 
    9790, 9791, 9792, 9793, 9794, 9795, 9796, 9797, 9798, 9799, 9800, 9801, 
    9802, 9803, 9804, 9805, 9806, 10079, 10080, 10081, 10082, 10083, 10084, 
    10085, 10086, 10087, 10088, 10089, 10090, 10091, 10092, 10093, 10094, 
    10095, 10096, 10097, 10098, 10099, 10100, 10101, 10102, 10103, 10104, 
    10105, 10106, 10107, 10108, 10109, 10110, 10111, 10112, 10113, 10114, 
    10115, 10116, 10117, 10118, 10119, 10120, 10121, 10122, 10123, 10124, 
    10125, 10126, 10127, 10128, 10129, 10130, 10131, 10132, 10133, 10134, 
    10135, 10136, 10137, 10138, 10139, 10140, 10141, 10142, 10143, 10144, 
    10145, 10146, 10147, 10148, 10149, 10150, 10359, 10360, 10361, 10362, 
    10363, 10364, 10365, 10366, 10367, 10368, 10369, 10370, 10371, 10372, 
    10373, 10374, 10375, 10376, 10377, 10378, 10379, 10380, 10381, 10382, 
    10383, 10384, 10385, 10386, 10387, 10388, 10389, 10390, 10391, 10392, 
    10393, 10394, 10395, 10396, 10397, 10398, 10399, 10400, 10401, 10402, 
    10403, 10404, 10405, 10406, 10407, 10408, 10409, 10410, 10411, 10412, 
    10413, 10414, 10415, 10416, 10417, 10418, 10419, 10420, 10421, 10422, 
    10423, 10424, 10425, 10426, 10427, 10428, 10429, 10430, 10639, 10640, 
    10641, 10642, 10643, 10644, 10645, 10646, 10647, 10648, 10649, 10650, 
    10651, 10652, 10653, 10654, 10655, 10656, 10657, 10658, 10659, 10660, 
    10661, 10662, 10663, 10664, 10665, 10666, 10667, 10668, 10669, 10670, 
    10671, 10672, 10673, 10674, 10675, 10676, 10677, 10678, 10679, 10680, 
    10681, 10682, 10683, 10684, 10685, 10686, 10687, 10688, 10689, 10690, 
    10691, 10692, 10693, 10694, 10695, 10696, 10697, 10698, 10699, 10700, 
    10701, 10702, 10703, 10704, 10705, 10706, 10707, 10708, 10709, 10710, 
    10991, 10992, 10993, 10994, 10995, 10996, 10997, 10998, 10999, 11000, 
    11001, 11002, 11003, 11004, 11005, 11006, 11007, 11008, 11009, 11010, 
    11011, 11012, 11013, 11014, 11015, 11016, 11017, 11018, 11019, 11020, 
    11021, 11022, 11023, 11024, 11025, 11026, 11027, 11028, 11029, 11030, 
    11031, 11032, 11033, 11034, 11035, 11036, 11037, 11038, 11039, 11040, 
    11041, 11042, 11043, 11044, 11045, 11046, 11047, 11048, 11049, 11050, 
    11051, 11052, 11053, 11054, 11055, 11056, 11057, 11058, 11059, 11060, 
    11061, 11062, 11271, 11272, 11273, 11274, 11275, 11276, 11277, 11278, 
    11279, 11280, 11281, 11282, 11283, 11284, 11285, 11286, 11287, 11288, 
    11289, 11290, 11291, 11292, 11293, 11294, 11295, 11296, 11297, 11298, 
    11299, 11300, 11301, 11302, 11303, 11304, 11305, 11306, 11307, 11308, 
    11309, 11310, 11311, 11312, 11313, 11314, 11315, 11316, 11317, 11318, 
    11319, 11320, 11321, 11322, 11323, 11324, 11451, 11452, 11453, 11454, 
    11455, 11456, 11457, 11458, 11459, 11460, 11461, 11462, 11463, 11464, 
    11465, 11466, 11467, 11468, 11469, 11470, 11471, 11472, 11473, 11474, 
    11475, 11476, 11477, 11478, 11479, 11480, 11481, 11482, 11483, 11484, 
    11485, 11486, 11487, 11488, 11489, 11490, 11491, 11492, 11493, 11494, 
    11495, 11496, 11497, 11498, 11499, 11500, 11501, 11502, 11503, 11504, 
    11850, 11851, 11852, 11853, 11854, 11855, 11856, 11857, 11858, 11859, 
    11860, 11861, 11862, 11863, 11864, 11865, 11866, 11867, 11868, 11869, 
    11870, 11871, 11872, 11873, 11874, 11875, 11876, 11877, 11878, 11879, 
    11880, 11881, 11882, 11883, 11884, 11885, 11886, 11887, 11888, 11889, 
    11890, 11891, 11892, 11893, 11894, 11895, 11896, 11897, 11898, 11899, 
    11900, 11901, 11902, 11903, 11904, 11905, 11906, 11907, 11908, 11909, 
    11910, 11911, 11912, 11913, 11914, 11915, 11916, 11917, 11918, 11919, 
    11920, 11921, 11922, 11923, 11924, 11925, 11926, 11927, 11928, 11929, 
    11930, 11931, 11932, 11933, 11934, 11935, 11936, 11937, 11938, 11939, 
    11940, 11941, 11942, 11943, 11944, 11945, 11946, 11947, 11948, 11949, 
    11950, 11951, 11952, 11953, 11954, 11955, 11956, 11957, 11958, 11959, 
    11960, 11961, 11962, 11963, 11964, 11965, 11966, 11967, 11968, 11969, 
    11970, 11971, 11972, 11973, 11974, 11975, 11976, 11977, 11978, 11979, 
    11980, 11981, 11982, 11983, 11984, 11985, 11986, 11987, 11988, 11989, 
    11990, 11991, 11992, 11993, 11994, 11995, 11996, 11997, 11998, 11999, 
    12000, 12001, 12002, 12003, 12004, 12005, 12006, 12007, 12008, 12009, 
    12010, 12011, 12012, 12013, 12014, 12015, 12016, 12017, 12018, 12019, 
    12020, 12416, 12417, 12418, 12419, 12420, 12421, 12422, 12423, 12424, 
    12425, 12426, 12427, 12428, 12429, 12430, 12431, 12432, 12433, 12434, 
    12435, 12436, 12437, 12438, 12439, 12440, 12441, 12442, 12443, 12444, 
    12445, 12446, 12447, 12448, 12449, 12450, 12451, 12452, 12453, 12454, 
    12455, 12456, 12457, 12458, 12459, 12460, 12461, 12462, 12463, 12464, 
    12465, 12466, 12467, 12468, 12469, 12470, 12471, 12472, 12473, 12474, 
    12475, 12476, 12477, 12478, 12479, 12480, 12481, 12482, 12483, 12484, 
    12485, 12486, 12487, 12488, 12489, 12490, 12491, 12492, 12493, 12494, 
    12495, 12496, 12497, 12498, 12499, 12500, 12501, 12502, 12503, 12504, 
    12505, 12506, 12507, 12508, 12509, 12510, 12511, 12512, 12513, 12514, 
    12515, 12516, 12517, 12518, 12519, 12520, 12521, 12522, 12523, 12524, 
    12525, 12526, 12527, 12528, 12529, 12530, 12531, 12532, 12533, 12534, 
    12535, 12536, 12537, 12538, 12539, 12540, 12541, 12542, 12543, 12544, 
    12545, 12546, 12547, 12548, 12549, 12550, 12551, 12552, 12553, 12554, 
    12555, 12556, 12557, 12558, 12559, 12560, 12561, 12562, 12563, 12564, 
    12565, 12566, 12567, 12568, 12569, 12570, 12571, 12572, 12573, 12574, 
    12575, 12576, 12577, 12578, 12579, 12580, 12581, 12582, 12583, 12584, 
    12585, 12586, 12883, 12884, 12885, 12886, 12887, 12888, 12889, 12890, 
    12891, 12892, 12893, 12894, 12895, 12896, 12897, 12898, 12899, 12900, 
    12901, 12902, 12903, 12904, 12905, 12906, 12907, 12908, 12909, 12910, 
    12911, 12912, 12913, 12914, 12915, 12916, 12917, 12918, 12919, 12920, 
    12921, 12922, 12923, 12924, 12925, 12926, 12927, 12928, 12929, 12930, 
    12931, 12932, 12933, 12934, 12935, 12936, 13111, 13112, 13113, 13114, 
    13115, 13116, 13117, 13118, 13119, 13120, 13121, 13122, 13123, 13124, 
    13125, 13126, 13127, 13128, 13129, 13130, 13131, 13132, 13133, 13134, 
    13135, 13136, 13137, 13138, 13139, 13140, 13141, 13142, 13143, 13144, 
    13145, 13146, 13147, 13148, 13149, 13150, 13151, 13152, 13153, 13154, 
    13155, 13156, 13157, 13158, 13159, 13160, 13161, 13162, 13163, 13164, 
    13411, 13412, 13413, 13414, 13415, 13416, 13417, 13418, 13419, 13420, 
    13421, 13422, 13423, 13424, 13425, 13426, 13427, 13428, 13429, 13430, 
    13431, 13432, 13433, 13434, 13435, 13436, 13437, 13438, 13439, 13440, 
    13441, 13442, 13443, 13444, 13445, 13446, 13447, 13448, 13449, 13450, 
    13451, 13452, 13453, 13454, 13455, 13456, 13457, 13458, 13459, 13460, 
    13461, 13462, 13463, 13464, 13465, 13466, 13467, 13468, 13469, 13470, 
    13471, 13472, 13473, 13474, 13475, 13476, 13477, 13478, 13479, 13480, 
    13481, 13482, 13691, 13692, 13693, 13694, 13695, 13696, 13697, 13698, 
    13699, 13700, 13701, 13702, 13703, 13704, 13705, 13706, 13707, 13708, 
    13709, 13710, 13711, 13712, 13713, 13714, 13715, 13716, 13717, 13718, 
    13719, 13720, 13721, 13722, 13723, 13724, 13725, 13726, 13727, 13728, 
    13729, 13730, 13731, 13732, 13733, 13734, 13735, 13736, 13737, 13738, 
    13739, 13740, 13741, 13742, 13743, 13744, 14039, 14040, 14041, 14042, 
    14043, 14044, 14045, 14046, 14047, 14048, 14049, 14050, 14051, 14052, 
    14053, 14054, 14055, 14056, 14057, 14058, 14059, 14060, 14061, 14062, 
    14063, 14064, 14065, 14066, 14067, 14068, 14069, 14070, 14071, 14072, 
    14073, 14074, 14075, 14076, 14077, 14078, 14079, 14080, 14081, 14082, 
    14083, 14084, 14085, 14086, 14087, 14088, 14089, 14090, 14091, 14092, 
    14603, 14604, 14605, 14606, 14607, 14608, 14609, 14610, 14611, 14612, 
    14613, 14614, 14615, 14616, 14617, 14618, 14619, 14620, 14621, 14622, 
    14623, 14624, 14625, 14626, 14627, 14628, 14629, 14630, 14631, 14632, 
    14633, 14634, 14635, 14636, 14637, 14638, 14639, 14640, 14641, 14642, 
    14643, 14644, 14645, 14646, 14647, 14648, 14649, 14650, 14651, 14652, 
    14653, 14654, 14655, 14656, 14657, 14658, 14659, 14660, 14661, 14662, 
    14663, 14664, 14665, 14666, 14667, 14668, 14669, 14670, 14671, 14672, 
    14673, 14674, 14947, 14948, 14949, 14950, 14951, 14952, 14953, 14954, 
    14955, 14956, 14957, 14958, 14959, 14960, 14961, 14962, 14963, 14964, 
    14965, 14966, 14967, 14968, 14969, 14970, 14971, 14972, 14973, 14974, 
    14975, 14976, 14977, 14978, 14979, 14980, 14981, 14982, 14983, 14984, 
    14985, 14986, 14987, 14988, 14989, 14990, 14991, 14992, 14993, 14994, 
    14995, 14996, 14997, 14998, 14999, 15000, 15001, 15002, 15003, 15004, 
    15005, 15006, 15007, 15008, 15009, 15010, 15011, 15012, 15013, 15014, 
    15015, 15016, 15017, 15018, 15291, 15292, 15293, 15294, 15295, 15296, 
    15297, 15298, 15299, 15300, 15301, 15302, 15303, 15304, 15305, 15306, 
    15307, 15308, 15309, 15310, 15311, 15312, 15313, 15314, 15315, 15316, 
    15317, 15318, 15319, 15320, 15321, 15322, 15323, 15324, 15325, 15326, 
    15327, 15328, 15329, 15330, 15331, 15332, 15333, 15334, 15335, 15336, 
    15337, 15338, 15339, 15340, 15341, 15342, 15343, 15344, 15345, 15346, 
    15347, 15348, 15349, 15350, 15351, 15352, 15353, 15354, 15355, 15356, 
    15357, 15358, 15359, 15360, 15361, 15362, 15643, 15644, 15645, 15646, 
    15647, 15648, 15649, 15650, 15651, 15652, 15653, 15654, 15655, 15656, 
    15657, 15658, 15659, 15660, 15661, 15662, 15663, 15664, 15665, 15666, 
    15667, 15668, 15669, 15670, 15671, 15672, 15673, 15674, 15675, 15676, 
    15677, 15678, 15679, 15680, 15681, 15682, 15683, 15684, 15685, 15686, 
    15687, 15688, 15689, 15690, 15691, 15692, 15693, 15694, 15695, 15696, 
    15697, 15698, 15699, 15700, 15701, 15702, 15703, 15704, 15705, 15706, 
    15707, 15708, 15709, 15710, 15711, 15712, 15713, 15714, 15995, 15996, 
    15997, 15998, 15999, 16000, 16001, 16002, 16003, 16004, 16005, 16006, 
    16007, 16008, 16009, 16010, 16011, 16012, 16013, 16014, 16015, 16016, 
    16017, 16018, 16019, 16020, 16021, 16022, 16023, 16024, 16025, 16026, 
    16027, 16028, 16029, 16030, 16031, 16032, 16033, 16034, 16035, 16036, 
    16037, 16038, 16039, 16040, 16041, 16042, 16043, 16044, 16045, 16046, 
    16047, 16048, 16049, 16050, 16051, 16052, 16053, 16054, 16055, 16056, 
    16057, 16058, 16059, 16060, 16061, 16062, 16063, 16064, 16065, 16066, 
    16275, 16276, 16277, 16278, 16279, 16280, 16281, 16282, 16283, 16284, 
    16285, 16286, 16287, 16288, 16289, 16290, 16291, 16292, 16293, 16294, 
    16295, 16296, 16297, 16298, 16299, 16300, 16301, 16302, 16303, 16304, 
    16305, 16306, 16307, 16308, 16309, 16310, 16311, 16312, 16313, 16314, 
    16315, 16316, 16317, 16318, 16319, 16320, 16321, 16322, 16323, 16324, 
    16325, 16326, 16327, 16328, 16503, 16504, 16505, 16506, 16507, 16508, 
    16509, 16510, 16511, 16512, 16513, 16514, 16515, 16516, 16517, 16518, 
    16519, 16520, 16521, 16522, 16523, 16524, 16525, 16526, 16527, 16528, 
    16529, 16530, 16531, 16532, 16533, 16534, 16535, 16536, 16537, 16538, 
    16539, 16540, 16541, 16542, 16543, 16544, 16545, 16546, 16547, 16548, 
    16549, 16550, 16551, 16552, 16553, 16554, 16555, 16556, 16902, 16903, 
    16904, 16905, 16906, 16907, 16908, 16909, 16910, 16911, 16912, 16913, 
    16914, 16915, 16916, 16917, 16918, 16919, 16920, 16921, 16922, 16923, 
    16924, 16925, 16926, 16927, 16928, 16929, 16930, 16931, 16932, 16933, 
    16934, 16935, 16936, 16937, 16938, 16939, 16940, 16941, 16942, 16943, 
    16944, 16945, 16946, 16947, 16948, 16949, 16950, 16951, 16952, 16953, 
    16954, 16955, 16956, 16957, 16958, 16959, 16960, 16961, 16962, 16963, 
    16964, 16965, 16966, 16967, 16968, 16969, 16970, 16971, 16972, 16973, 
    16974, 16975, 16976, 16977, 16978, 16979, 16980, 16981, 16982, 16983, 
    16984, 16985, 16986, 16987, 16988, 16989, 16990, 16991, 16992, 16993, 
    16994, 16995, 16996, 16997, 16998, 16999, 17000, 17001, 17002, 17003, 
    17004, 17005, 17006, 17007, 17008, 17009, 17010, 17011, 17012, 17013, 
    17014, 17015, 17016, 17017, 17018, 17019, 17020, 17021, 17022, 17023, 
    17024, 17025, 17026, 17027, 17028, 17029, 17030, 17031, 17032, 17033, 
    17034, 17035, 17036, 17037, 17038, 17039, 17040, 17041, 17042, 17043, 
    17044, 17045, 17046, 17047, 17048, 17049, 17050, 17051, 17052, 17053, 
    17054, 17055, 17056, 17057, 17058, 17059, 17060, 17061, 17062, 17063, 
    17064, 17065, 17066, 17067, 17068, 17069, 17070, 17071, 17072, 17388, 
    17389, 17390, 17391, 17392, 17393, 17394, 17395, 17396, 17397, 17398, 
    17399, 17400, 17401, 17402, 17403, 17404, 17405, 17406, 17407, 17408, 
    17409, 17410, 17411, 17412, 17413, 17414, 17415, 17416, 17417, 17418, 
    17419, 17420, 17421, 17422, 17423, 17424, 17425, 17426, 17427, 17428, 
    17429, 17430, 17431, 17432, 17433, 17434, 17435, 17436, 17437, 17438, 
    17439, 17440, 17441, 17442, 17443, 17444, 17445, 17446, 17447, 17448, 
    17449, 17450, 17451, 17452, 17453, 17454, 17455, 17456, 17457, 17458, 
    17459, 17460, 17461, 17462, 17463, 17464, 17465, 17466, 17467, 17468, 
    17469, 17470, 17471, 17472, 17473, 17474, 17475, 17476, 17477, 17478, 
    17479, 17480, 17481, 17482, 17483, 17484, 17485, 17486, 17487, 17488, 
    17489, 17490, 17491, 17492, 17493, 17494, 17495, 17496, 17497, 17498, 
    17499, 17500, 17501, 17502, 17503, 17504, 17505, 17506, 17507, 17508, 
    17509, 17510, 17511, 17512, 17513, 17514, 17515, 17516, 17517, 17518, 
    17519, 17520, 17521, 17522, 17523, 17524, 17525, 17526, 17527, 17528, 
    17529, 17530, 17531, 17532, 17533, 17534, 17535, 17536, 17537, 17538, 
    17539, 17540, 17541, 17542, 17543, 17544, 17545, 17546, 17547, 17548, 
    17549, 17550, 17551, 17552, 17553, 17554, 17555, 17556, 17557, 17558, 
    17855, 17856, 17857, 17858, 17859, 17860, 17861, 17862, 17863, 17864, 
    17865, 17866, 17867, 17868, 17869, 17870, 17871, 17872, 17873, 17874, 
    17875, 17876, 17877, 17878, 17879, 17880, 17881, 17882, 17883, 17884, 
    17885, 17886, 17887, 17888, 17889, 17890, 17891, 17892, 17893, 17894, 
    17895, 17896, 17897, 17898, 17899, 17900, 17901, 17902, 17903, 17904, 
    17905, 17906, 17907, 17908, 18083, 18084, 18085, 18086, 18087, 18088, 
    18089, 18090, 18091, 18092, 18093, 18094, 18095, 18096, 18097, 18098, 
    18099, 18100, 18101, 18102, 18103, 18104, 18105, 18106, 18107, 18108, 
    18109, 18110, 18111, 18112, 18113, 18114, 18115, 18116, 18117, 18118, 
    18119, 18120, 18121, 18122, 18123, 18124, 18125, 18126, 18127, 18128, 
    18129, 18130, 18131, 18132, 18133, 18134, 18135, 18136, 18335, 18336, 
    18337, 18338, 18339, 18340, 18341, 18342, 18343, 18344, 18345, 18346, 
    18347, 18348, 18349, 18350, 18351, 18352, 18353, 18354, 18355, 18356, 
    18357, 18358, 18359, 18360, 18361, 18362, 18363, 18364, 18365, 18366, 
    18367, 18368, 18369, 18370, 18371, 18372, 18373, 18374, 18375, 18376, 
    18377, 18378, 18379, 18380, 18381, 18382, 18383, 18384, 18385, 18386, 
    18387, 18388, 18389, 18390, 18391, 18392, 18393, 18394, 18395, 18396, 
    18397, 18398, 18399, 18400, 18401, 18402, 18403, 18404, 18405, 18406, 
    18605, 18606, 18607, 18608, 18609, 18610, 18611, 18612, 18613, 18614, 
    18615, 18616, 18617, 18618, 18619, 18620, 18621, 18622, 18623, 18624, 
    18625, 18626, 18627, 18628, 18629, 18630, 18631, 18632, 18633, 18634, 
    18635, 18636, 18637, 18638, 18639, 18640, 18641, 18642, 18643, 18644, 
    18645, 18646, 18647, 18648, 18649, 18650, 18651, 18652, 18653, 18654, 
    18655, 18656, 18657, 18658, 18953, 18954, 18955, 18956, 18957, 18958, 
    18959, 18960, 18961, 18962, 18963, 18964, 18965, 18966, 18967, 18968, 
    18969, 18970, 18971, 18972, 18973, 18974, 18975, 18976, 18977, 18978, 
    18979, 18980, 18981, 18982, 18983, 18984, 18985, 18986, 18987, 18988, 
    18989, 18990, 18991, 18992, 18993, 18994, 18995, 18996, 18997, 18998, 
    18999, 19000, 19001, 19002, 19003, 19004, 19005, 19006, 19535, 19536, 
    19537, 19538, 19539, 19540, 19541, 19542, 19543, 19544, 19545, 19546, 
    19547, 19548, 19549, 19550, 19551, 19552, 19553, 19554, 19555, 19556, 
    19557, 19558, 19559, 19560, 19561, 19562, 19563, 19564, 19565, 19566, 
    19567, 19568, 19569, 19570, 19571, 19572, 19573, 19574, 19575, 19576, 
    19577, 19578, 19579, 19580, 19581, 19582, 19583, 19584, 19585, 19586, 
    19587, 19588, 19589, 19590, 19591, 19592, 19593, 19594, 19595, 19596, 
    19597, 19598, 19599, 19600, 19601, 19602, 19603, 19604, 19605, 19606, 
    19879, 19880, 19881, 19882, 19883, 19884, 19885, 19886, 19887, 19888, 
    19889, 19890, 19891, 19892, 19893, 19894, 19895, 19896, 19897, 19898, 
    19899, 19900, 19901, 19902, 19903, 19904, 19905, 19906, 19907, 19908, 
    19909, 19910, 19911, 19912, 19913, 19914, 19915, 19916, 19917, 19918, 
    19919, 19920, 19921, 19922, 19923, 19924, 19925, 19926, 19927, 19928, 
    19929, 19930, 19931, 19932, 19933, 19934, 19935, 19936, 19937, 19938, 
    19939, 19940, 19941, 19942, 19943, 19944, 19945, 19946, 19947, 19948, 
    19949, 19950, 20159, 20160, 20161, 20162, 20163, 20164, 20165, 20166, 
    20167, 20168, 20169, 20170, 20171, 20172, 20173, 20174, 20175, 20176, 
    20177, 20178, 20179, 20180, 20181, 20182, 20183, 20184, 20185, 20186, 
    20187, 20188, 20189, 20190, 20191, 20192, 20193, 20194, 20195, 20196, 
    20197, 20198, 20199, 20200, 20201, 20202, 20203, 20204, 20205, 20206, 
    20207, 20208, 20209, 20210, 20211, 20212, 20213, 20214, 20215, 20216, 
    20217, 20218, 20219, 20220, 20221, 20222, 20223, 20224, 20225, 20226, 
    20227, 20228, 20229, 20230, 20439, 20440, 20441, 20442, 20443, 20444, 
    20445, 20446, 20447, 20448, 20449, 20450, 20451, 20452, 20453, 20454, 
    20455, 20456, 20457, 20458, 20459, 20460, 20461, 20462, 20463, 20464, 
    20465, 20466, 20467, 20468, 20469, 20470, 20471, 20472, 20473, 20474, 
    20475, 20476, 20477, 20478, 20479, 20480, 20481, 20482, 20483, 20484, 
    20485, 20486, 20487, 20488, 20489, 20490, 20491, 20492, 20493, 20494, 
    20495, 20496, 20497, 20498, 20499, 20500, 20501, 20502, 20503, 20504, 
    20505, 20506, 20507, 20508, 20509, 20510, 20791, 20792, 20793, 20794, 
    20795, 20796, 20797, 20798, 20799, 20800, 20801, 20802, 20803, 20804, 
    20805, 20806, 20807, 20808, 20809, 20810, 20811, 20812, 20813, 20814, 
    20815, 20816, 20817, 20818, 20819, 20820, 20821, 20822, 20823, 20824, 
    20825, 20826, 20827, 20828, 20829, 20830, 20831, 20832, 20833, 20834, 
    20835, 20836, 20837, 20838, 20839, 20840, 20841, 20842, 20843, 20844, 
    20845, 20846, 20847, 20848, 20849, 20850, 20851, 20852, 20853, 20854, 
    20855, 20856, 20857, 20858, 20859, 20860, 20861, 20862, 21053, 21054, 
    21055, 21056, 21057, 21058, 21059, 21060, 21061, 21062, 21063, 21064, 
    21065, 21066, 21067, 21068, 21069, 21070, 21071, 21072, 21073, 21074, 
    21075, 21076, 21077, 21078, 21079, 21080, 21081, 21082, 21083, 21084, 
    21085, 21086, 21087, 21088, 21089, 21090, 21091, 21092, 21093, 21094, 
    21095, 21096, 21097, 21098, 21099, 21100, 21101, 21102, 21103, 21104, 
    21105, 21106, 21233, 21234, 21235, 21236, 21237, 21238, 21239, 21240, 
    21241, 21242, 21243, 21244, 21245, 21246, 21247, 21248, 21249, 21250, 
    21251, 21252, 21253, 21254, 21255, 21256, 21257, 21258, 21259, 21260, 
    21261, 21262, 21263, 21264, 21265, 21266, 21267, 21268, 21269, 21270, 
    21271, 21272, 21273, 21274, 21275, 21276, 21277, 21278, 21279, 21280, 
    21281, 21282, 21283, 21284, 21285, 21286, 21407, 21408, 21409, 21410, 
    21411, 21412, 21413, 21414, 21415, 21416, 21417, 21418, 21419, 21420, 
    21421, 21422, 21423, 21424, 21425, 21426, 21427, 21428, 21429, 21430, 
    21431, 21432, 21433, 21434, 21435, 21436, 21437, 21438, 21439, 21440, 
    21441, 21442, 21443, 21444, 21445, 21446, 21447, 21448, 21449, 21450, 
    21451, 21452, 21453, 21454, 21455, 21456, 21457, 21458, 21459, 21460, 
    21461, 21462, 21463, 21464, 21465, 21466, 21467, 21468, 21469, 21470, 
    21471, 21472, 21473, 21474, 21475, 21476, 21477, 21478, 21479, 21480, 
    21481, 21482, 21483, 21484, 21485, 21486, 21487, 21488, 21489, 21490, 
    21491, 21492, 21493, 21494, 21495, 21496, 21497, 21498, 21499, 21500, 
    21501, 21502, 21503, 21504, 21505, 21506, 21507, 21508, 21509, 21510, 
    21511, 21512, 21513, 21514, 21515, 21516, 21517, 21518, 21519, 21520, 
    21521, 21522, 21523, 21524, 21525, 21526, 21527, 21528, 21529, 21530, 
    21531, 21532, 21533, 21534, 21535, 21536, 21537, 21538, 21539, 21540, 
    21541, 21542, 21543, 21544, 21545, 21546, 21547, 21548, 21549, 21550, 
    21551, 21552, 21553, 21554, 21555, 21556, 21557, 21558, 21559, 21560, 
    21561, 21562, 21563, 21564, 21565, 21566, 21567, 21568, 21569, 21570, 
    21571, 21572, 21573, 21574, 21575, 21576, 21577, 21821, 21822, 21823, 
    21824, 21825, 21826, 21827, 21828, 21829, 21830, 21831, 21832, 21833, 
    21834, 21835, 21836, 21837, 21838, 21839, 21840, 21841, 21842, 21843, 
    21844, 21845, 21846, 21847, 21848, 21849, 21850, 21851, 21852, 21853, 
    21854, 21855, 21856, 21857, 21858, 21859, 21860, 21861, 21862, 21863, 
    21864, 21865, 21866, 21867, 21868, 21869, 21870, 21871, 21872, 21873, 
    21874, 21875, 21876, 21877, 21878, 21879, 21880, 21881, 21882, 21883, 
    21884, 21885, 21886, 21887, 21888, 21889, 21890, 21891, 21892, 21893, 
    21894, 21895, 21896, 21897, 21898, 21899, 21900, 21901, 21902, 21903, 
    21904, 21905, 21906, 21907, 21908, 21909, 21910, 21911, 21912, 21913, 
    21914, 21915, 21916, 21917, 21918, 21919, 21920, 21921, 21922, 21923, 
    21924, 21925, 21926, 21927, 21928, 21929, 21930, 21931, 21932, 21933, 
    21934, 21935, 21936, 21937, 21938, 21939, 21940, 21941, 21942, 21943, 
    21944, 21945, 21946, 21947, 21948, 21949, 21950, 21951, 21952, 21953, 
    21954, 21955, 21956, 21957, 21958, 21959, 21960, 21961, 21962, 21963, 
    21964, 21965, 21966, 21967, 21968, 21969, 21970, 21971, 21972, 21973, 
    21974, 21975, 21976, 21977, 21978, 21979, 21980, 21981, 21982, 21983, 
    21984, 21985, 21986, 21987, 21988, 21989, 21990, 21991, 22513, 22514, 
    22515, 22516, 22517, 22518, 22519, 22520, 22521, 22522, 22523, 22524, 
    22525, 22526, 22527, 22528, 22529, 22530, 22531, 22532, 22533, 22534, 
    22535, 22536, 22537, 22538, 22539, 22540, 22541, 22542, 22543, 22544, 
    22545, 22546, 22547, 22548, 22549, 22550, 22551, 22552, 22553, 22554, 
    22555, 22556, 22557, 22558, 22559, 22560, 22561, 22562, 22563, 22564, 
    22565, 22566, 22741, 22742, 22743, 22744, 22745, 22746, 22747, 22748, 
    22749, 22750, 22751, 22752, 22753, 22754, 22755, 22756, 22757, 22758, 
    22759, 22760, 22761, 22762, 22763, 22764, 22765, 22766, 22767, 22768, 
    22769, 22770, 22771, 22772, 22773, 22774, 22775, 22776, 22777, 22778, 
    22779, 22780, 22781, 22782, 22783, 22784, 22785, 22786, 22787, 22788, 
    22789, 22790, 22791, 22792, 22793, 22794, 23011, 23012, 23013, 23014, 
    23015, 23016, 23017, 23018, 23019, 23020, 23021, 23022, 23023, 23024, 
    23025, 23026, 23027, 23028, 23029, 23030, 23031, 23032, 23033, 23034, 
    23035, 23036, 23037, 23038, 23039, 23040, 23041, 23042, 23043, 23044, 
    23045, 23046, 23047, 23048, 23049, 23050, 23051, 23052, 23053, 23054, 
    23055, 23056, 23057, 23058, 23059, 23060, 23061, 23062, 23063, 23064, 
    23065, 23066, 23067, 23068, 23069, 23070, 23071, 23072, 23073, 23074, 
    23075, 23076, 23077, 23078, 23079, 23080, 23081, 23082]]], unsorted=True)
mdb.models['HexFiberArray'].rootAssembly.SetFromNodeLabels(name=
    'RVE_AG_PosX_RVE_AGSORT', nodeLabels=[['HexPackPart-1', [1, 2, 3, 4, 9, 10, 
    11, 12, 20, 21, 22, 23, 24, 27, 28, 31, 33, 34, 37, 38, 41, 43, 45, 49, 50, 
    53, 54, 55, 57, 59, 61, 67, 68, 69, 70, 75, 76, 77, 78, 79, 80, 81, 87, 88, 
    90, 92, 95, 96, 98, 99, 101, 102, 106, 108, 110, 112, 117, 118, 119, 120, 
    125, 126, 127, 128, 129, 130, 131, 137, 138, 141, 142, 144, 147, 148, 151, 
    152, 154, 156, 158, 159, 160, 164, 165, 166, 167, 168, 173, 174, 175, 176, 
    184, 185, 186, 187, 188, 191, 193, 195, 196, 199, 203, 204, 205, 207, 208, 
    209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 
    224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 299, 300, 
    301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 
    316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 409, 410, 
    411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 
    426, 451, 452, 453, 454, 455, 456, 457, 458, 459, 485, 486, 487, 488, 489, 
    490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 
    505, 506, 507, 508, 509, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 
    561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 
    609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 
    624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 677, 678, 679, 680, 
    681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 
    696, 697, 698, 699, 700, 701, 702, 745, 746, 747, 748, 749, 750, 751, 752, 
    761, 762, 763, 764, 765, 766, 767, 768, 769, 787, 788, 789, 790, 791, 792, 
    793, 794, 795, 796, 797, 798, 799, 800, 801, 825, 826, 827, 828, 829, 830, 
    831, 832, 833, 834, 835, 836, 837, 838, 839, 900, 901, 902, 903, 904, 905, 
    906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 
    921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 
    936, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 
    1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 
    1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 
    1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 
    1055, 1056, 1057, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 
    1090, 1091, 1092, 1093, 1094, 1095, 1119, 1120, 1121, 1122, 1123, 1124, 
    1125, 1126, 1127, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 
    1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1217, 1218, 1219, 1220, 
    1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 
    1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 
    1245, 1246, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 
    1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 
    1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1371, 1372, 1373, 1374, 
    1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 
    1387, 1388, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1490, 
    1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 
    1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 
    1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 
    1552, 1553, 1554, 1555, 1556, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 
    1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1625, 1626, 
    1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 
    1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 
    1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1692, 1693, 1694, 1695, 
    1696, 1697, 1698, 1699, 1700, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 
    1717, 1718, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 
    1744, 1745, 1746, 1747, 1748, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 
    1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 
    1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1821, 1822, 1823, 
    1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 
    1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 
    1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1926, 1927, 
    1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 
    1940, 1964, 1965, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1974, 
    1975, 1976, 1977, 1978, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 
    2004, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 
    2041, 2042, 2043, 2044, 2045, 2046, 2085, 2086, 2087, 2088, 2089, 2090, 
    2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 
    2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 
    2177, 2178, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187, 2188, 
    2189, 2190, 2191, 2192, 2193, 2194, 2195, 2196, 2197, 2198, 2199, 2200, 
    2201, 2202, 2203, 2204, 2205, 2206, 2239, 2240, 2241, 2242, 2243, 2244, 
    2245, 2246, 2247, 2248, 2249, 2250, 2251, 2252, 2253, 2254, 2255, 2256, 
    2308, 2309, 2310, 2311, 2312, 2313, 2314, 2315, 2316, 2358, 2359, 2360, 
    2361, 2362, 2363, 2364, 2365, 2366, 2367, 2368, 2369, 2370, 2371, 2372, 
    2373, 2374, 2375, 2376, 2377, 2378, 2379, 2380, 2381, 2382, 2424, 2425, 
    2426, 2427, 2428, 2429, 2430, 2431, 2432, 2433, 2434, 2435, 2436, 2437, 
    2438, 2439, 2440, 2441, 2442, 2443, 2444, 2445, 2446, 2447, 2448, 2483, 
    2484, 2485, 2486, 2487, 2488, 2489, 2490, 2491, 2492, 2493, 2494, 2495, 
    2496, 2497, 2498, 2499, 2500, 2501, 2502, 2503, 2504, 2505, 2506, 2507, 
    2508, 2551, 2552, 2553, 2554, 2555, 2556, 2557, 2558, 2559, 2560, 2561, 
    2562, 2563, 2564, 2565, 2566, 2567, 2568, 2569, 2570, 2571, 2572, 2573, 
    2574, 2575, 2576, 2601, 2602, 2603, 2604, 2605, 2606, 2607, 2608, 2618, 
    2619, 2620, 2621, 2622, 2623, 2624, 2625, 2626, 2650, 2651, 2652, 2653, 
    2654, 2655, 2656, 2657, 2658, 2659, 2660, 2661, 2662, 2663, 2664, 2688, 
    2689, 2690, 2691, 2692, 2693, 2694, 2695, 2696, 2697, 2698, 2699, 2700, 
    2701, 2702, 2711, 2712, 2713, 2714, 2715, 2716, 2717, 2718, 2719, 2720, 
    2721, 2722, 2723, 2724, 2725, 2726, 2727, 2728, 2747, 2748, 2749, 2750, 
    2751, 2752, 2753, 2754, 2755, 2756, 2757, 2758, 2759, 2760, 2761, 2762, 
    2763, 2764, 2765, 2766, 2767, 2768, 2769, 2770, 2771, 2772, 2773, 2774, 
    2775, 2776, 2777, 2778, 2779, 2780, 2781, 2782, 2783, 2852, 2853, 2854, 
    2855, 2856, 2857, 2858, 2859, 2860, 2861, 2862, 2863, 2864, 2865, 2866, 
    2884, 2885, 2886, 2887, 2888, 2889, 2890, 2891, 2892, 2902, 2903, 2904, 
    2905, 2906, 2907, 2908, 2909, 2910, 2920, 2921, 2922, 2923, 2924, 2925, 
    2926, 2927, 2928, 2929, 2930, 2931, 2932, 2933, 2934, 2935, 2936, 2937, 
    2938, 2939, 2940, 2941, 2942, 2943, 2944, 2945, 2946, 2947, 2948, 2949, 
    2950, 2951, 2952, 2953, 2954, 2955, 2956, 2957, 2958, 3021, 3022, 3023, 
    3024, 3025, 3026, 3027, 3028, 3029, 3030, 3031, 3032, 3033, 3034, 3035, 
    3036, 3037, 3038, 3039, 3040, 3041, 3042, 3043, 3044, 3045, 3046, 3047, 
    3048, 3049, 3050, 3131, 3132, 3133, 3134, 3135, 3136, 3137, 3138, 3139, 
    3140, 3141, 3142, 3143, 3144, 3145, 3146, 3147, 3148, 3173, 3174, 3175, 
    3176, 3177, 3178, 3179, 3180, 3181, 3207, 3208, 3209, 3210, 3211, 3212, 
    3213, 3214, 3215, 3216, 3217, 3218, 3219, 3220, 3221, 3222, 3223, 3224, 
    3225, 3226, 3227, 3228, 3229, 3230, 3231, 3265, 3266, 3267, 3268, 3269, 
    3270, 3271, 3272, 3273, 3274, 3275, 3276, 3277, 3278, 3279, 3280, 3281, 
    3299, 3300, 3301, 3302, 3303, 3304, 3305, 3306, 3307, 3308, 3309, 3310, 
    3311, 3312, 3313, 3314, 3315, 3341, 3342, 3343, 3344, 3345, 3346, 3347, 
    3348, 3349, 3350, 3351, 3352, 3353, 3354, 3355, 3356, 3357, 3358, 3359, 
    3360, 3361, 3362, 3363, 3364, 3365, 3366, 3409, 3410, 3411, 3412, 3413, 
    3414, 3415, 3416, 3425, 3426, 3427, 3428, 3429, 3430, 3431, 3432, 3433, 
    3443, 3444, 3445, 3446, 3447, 3448, 3449, 3450, 3451, 3461, 3462, 3463, 
    3464, 3465, 3466, 3467, 3468, 3469, 3470, 3471, 3472, 3473, 3474, 3475, 
    3508, 3509, 3510, 3511, 3512, 3513, 3514, 3515, 3516, 3554, 3555, 3556, 
    3557, 3558, 3559, 3560, 3561, 3562, 3563, 3564, 3565, 3566, 3567, 3568, 
    3569, 3570, 3571, 3572, 3573, 3574, 3575, 3576, 3577, 3578, 3579, 3580, 
    3581, 3582, 3583, 3584, 3585, 3586, 3587, 3588, 3589, 3590, 3607, 3608, 
    3609, 3610, 3611, 3612, 3613, 3614, 3615, 3616, 3617, 3618, 3619, 3620, 
    3621, 3645, 3646, 3647, 3648, 3649, 3650, 3651, 3652, 3653, 3663, 3664, 
    3665, 3666, 3667, 3668, 3669, 3670, 3671, 3681, 3682, 3683, 3684, 3685, 
    3686, 3687, 3688, 3689, 3699, 3700, 3701, 3702, 3703, 3704, 3705, 3706, 
    3707, 3708, 3709, 3710, 3711, 3712, 3713, 3714, 3715, 3716, 3717, 3718, 
    3719, 3720, 3721, 3722, 3723, 3724, 3725, 3726, 3727, 3728, 3729, 3730, 
    3731, 3732, 3733, 3734, 3735, 3736, 3737, 3738, 3739, 3740, 3741, 3742, 
    3743, 3744, 3745, 3746, 3747, 3748, 3749, 3750, 3751, 3752, 4047, 4048, 
    4049, 4050, 4051, 4052, 4053, 4054, 4055, 4056, 4057, 4058, 4059, 4060, 
    4061, 4062, 4063, 4064, 4065, 4066, 4067, 4068, 4069, 4070, 4071, 4072, 
    4073, 4074, 4075, 4076, 4077, 4078, 4079, 4080, 4081, 4082, 4083, 4084, 
    4085, 4086, 4087, 4088, 4089, 4090, 4091, 4092, 4093, 4094, 4095, 4096, 
    4097, 4098, 4099, 4100, 4611, 4612, 4613, 4614, 4615, 4616, 4617, 4618, 
    4619, 4620, 4621, 4622, 4623, 4624, 4625, 4626, 4627, 4628, 4629, 4630, 
    4631, 4632, 4633, 4634, 4635, 4636, 4637, 4638, 4639, 4640, 4641, 4642, 
    4643, 4644, 4645, 4646, 4647, 4648, 4649, 4650, 4651, 4652, 4653, 4654, 
    4655, 4656, 4657, 4658, 4659, 4660, 4661, 4662, 4663, 4664, 4665, 4666, 
    4667, 4668, 4669, 4670, 4671, 4672, 4673, 4674, 4675, 4676, 4677, 4678, 
    4679, 4680, 4681, 4682, 4955, 4956, 4957, 4958, 4959, 4960, 4961, 4962, 
    4963, 4964, 4965, 4966, 4967, 4968, 4969, 4970, 4971, 4972, 4973, 4974, 
    4975, 4976, 4977, 4978, 4979, 4980, 4981, 4982, 4983, 4984, 4985, 4986, 
    4987, 4988, 4989, 4990, 4991, 4992, 4993, 4994, 4995, 4996, 4997, 4998, 
    4999, 5000, 5001, 5002, 5003, 5004, 5005, 5006, 5007, 5008, 5009, 5010, 
    5011, 5012, 5013, 5014, 5015, 5016, 5017, 5018, 5019, 5020, 5021, 5022, 
    5023, 5024, 5025, 5026, 5299, 5300, 5301, 5302, 5303, 5304, 5305, 5306, 
    5307, 5308, 5309, 5310, 5311, 5312, 5313, 5314, 5315, 5316, 5317, 5318, 
    5319, 5320, 5321, 5322, 5323, 5324, 5325, 5326, 5327, 5328, 5329, 5330, 
    5331, 5332, 5333, 5334, 5335, 5336, 5337, 5338, 5339, 5340, 5341, 5342, 
    5343, 5344, 5345, 5346, 5347, 5348, 5349, 5350, 5351, 5352, 5353, 5354, 
    5355, 5356, 5357, 5358, 5359, 5360, 5361, 5362, 5363, 5364, 5365, 5366, 
    5367, 5368, 5369, 5370, 5651, 5652, 5653, 5654, 5655, 5656, 5657, 5658, 
    5659, 5660, 5661, 5662, 5663, 5664, 5665, 5666, 5667, 5668, 5669, 5670, 
    5671, 5672, 5673, 5674, 5675, 5676, 5677, 5678, 5679, 5680, 5681, 5682, 
    5683, 5684, 5685, 5686, 5687, 5688, 5689, 5690, 5691, 5692, 5693, 5694, 
    5695, 5696, 5697, 5698, 5699, 5700, 5701, 5702, 5703, 5704, 5705, 5706, 
    5707, 5708, 5709, 5710, 5711, 5712, 5713, 5714, 5715, 5716, 5717, 5718, 
    5719, 5720, 5721, 5722, 6003, 6004, 6005, 6006, 6007, 6008, 6009, 6010, 
    6011, 6012, 6013, 6014, 6015, 6016, 6017, 6018, 6019, 6020, 6021, 6022, 
    6023, 6024, 6025, 6026, 6027, 6028, 6029, 6030, 6031, 6032, 6033, 6034, 
    6035, 6036, 6037, 6038, 6039, 6040, 6041, 6042, 6043, 6044, 6045, 6046, 
    6047, 6048, 6049, 6050, 6051, 6052, 6053, 6054, 6055, 6056, 6057, 6058, 
    6059, 6060, 6061, 6062, 6063, 6064, 6065, 6066, 6067, 6068, 6069, 6070, 
    6071, 6072, 6073, 6074, 6283, 6284, 6285, 6286, 6287, 6288, 6289, 6290, 
    6291, 6292, 6293, 6294, 6295, 6296, 6297, 6298, 6299, 6300, 6301, 6302, 
    6303, 6304, 6305, 6306, 6307, 6308, 6309, 6310, 6311, 6312, 6313, 6314, 
    6315, 6316, 6317, 6318, 6319, 6320, 6321, 6322, 6323, 6324, 6325, 6326, 
    6327, 6328, 6329, 6330, 6331, 6332, 6333, 6334, 6335, 6336, 6511, 6512, 
    6513, 6514, 6515, 6516, 6517, 6518, 6519, 6520, 6521, 6522, 6523, 6524, 
    6525, 6526, 6527, 6528, 6529, 6530, 6531, 6532, 6533, 6534, 6535, 6536, 
    6537, 6538, 6539, 6540, 6541, 6542, 6543, 6544, 6545, 6546, 6547, 6548, 
    6549, 6550, 6551, 6552, 6553, 6554, 6555, 6556, 6557, 6558, 6559, 6560, 
    6561, 6562, 6563, 6564, 6910, 6911, 6912, 6913, 6914, 6915, 6916, 6917, 
    6918, 6919, 6920, 6921, 6922, 6923, 6924, 6925, 6926, 6927, 6928, 6929, 
    6930, 6931, 6932, 6933, 6934, 6935, 6936, 6937, 6938, 6939, 6940, 6941, 
    6942, 6943, 6944, 6945, 6946, 6947, 6948, 6949, 6950, 6951, 6952, 6953, 
    6954, 6955, 6956, 6957, 6958, 6959, 6960, 6961, 6962, 6963, 6964, 6965, 
    6966, 6967, 6968, 6969, 6970, 6971, 6972, 6973, 6974, 6975, 6976, 6977, 
    6978, 6979, 6980, 6981, 6982, 6983, 6984, 6985, 6986, 6987, 6988, 6989, 
    6990, 6991, 6992, 6993, 6994, 6995, 6996, 6997, 6998, 6999, 7000, 7001, 
    7002, 7003, 7004, 7005, 7006, 7007, 7008, 7009, 7010, 7011, 7012, 7013, 
    7014, 7015, 7016, 7017, 7018, 7019, 7020, 7021, 7022, 7023, 7024, 7025, 
    7026, 7027, 7028, 7029, 7030, 7031, 7032, 7033, 7034, 7035, 7036, 7037, 
    7038, 7039, 7040, 7041, 7042, 7043, 7044, 7045, 7046, 7047, 7048, 7049, 
    7050, 7051, 7052, 7053, 7054, 7055, 7056, 7057, 7058, 7059, 7060, 7061, 
    7062, 7063, 7064, 7065, 7066, 7067, 7068, 7069, 7070, 7071, 7072, 7073, 
    7074, 7075, 7076, 7077, 7078, 7079, 7080, 7548, 7549, 7550, 7551, 7552, 
    7553, 7554, 7555, 7556, 7557, 7558, 7559, 7560, 7561, 7562, 7563, 7564, 
    7565, 7566, 7567, 7568, 7569, 7570, 7571, 7572, 7573, 7574, 7575, 7576, 
    7577, 7578, 7579, 7580, 7581, 7582, 7583, 7584, 7585, 7586, 7587, 7588, 
    7589, 7590, 7591, 7592, 7593, 7594, 7595, 7596, 7597, 7598, 7599, 7600, 
    7601, 7602, 7603, 7604, 7605, 7606, 7607, 7608, 7609, 7610, 7611, 7612, 
    7613, 7614, 7615, 7616, 7617, 7618, 7619, 7620, 7621, 7622, 7623, 7624, 
    7625, 7626, 7627, 7628, 7629, 7630, 7631, 7632, 7633, 7634, 7635, 7636, 
    7637, 7638, 7639, 7640, 7641, 7642, 7643, 7644, 7645, 7646, 7647, 7648, 
    7649, 7650, 7651, 7652, 7653, 7654, 7655, 7656, 7657, 7658, 7659, 7660, 
    7661, 7662, 7663, 7664, 7665, 7666, 7667, 7668, 7669, 7670, 7671, 7672, 
    7673, 7674, 7675, 7676, 7677, 7678, 7679, 7680, 7681, 7682, 7683, 7684, 
    7685, 7686, 7687, 7688, 7689, 7690, 7691, 7692, 7693, 7694, 7695, 7696, 
    7697, 7698, 7699, 7700, 7701, 7702, 7703, 7704, 7705, 7706, 7707, 7708, 
    7709, 7710, 7711, 7712, 7713, 7714, 7715, 7716, 7717, 7718, 8015, 8016, 
    8017, 8018, 8019, 8020, 8021, 8022, 8023, 8024, 8025, 8026, 8027, 8028, 
    8029, 8030, 8031, 8032, 8033, 8034, 8035, 8036, 8037, 8038, 8039, 8040, 
    8041, 8042, 8043, 8044, 8045, 8046, 8047, 8048, 8049, 8050, 8051, 8052, 
    8053, 8054, 8055, 8056, 8057, 8058, 8059, 8060, 8061, 8062, 8063, 8064, 
    8065, 8066, 8067, 8068, 8243, 8244, 8245, 8246, 8247, 8248, 8249, 8250, 
    8251, 8252, 8253, 8254, 8255, 8256, 8257, 8258, 8259, 8260, 8261, 8262, 
    8263, 8264, 8265, 8266, 8267, 8268, 8269, 8270, 8271, 8272, 8273, 8274, 
    8275, 8276, 8277, 8278, 8279, 8280, 8281, 8282, 8283, 8284, 8285, 8286, 
    8287, 8288, 8289, 8290, 8291, 8292, 8293, 8294, 8295, 8296, 8543, 8544, 
    8545, 8546, 8547, 8548, 8549, 8550, 8551, 8552, 8553, 8554, 8555, 8556, 
    8557, 8558, 8559, 8560, 8561, 8562, 8563, 8564, 8565, 8566, 8567, 8568, 
    8569, 8570, 8571, 8572, 8573, 8574, 8575, 8576, 8577, 8578, 8579, 8580, 
    8581, 8582, 8583, 8584, 8585, 8586, 8587, 8588, 8589, 8590, 8591, 8592, 
    8593, 8594, 8595, 8596, 8597, 8598, 8599, 8600, 8601, 8602, 8603, 8604, 
    8605, 8606, 8607, 8608, 8609, 8610, 8611, 8612, 8613, 8614, 8877, 8878, 
    8879, 8880, 8881, 8882, 8883, 8884, 8885, 8886, 8887, 8888, 8889, 8890, 
    8891, 8892, 8893, 8894, 8895, 8896, 8897, 8898, 8899, 8900, 8901, 8902, 
    8903, 8904, 8905, 8906, 8907, 8908, 8909, 8910, 8911, 8912, 8913, 8914, 
    8915, 8916, 8917, 8918, 8919, 8920, 8921, 8922, 8923, 8924, 8925, 8926, 
    8927, 8928, 8929, 8930, 9225, 9226, 9227, 9228, 9229, 9230, 9231, 9232, 
    9233, 9234, 9235, 9236, 9237, 9238, 9239, 9240, 9241, 9242, 9243, 9244, 
    9245, 9246, 9247, 9248, 9249, 9250, 9251, 9252, 9253, 9254, 9255, 9256, 
    9257, 9258, 9259, 9260, 9261, 9262, 9263, 9264, 9265, 9266, 9267, 9268, 
    9269, 9270, 9271, 9272, 9273, 9274, 9275, 9276, 9277, 9278, 9807, 9808, 
    9809, 9810, 9811, 9812, 9813, 9814, 9815, 9816, 9817, 9818, 9819, 9820, 
    9821, 9822, 9823, 9824, 9825, 9826, 9827, 9828, 9829, 9830, 9831, 9832, 
    9833, 9834, 9835, 9836, 9837, 9838, 9839, 9840, 9841, 9842, 9843, 9844, 
    9845, 9846, 9847, 9848, 9849, 9850, 9851, 9852, 9853, 9854, 9855, 9856, 
    9857, 9858, 9859, 9860, 9861, 9862, 9863, 9864, 9865, 9866, 9867, 9868, 
    9869, 9870, 9871, 9872, 9873, 9874, 9875, 9876, 9877, 9878, 10151, 10152, 
    10153, 10154, 10155, 10156, 10157, 10158, 10159, 10160, 10161, 10162, 
    10163, 10164, 10165, 10166, 10167, 10168, 10169, 10170, 10171, 10172, 
    10173, 10174, 10175, 10176, 10177, 10178, 10179, 10180, 10181, 10182, 
    10183, 10184, 10185, 10186, 10187, 10188, 10189, 10190, 10191, 10192, 
    10193, 10194, 10195, 10196, 10197, 10198, 10199, 10200, 10201, 10202, 
    10203, 10204, 10205, 10206, 10207, 10208, 10209, 10210, 10211, 10212, 
    10213, 10214, 10215, 10216, 10217, 10218, 10219, 10220, 10221, 10222, 
    10431, 10432, 10433, 10434, 10435, 10436, 10437, 10438, 10439, 10440, 
    10441, 10442, 10443, 10444, 10445, 10446, 10447, 10448, 10449, 10450, 
    10451, 10452, 10453, 10454, 10455, 10456, 10457, 10458, 10459, 10460, 
    10461, 10462, 10463, 10464, 10465, 10466, 10467, 10468, 10469, 10470, 
    10471, 10472, 10473, 10474, 10475, 10476, 10477, 10478, 10479, 10480, 
    10481, 10482, 10483, 10484, 10485, 10486, 10487, 10488, 10489, 10490, 
    10491, 10492, 10493, 10494, 10495, 10496, 10497, 10498, 10499, 10500, 
    10501, 10502, 10711, 10712, 10713, 10714, 10715, 10716, 10717, 10718, 
    10719, 10720, 10721, 10722, 10723, 10724, 10725, 10726, 10727, 10728, 
    10729, 10730, 10731, 10732, 10733, 10734, 10735, 10736, 10737, 10738, 
    10739, 10740, 10741, 10742, 10743, 10744, 10745, 10746, 10747, 10748, 
    10749, 10750, 10751, 10752, 10753, 10754, 10755, 10756, 10757, 10758, 
    10759, 10760, 10761, 10762, 10763, 10764, 10765, 10766, 10767, 10768, 
    10769, 10770, 10771, 10772, 10773, 10774, 10775, 10776, 10777, 10778, 
    10779, 10780, 10781, 10782, 11063, 11064, 11065, 11066, 11067, 11068, 
    11069, 11070, 11071, 11072, 11073, 11074, 11075, 11076, 11077, 11078, 
    11079, 11080, 11081, 11082, 11083, 11084, 11085, 11086, 11087, 11088, 
    11089, 11090, 11091, 11092, 11093, 11094, 11095, 11096, 11097, 11098, 
    11099, 11100, 11101, 11102, 11103, 11104, 11105, 11106, 11107, 11108, 
    11109, 11110, 11111, 11112, 11113, 11114, 11115, 11116, 11117, 11118, 
    11119, 11120, 11121, 11122, 11123, 11124, 11125, 11126, 11127, 11128, 
    11129, 11130, 11131, 11132, 11133, 11134, 11325, 11326, 11327, 11328, 
    11329, 11330, 11331, 11332, 11333, 11334, 11335, 11336, 11337, 11338, 
    11339, 11340, 11341, 11342, 11343, 11344, 11345, 11346, 11347, 11348, 
    11349, 11350, 11351, 11352, 11353, 11354, 11355, 11356, 11357, 11358, 
    11359, 11360, 11361, 11362, 11363, 11364, 11365, 11366, 11367, 11368, 
    11369, 11370, 11371, 11372, 11373, 11374, 11375, 11376, 11377, 11378, 
    11505, 11506, 11507, 11508, 11509, 11510, 11511, 11512, 11513, 11514, 
    11515, 11516, 11517, 11518, 11519, 11520, 11521, 11522, 11523, 11524, 
    11525, 11526, 11527, 11528, 11529, 11530, 11531, 11532, 11533, 11534, 
    11535, 11536, 11537, 11538, 11539, 11540, 11541, 11542, 11543, 11544, 
    11545, 11546, 11547, 11548, 11549, 11550, 11551, 11552, 11553, 11554, 
    11555, 11556, 11557, 11558, 11679, 11680, 11681, 11682, 11683, 11684, 
    11685, 11686, 11687, 11688, 11689, 11690, 11691, 11692, 11693, 11694, 
    11695, 11696, 11697, 11698, 11699, 11700, 11701, 11702, 11703, 11704, 
    11705, 11706, 11707, 11708, 11709, 11710, 11711, 11712, 11713, 11714, 
    11715, 11716, 11717, 11718, 11719, 11720, 11721, 11722, 11723, 11724, 
    11725, 11726, 11727, 11728, 11729, 11730, 11731, 11732, 11733, 11734, 
    11735, 11736, 11737, 11738, 11739, 11740, 11741, 11742, 11743, 11744, 
    11745, 11746, 11747, 11748, 11749, 11750, 11751, 11752, 11753, 11754, 
    11755, 11756, 11757, 11758, 11759, 11760, 11761, 11762, 11763, 11764, 
    11765, 11766, 11767, 11768, 11769, 11770, 11771, 11772, 11773, 11774, 
    11775, 11776, 11777, 11778, 11779, 11780, 11781, 11782, 11783, 11784, 
    11785, 11786, 11787, 11788, 11789, 11790, 11791, 11792, 11793, 11794, 
    11795, 11796, 11797, 11798, 11799, 11800, 11801, 11802, 11803, 11804, 
    11805, 11806, 11807, 11808, 11809, 11810, 11811, 11812, 11813, 11814, 
    11815, 11816, 11817, 11818, 11819, 11820, 11821, 11822, 11823, 11824, 
    11825, 11826, 11827, 11828, 11829, 11830, 11831, 11832, 11833, 11834, 
    11835, 11836, 11837, 11838, 11839, 11840, 11841, 11842, 11843, 11844, 
    11845, 11846, 11847, 11848, 11849, 12245, 12246, 12247, 12248, 12249, 
    12250, 12251, 12252, 12253, 12254, 12255, 12256, 12257, 12258, 12259, 
    12260, 12261, 12262, 12263, 12264, 12265, 12266, 12267, 12268, 12269, 
    12270, 12271, 12272, 12273, 12274, 12275, 12276, 12277, 12278, 12279, 
    12280, 12281, 12282, 12283, 12284, 12285, 12286, 12287, 12288, 12289, 
    12290, 12291, 12292, 12293, 12294, 12295, 12296, 12297, 12298, 12299, 
    12300, 12301, 12302, 12303, 12304, 12305, 12306, 12307, 12308, 12309, 
    12310, 12311, 12312, 12313, 12314, 12315, 12316, 12317, 12318, 12319, 
    12320, 12321, 12322, 12323, 12324, 12325, 12326, 12327, 12328, 12329, 
    12330, 12331, 12332, 12333, 12334, 12335, 12336, 12337, 12338, 12339, 
    12340, 12341, 12342, 12343, 12344, 12345, 12346, 12347, 12348, 12349, 
    12350, 12351, 12352, 12353, 12354, 12355, 12356, 12357, 12358, 12359, 
    12360, 12361, 12362, 12363, 12364, 12365, 12366, 12367, 12368, 12369, 
    12370, 12371, 12372, 12373, 12374, 12375, 12376, 12377, 12378, 12379, 
    12380, 12381, 12382, 12383, 12384, 12385, 12386, 12387, 12388, 12389, 
    12390, 12391, 12392, 12393, 12394, 12395, 12396, 12397, 12398, 12399, 
    12400, 12401, 12402, 12403, 12404, 12405, 12406, 12407, 12408, 12409, 
    12410, 12411, 12412, 12413, 12414, 12415, 12937, 12938, 12939, 12940, 
    12941, 12942, 12943, 12944, 12945, 12946, 12947, 12948, 12949, 12950, 
    12951, 12952, 12953, 12954, 12955, 12956, 12957, 12958, 12959, 12960, 
    12961, 12962, 12963, 12964, 12965, 12966, 12967, 12968, 12969, 12970, 
    12971, 12972, 12973, 12974, 12975, 12976, 12977, 12978, 12979, 12980, 
    12981, 12982, 12983, 12984, 12985, 12986, 12987, 12988, 12989, 12990, 
    13165, 13166, 13167, 13168, 13169, 13170, 13171, 13172, 13173, 13174, 
    13175, 13176, 13177, 13178, 13179, 13180, 13181, 13182, 13183, 13184, 
    13185, 13186, 13187, 13188, 13189, 13190, 13191, 13192, 13193, 13194, 
    13195, 13196, 13197, 13198, 13199, 13200, 13201, 13202, 13203, 13204, 
    13205, 13206, 13207, 13208, 13209, 13210, 13211, 13212, 13213, 13214, 
    13215, 13216, 13217, 13218, 13483, 13484, 13485, 13486, 13487, 13488, 
    13489, 13490, 13491, 13492, 13493, 13494, 13495, 13496, 13497, 13498, 
    13499, 13500, 13501, 13502, 13503, 13504, 13505, 13506, 13507, 13508, 
    13509, 13510, 13511, 13512, 13513, 13514, 13515, 13516, 13517, 13518, 
    13519, 13520, 13521, 13522, 13523, 13524, 13525, 13526, 13527, 13528, 
    13529, 13530, 13531, 13532, 13533, 13534, 13535, 13536, 13537, 13538, 
    13539, 13540, 13541, 13542, 13543, 13544, 13545, 13546, 13547, 13548, 
    13549, 13550, 13551, 13552, 13553, 13554, 13745, 13746, 13747, 13748, 
    13749, 13750, 13751, 13752, 13753, 13754, 13755, 13756, 13757, 13758, 
    13759, 13760, 13761, 13762, 13763, 13764, 13765, 13766, 13767, 13768, 
    13769, 13770, 13771, 13772, 13773, 13774, 13775, 13776, 13777, 13778, 
    13779, 13780, 13781, 13782, 13783, 13784, 13785, 13786, 13787, 13788, 
    13789, 13790, 13791, 13792, 13793, 13794, 13795, 13796, 13797, 13798, 
    14093, 14094, 14095, 14096, 14097, 14098, 14099, 14100, 14101, 14102, 
    14103, 14104, 14105, 14106, 14107, 14108, 14109, 14110, 14111, 14112, 
    14113, 14114, 14115, 14116, 14117, 14118, 14119, 14120, 14121, 14122, 
    14123, 14124, 14125, 14126, 14127, 14128, 14129, 14130, 14131, 14132, 
    14133, 14134, 14135, 14136, 14137, 14138, 14139, 14140, 14141, 14142, 
    14143, 14144, 14145, 14146, 14675, 14676, 14677, 14678, 14679, 14680, 
    14681, 14682, 14683, 14684, 14685, 14686, 14687, 14688, 14689, 14690, 
    14691, 14692, 14693, 14694, 14695, 14696, 14697, 14698, 14699, 14700, 
    14701, 14702, 14703, 14704, 14705, 14706, 14707, 14708, 14709, 14710, 
    14711, 14712, 14713, 14714, 14715, 14716, 14717, 14718, 14719, 14720, 
    14721, 14722, 14723, 14724, 14725, 14726, 14727, 14728, 14729, 14730, 
    14731, 14732, 14733, 14734, 14735, 14736, 14737, 14738, 14739, 14740, 
    14741, 14742, 14743, 14744, 14745, 14746, 15019, 15020, 15021, 15022, 
    15023, 15024, 15025, 15026, 15027, 15028, 15029, 15030, 15031, 15032, 
    15033, 15034, 15035, 15036, 15037, 15038, 15039, 15040, 15041, 15042, 
    15043, 15044, 15045, 15046, 15047, 15048, 15049, 15050, 15051, 15052, 
    15053, 15054, 15055, 15056, 15057, 15058, 15059, 15060, 15061, 15062, 
    15063, 15064, 15065, 15066, 15067, 15068, 15069, 15070, 15071, 15072, 
    15073, 15074, 15075, 15076, 15077, 15078, 15079, 15080, 15081, 15082, 
    15083, 15084, 15085, 15086, 15087, 15088, 15089, 15090, 15363, 15364, 
    15365, 15366, 15367, 15368, 15369, 15370, 15371, 15372, 15373, 15374, 
    15375, 15376, 15377, 15378, 15379, 15380, 15381, 15382, 15383, 15384, 
    15385, 15386, 15387, 15388, 15389, 15390, 15391, 15392, 15393, 15394, 
    15395, 15396, 15397, 15398, 15399, 15400, 15401, 15402, 15403, 15404, 
    15405, 15406, 15407, 15408, 15409, 15410, 15411, 15412, 15413, 15414, 
    15415, 15416, 15417, 15418, 15419, 15420, 15421, 15422, 15423, 15424, 
    15425, 15426, 15427, 15428, 15429, 15430, 15431, 15432, 15433, 15434, 
    15715, 15716, 15717, 15718, 15719, 15720, 15721, 15722, 15723, 15724, 
    15725, 15726, 15727, 15728, 15729, 15730, 15731, 15732, 15733, 15734, 
    15735, 15736, 15737, 15738, 15739, 15740, 15741, 15742, 15743, 15744, 
    15745, 15746, 15747, 15748, 15749, 15750, 15751, 15752, 15753, 15754, 
    15755, 15756, 15757, 15758, 15759, 15760, 15761, 15762, 15763, 15764, 
    15765, 15766, 15767, 15768, 15769, 15770, 15771, 15772, 15773, 15774, 
    15775, 15776, 15777, 15778, 15779, 15780, 15781, 15782, 15783, 15784, 
    15785, 15786, 16067, 16068, 16069, 16070, 16071, 16072, 16073, 16074, 
    16075, 16076, 16077, 16078, 16079, 16080, 16081, 16082, 16083, 16084, 
    16085, 16086, 16087, 16088, 16089, 16090, 16091, 16092, 16093, 16094, 
    16095, 16096, 16097, 16098, 16099, 16100, 16101, 16102, 16103, 16104, 
    16105, 16106, 16107, 16108, 16109, 16110, 16111, 16112, 16113, 16114, 
    16115, 16116, 16117, 16118, 16119, 16120, 16121, 16122, 16123, 16124, 
    16125, 16126, 16127, 16128, 16129, 16130, 16131, 16132, 16133, 16134, 
    16135, 16136, 16137, 16138, 16329, 16330, 16331, 16332, 16333, 16334, 
    16335, 16336, 16337, 16338, 16339, 16340, 16341, 16342, 16343, 16344, 
    16345, 16346, 16347, 16348, 16349, 16350, 16351, 16352, 16353, 16354, 
    16355, 16356, 16357, 16358, 16359, 16360, 16361, 16362, 16363, 16364, 
    16365, 16366, 16367, 16368, 16369, 16370, 16371, 16372, 16373, 16374, 
    16375, 16376, 16377, 16378, 16379, 16380, 16381, 16382, 16557, 16558, 
    16559, 16560, 16561, 16562, 16563, 16564, 16565, 16566, 16567, 16568, 
    16569, 16570, 16571, 16572, 16573, 16574, 16575, 16576, 16577, 16578, 
    16579, 16580, 16581, 16582, 16583, 16584, 16585, 16586, 16587, 16588, 
    16589, 16590, 16591, 16592, 16593, 16594, 16595, 16596, 16597, 16598, 
    16599, 16600, 16601, 16602, 16603, 16604, 16605, 16606, 16607, 16608, 
    16609, 16610, 16731, 16732, 16733, 16734, 16735, 16736, 16737, 16738, 
    16739, 16740, 16741, 16742, 16743, 16744, 16745, 16746, 16747, 16748, 
    16749, 16750, 16751, 16752, 16753, 16754, 16755, 16756, 16757, 16758, 
    16759, 16760, 16761, 16762, 16763, 16764, 16765, 16766, 16767, 16768, 
    16769, 16770, 16771, 16772, 16773, 16774, 16775, 16776, 16777, 16778, 
    16779, 16780, 16781, 16782, 16783, 16784, 16785, 16786, 16787, 16788, 
    16789, 16790, 16791, 16792, 16793, 16794, 16795, 16796, 16797, 16798, 
    16799, 16800, 16801, 16802, 16803, 16804, 16805, 16806, 16807, 16808, 
    16809, 16810, 16811, 16812, 16813, 16814, 16815, 16816, 16817, 16818, 
    16819, 16820, 16821, 16822, 16823, 16824, 16825, 16826, 16827, 16828, 
    16829, 16830, 16831, 16832, 16833, 16834, 16835, 16836, 16837, 16838, 
    16839, 16840, 16841, 16842, 16843, 16844, 16845, 16846, 16847, 16848, 
    16849, 16850, 16851, 16852, 16853, 16854, 16855, 16856, 16857, 16858, 
    16859, 16860, 16861, 16862, 16863, 16864, 16865, 16866, 16867, 16868, 
    16869, 16870, 16871, 16872, 16873, 16874, 16875, 16876, 16877, 16878, 
    16879, 16880, 16881, 16882, 16883, 16884, 16885, 16886, 16887, 16888, 
    16889, 16890, 16891, 16892, 16893, 16894, 16895, 16896, 16897, 16898, 
    16899, 16900, 16901, 17217, 17218, 17219, 17220, 17221, 17222, 17223, 
    17224, 17225, 17226, 17227, 17228, 17229, 17230, 17231, 17232, 17233, 
    17234, 17235, 17236, 17237, 17238, 17239, 17240, 17241, 17242, 17243, 
    17244, 17245, 17246, 17247, 17248, 17249, 17250, 17251, 17252, 17253, 
    17254, 17255, 17256, 17257, 17258, 17259, 17260, 17261, 17262, 17263, 
    17264, 17265, 17266, 17267, 17268, 17269, 17270, 17271, 17272, 17273, 
    17274, 17275, 17276, 17277, 17278, 17279, 17280, 17281, 17282, 17283, 
    17284, 17285, 17286, 17287, 17288, 17289, 17290, 17291, 17292, 17293, 
    17294, 17295, 17296, 17297, 17298, 17299, 17300, 17301, 17302, 17303, 
    17304, 17305, 17306, 17307, 17308, 17309, 17310, 17311, 17312, 17313, 
    17314, 17315, 17316, 17317, 17318, 17319, 17320, 17321, 17322, 17323, 
    17324, 17325, 17326, 17327, 17328, 17329, 17330, 17331, 17332, 17333, 
    17334, 17335, 17336, 17337, 17338, 17339, 17340, 17341, 17342, 17343, 
    17344, 17345, 17346, 17347, 17348, 17349, 17350, 17351, 17352, 17353, 
    17354, 17355, 17356, 17357, 17358, 17359, 17360, 17361, 17362, 17363, 
    17364, 17365, 17366, 17367, 17368, 17369, 17370, 17371, 17372, 17373, 
    17374, 17375, 17376, 17377, 17378, 17379, 17380, 17381, 17382, 17383, 
    17384, 17385, 17386, 17387, 17909, 17910, 17911, 17912, 17913, 17914, 
    17915, 17916, 17917, 17918, 17919, 17920, 17921, 17922, 17923, 17924, 
    17925, 17926, 17927, 17928, 17929, 17930, 17931, 17932, 17933, 17934, 
    17935, 17936, 17937, 17938, 17939, 17940, 17941, 17942, 17943, 17944, 
    17945, 17946, 17947, 17948, 17949, 17950, 17951, 17952, 17953, 17954, 
    17955, 17956, 17957, 17958, 17959, 17960, 17961, 17962, 18137, 18138, 
    18139, 18140, 18141, 18142, 18143, 18144, 18145, 18146, 18147, 18148, 
    18149, 18150, 18151, 18152, 18153, 18154, 18155, 18156, 18157, 18158, 
    18159, 18160, 18161, 18162, 18163, 18164, 18165, 18166, 18167, 18168, 
    18169, 18170, 18171, 18172, 18173, 18174, 18175, 18176, 18177, 18178, 
    18179, 18180, 18181, 18182, 18183, 18184, 18185, 18186, 18187, 18188, 
    18189, 18190, 18407, 18408, 18409, 18410, 18411, 18412, 18413, 18414, 
    18415, 18416, 18417, 18418, 18419, 18420, 18421, 18422, 18423, 18424, 
    18425, 18426, 18427, 18428, 18429, 18430, 18431, 18432, 18433, 18434, 
    18435, 18436, 18437, 18438, 18439, 18440, 18441, 18442, 18443, 18444, 
    18445, 18446, 18447, 18448, 18449, 18450, 18451, 18452, 18453, 18454, 
    18455, 18456, 18457, 18458, 18459, 18460, 18461, 18462, 18463, 18464, 
    18465, 18466, 18467, 18468, 18469, 18470, 18471, 18472, 18473, 18474, 
    18475, 18476, 18477, 18478, 18551, 18552, 18553, 18554, 18555, 18556, 
    18557, 18558, 18559, 18560, 18561, 18562, 18563, 18564, 18565, 18566, 
    18567, 18568, 18569, 18570, 18571, 18572, 18573, 18574, 18575, 18576, 
    18577, 18578, 18579, 18580, 18581, 18582, 18583, 18584, 18585, 18586, 
    18587, 18588, 18589, 18590, 18591, 18592, 18593, 18594, 18595, 18596, 
    18597, 18598, 18599, 18600, 18601, 18602, 18603, 18604, 18899, 18900, 
    18901, 18902, 18903, 18904, 18905, 18906, 18907, 18908, 18909, 18910, 
    18911, 18912, 18913, 18914, 18915, 18916, 18917, 18918, 18919, 18920, 
    18921, 18922, 18923, 18924, 18925, 18926, 18927, 18928, 18929, 18930, 
    18931, 18932, 18933, 18934, 18935, 18936, 18937, 18938, 18939, 18940, 
    18941, 18942, 18943, 18944, 18945, 18946, 18947, 18948, 18949, 18950, 
    18951, 18952, 19463, 19464, 19465, 19466, 19467, 19468, 19469, 19470, 
    19471, 19472, 19473, 19474, 19475, 19476, 19477, 19478, 19479, 19480, 
    19481, 19482, 19483, 19484, 19485, 19486, 19487, 19488, 19489, 19490, 
    19491, 19492, 19493, 19494, 19495, 19496, 19497, 19498, 19499, 19500, 
    19501, 19502, 19503, 19504, 19505, 19506, 19507, 19508, 19509, 19510, 
    19511, 19512, 19513, 19514, 19515, 19516, 19517, 19518, 19519, 19520, 
    19521, 19522, 19523, 19524, 19525, 19526, 19527, 19528, 19529, 19530, 
    19531, 19532, 19533, 19534, 19807, 19808, 19809, 19810, 19811, 19812, 
    19813, 19814, 19815, 19816, 19817, 19818, 19819, 19820, 19821, 19822, 
    19823, 19824, 19825, 19826, 19827, 19828, 19829, 19830, 19831, 19832, 
    19833, 19834, 19835, 19836, 19837, 19838, 19839, 19840, 19841, 19842, 
    19843, 19844, 19845, 19846, 19847, 19848, 19849, 19850, 19851, 19852, 
    19853, 19854, 19855, 19856, 19857, 19858, 19859, 19860, 19861, 19862, 
    19863, 19864, 19865, 19866, 19867, 19868, 19869, 19870, 19871, 19872, 
    19873, 19874, 19875, 19876, 19877, 19878, 20087, 20088, 20089, 20090, 
    20091, 20092, 20093, 20094, 20095, 20096, 20097, 20098, 20099, 20100, 
    20101, 20102, 20103, 20104, 20105, 20106, 20107, 20108, 20109, 20110, 
    20111, 20112, 20113, 20114, 20115, 20116, 20117, 20118, 20119, 20120, 
    20121, 20122, 20123, 20124, 20125, 20126, 20127, 20128, 20129, 20130, 
    20131, 20132, 20133, 20134, 20135, 20136, 20137, 20138, 20139, 20140, 
    20141, 20142, 20143, 20144, 20145, 20146, 20147, 20148, 20149, 20150, 
    20151, 20152, 20153, 20154, 20155, 20156, 20157, 20158, 20367, 20368, 
    20369, 20370, 20371, 20372, 20373, 20374, 20375, 20376, 20377, 20378, 
    20379, 20380, 20381, 20382, 20383, 20384, 20385, 20386, 20387, 20388, 
    20389, 20390, 20391, 20392, 20393, 20394, 20395, 20396, 20397, 20398, 
    20399, 20400, 20401, 20402, 20403, 20404, 20405, 20406, 20407, 20408, 
    20409, 20410, 20411, 20412, 20413, 20414, 20415, 20416, 20417, 20418, 
    20419, 20420, 20421, 20422, 20423, 20424, 20425, 20426, 20427, 20428, 
    20429, 20430, 20431, 20432, 20433, 20434, 20435, 20436, 20437, 20438, 
    20719, 20720, 20721, 20722, 20723, 20724, 20725, 20726, 20727, 20728, 
    20729, 20730, 20731, 20732, 20733, 20734, 20735, 20736, 20737, 20738, 
    20739, 20740, 20741, 20742, 20743, 20744, 20745, 20746, 20747, 20748, 
    20749, 20750, 20751, 20752, 20753, 20754, 20755, 20756, 20757, 20758, 
    20759, 20760, 20761, 20762, 20763, 20764, 20765, 20766, 20767, 20768, 
    20769, 20770, 20771, 20772, 20773, 20774, 20775, 20776, 20777, 20778, 
    20779, 20780, 20781, 20782, 20783, 20784, 20785, 20786, 20787, 20788, 
    20789, 20790, 20999, 21000, 21001, 21002, 21003, 21004, 21005, 21006, 
    21007, 21008, 21009, 21010, 21011, 21012, 21013, 21014, 21015, 21016, 
    21017, 21018, 21019, 21020, 21021, 21022, 21023, 21024, 21025, 21026, 
    21027, 21028, 21029, 21030, 21031, 21032, 21033, 21034, 21035, 21036, 
    21037, 21038, 21039, 21040, 21041, 21042, 21043, 21044, 21045, 21046, 
    21047, 21048, 21049, 21050, 21051, 21052, 21179, 21180, 21181, 21182, 
    21183, 21184, 21185, 21186, 21187, 21188, 21189, 21190, 21191, 21192, 
    21193, 21194, 21195, 21196, 21197, 21198, 21199, 21200, 21201, 21202, 
    21203, 21204, 21205, 21206, 21207, 21208, 21209, 21210, 21211, 21212, 
    21213, 21214, 21215, 21216, 21217, 21218, 21219, 21220, 21221, 21222, 
    21223, 21224, 21225, 21226, 21227, 21228, 21229, 21230, 21231, 21232, 
    21578, 21579, 21580, 21581, 21582, 21583, 21584, 21585, 21586, 21587, 
    21588, 21589, 21590, 21591, 21592, 21593, 21594, 21595, 21596, 21597, 
    21598, 21599, 21600, 21601, 21602, 21603, 21604, 21605, 21606, 21607, 
    21608, 21609, 21610, 21611, 21612, 21613, 21614, 21615, 21616, 21617, 
    21618, 21619, 21620, 21621, 21622, 21623, 21624, 21625, 21626, 21627, 
    21628, 21629, 21630, 21631, 21632, 21633, 21634, 21635, 21636, 21637, 
    21638, 21639, 21640, 21641, 21642, 21643, 21644, 21645, 21646, 21647, 
    21648, 21649, 21650, 21651, 21652, 21653, 21654, 21655, 21656, 21657, 
    21658, 21659, 21660, 21661, 21662, 21663, 21664, 21665, 21666, 21667, 
    21668, 21669, 21670, 21671, 21672, 21673, 21674, 21675, 21676, 21677, 
    21678, 21679, 21680, 21681, 21682, 21683, 21684, 21685, 21686, 21687, 
    21688, 21689, 21690, 21691, 21692, 21693, 21694, 21695, 21696, 21697, 
    21698, 21699, 21700, 21701, 21702, 21703, 21704, 21705, 21706, 21707, 
    21708, 21709, 21710, 21711, 21712, 21713, 21714, 21715, 21716, 21717, 
    21718, 21719, 21720, 21721, 21722, 21723, 21724, 21725, 21726, 21727, 
    21728, 21729, 21730, 21731, 21732, 21733, 21734, 21735, 21736, 21737, 
    21738, 21739, 21740, 21741, 21742, 21743, 21744, 21745, 21746, 21747, 
    21748, 21992, 21993, 21994, 21995, 21996, 21997, 21998, 21999, 22000, 
    22001, 22002, 22003, 22004, 22005, 22006, 22007, 22008, 22009, 22010, 
    22011, 22012, 22013, 22014, 22015, 22016, 22017, 22018, 22019, 22020, 
    22021, 22022, 22023, 22024, 22025, 22026, 22027, 22028, 22029, 22030, 
    22031, 22032, 22033, 22034, 22035, 22036, 22037, 22038, 22039, 22040, 
    22041, 22042, 22043, 22044, 22045, 22046, 22047, 22048, 22049, 22050, 
    22051, 22052, 22053, 22054, 22055, 22056, 22057, 22058, 22059, 22060, 
    22061, 22062, 22063, 22064, 22065, 22066, 22067, 22068, 22069, 22070, 
    22071, 22072, 22073, 22074, 22075, 22076, 22077, 22078, 22079, 22080, 
    22081, 22082, 22083, 22084, 22085, 22086, 22087, 22088, 22089, 22090, 
    22091, 22092, 22093, 22094, 22095, 22096, 22097, 22098, 22099, 22100, 
    22101, 22102, 22103, 22104, 22105, 22106, 22107, 22108, 22109, 22110, 
    22111, 22112, 22113, 22114, 22115, 22116, 22117, 22118, 22119, 22120, 
    22121, 22122, 22123, 22124, 22125, 22126, 22127, 22128, 22129, 22130, 
    22131, 22132, 22133, 22134, 22135, 22136, 22137, 22138, 22139, 22140, 
    22141, 22142, 22143, 22144, 22145, 22146, 22147, 22148, 22149, 22150, 
    22151, 22152, 22153, 22154, 22155, 22156, 22157, 22158, 22159, 22160, 
    22161, 22162, 22459, 22460, 22461, 22462, 22463, 22464, 22465, 22466, 
    22467, 22468, 22469, 22470, 22471, 22472, 22473, 22474, 22475, 22476, 
    22477, 22478, 22479, 22480, 22481, 22482, 22483, 22484, 22485, 22486, 
    22487, 22488, 22489, 22490, 22491, 22492, 22493, 22494, 22495, 22496, 
    22497, 22498, 22499, 22500, 22501, 22502, 22503, 22504, 22505, 22506, 
    22507, 22508, 22509, 22510, 22511, 22512, 22687, 22688, 22689, 22690, 
    22691, 22692, 22693, 22694, 22695, 22696, 22697, 22698, 22699, 22700, 
    22701, 22702, 22703, 22704, 22705, 22706, 22707, 22708, 22709, 22710, 
    22711, 22712, 22713, 22714, 22715, 22716, 22717, 22718, 22719, 22720, 
    22721, 22722, 22723, 22724, 22725, 22726, 22727, 22728, 22729, 22730, 
    22731, 22732, 22733, 22734, 22735, 22736, 22737, 22738, 22739, 22740, 
    22939, 22940, 22941, 22942, 22943, 22944, 22945, 22946, 22947, 22948, 
    22949, 22950, 22951, 22952, 22953, 22954, 22955, 22956, 22957, 22958, 
    22959, 22960, 22961, 22962, 22963, 22964, 22965, 22966, 22967, 22968, 
    22969, 22970, 22971, 22972, 22973, 22974, 22975, 22976, 22977, 22978, 
    22979, 22980, 22981, 22982, 22983, 22984, 22985, 22986, 22987, 22988, 
    22989, 22990, 22991, 22992, 22993, 22994, 22995, 22996, 22997, 22998, 
    22999, 23000, 23001, 23002, 23003, 23004, 23005, 23006, 23007, 23008, 
    23009, 23010]]], unsorted=True)
mdb.models['HexFiberArray'].rootAssembly.SetFromNodeLabels(name=
    'RVE_AG_NegY_RVE_AGSORT', nodeLabels=[['HexPackPart-1', [65, 66, 93, 94, 
    104, 111, 170, 171, 197, 198, 202, 1207, 1206, 1205, 1204, 1203, 1202, 
    1254, 1253, 1252, 1251, 1250, 1249, 1248, 1247, 1270, 1269, 1268, 1267, 
    1266, 1265, 1264, 1263, 1615, 1614, 1613, 1612, 1611, 1610, 1609, 1608, 
    1658, 1657, 1656, 1655, 1654, 1653, 1652, 1651, 1666, 1665, 1664, 1663, 
    1662, 1661, 1660, 1659, 1894, 1893, 1892, 1891, 1890, 1889, 1888, 1887, 
    1886, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 2029, 2028, 2027, 
    2026, 2025, 2024, 2023, 2022, 2021, 2054, 2053, 2052, 2051, 2050, 2049, 
    2048, 2047, 2979, 2978, 2977, 2976, 2975, 2974, 2996, 2995, 2994, 2993, 
    2992, 2991, 2990, 2989, 3012, 3011, 3010, 3009, 3008, 3007, 3006, 3005, 
    3383, 3382, 3381, 3380, 3379, 3378, 3377, 3376, 3400, 3399, 3398, 3397, 
    3396, 3395, 3394, 3393, 3408, 3407, 3406, 3405, 3404, 3403, 3402, 3401, 
    3553, 3552, 3551, 3550, 3549, 3548, 3547, 3546, 3545, 3591, 3592, 3593, 
    3594, 3595, 3596, 3597, 3598, 3698, 3697, 3696, 3695, 3694, 3693, 3692, 
    3691, 3690, 9165, 9166, 9167, 9168, 9169, 9170, 9159, 9160, 9161, 9162, 
    9163, 9164, 9153, 9154, 9155, 9156, 9157, 9158, 9147, 9148, 9149, 9150, 
    9151, 9152, 9141, 9142, 9143, 9144, 9145, 9146, 9135, 9136, 9137, 9138, 
    9139, 9140, 9129, 9130, 9131, 9132, 9133, 9134, 9123, 9124, 9125, 9126, 
    9127, 9128, 10983, 10984, 10985, 10986, 10987, 10988, 10989, 10990, 10975, 
    10976, 10977, 10978, 10979, 10980, 10981, 10982, 10967, 10968, 10969, 
    10970, 10971, 10972, 10973, 10974, 10959, 10960, 10961, 10962, 10963, 
    10964, 10965, 10966, 10951, 10952, 10953, 10954, 10955, 10956, 10957, 
    10958, 10943, 10944, 10945, 10946, 10947, 10948, 10949, 10950, 10935, 
    10936, 10937, 10938, 10939, 10940, 10941, 10942, 10927, 10928, 10929, 
    10930, 10931, 10932, 10933, 10934, 12650, 12651, 12652, 12653, 12654, 
    12655, 12656, 12657, 12658, 12641, 12642, 12643, 12644, 12645, 12646, 
    12647, 12648, 12649, 12632, 12633, 12634, 12635, 12636, 12637, 12638, 
    12639, 12640, 12623, 12624, 12625, 12626, 12627, 12628, 12629, 12630, 
    12631, 12614, 12615, 12616, 12617, 12618, 12619, 12620, 12621, 12622, 
    12605, 12606, 12607, 12608, 12609, 12610, 12611, 12612, 12613, 12596, 
    12597, 12598, 12599, 12600, 12601, 12602, 12603, 12604, 12587, 12588, 
    12589, 12590, 12591, 12592, 12593, 12594, 12595, 13618, 13619, 13620, 
    13621, 13622, 13623, 13624, 13625, 13626, 13609, 13610, 13611, 13612, 
    13613, 13614, 13615, 13616, 13617, 13600, 13601, 13602, 13603, 13604, 
    13605, 13606, 13607, 13608, 13591, 13592, 13593, 13594, 13595, 13596, 
    13597, 13598, 13599, 13582, 13583, 13584, 13585, 13586, 13587, 13588, 
    13589, 13590, 13573, 13574, 13575, 13576, 13577, 13578, 13579, 13580, 
    13581, 13564, 13565, 13566, 13567, 13568, 13569, 13570, 13571, 13572, 
    13555, 13556, 13557, 13558, 13559, 13560, 13561, 13562, 13563, 18893, 
    18894, 18895, 18896, 18897, 18898, 18887, 18888, 18889, 18890, 18891, 
    18892, 18881, 18882, 18883, 18884, 18885, 18886, 18875, 18876, 18877, 
    18878, 18879, 18880, 18869, 18870, 18871, 18872, 18873, 18874, 18863, 
    18864, 18865, 18866, 18867, 18868, 18857, 18858, 18859, 18860, 18861, 
    18862, 18851, 18852, 18853, 18854, 18855, 18856, 20711, 20712, 20713, 
    20714, 20715, 20716, 20717, 20718, 20703, 20704, 20705, 20706, 20707, 
    20708, 20709, 20710, 20695, 20696, 20697, 20698, 20699, 20700, 20701, 
    20702, 20687, 20688, 20689, 20690, 20691, 20692, 20693, 20694, 20679, 
    20680, 20681, 20682, 20683, 20684, 20685, 20686, 20671, 20672, 20673, 
    20674, 20675, 20676, 20677, 20678, 20663, 20664, 20665, 20666, 20667, 
    20668, 20669, 20670, 20655, 20656, 20657, 20658, 20659, 20660, 20661, 
    20662, 22450, 22451, 22452, 22453, 22454, 22455, 22456, 22457, 22458, 
    22441, 22442, 22443, 22444, 22445, 22446, 22447, 22448, 22449, 22432, 
    22433, 22434, 22435, 22436, 22437, 22438, 22439, 22440, 22423, 22424, 
    22425, 22426, 22427, 22428, 22429, 22430, 22431, 22414, 22415, 22416, 
    22417, 22418, 22419, 22420, 22421, 22422, 22405, 22406, 22407, 22408, 
    22409, 22410, 22411, 22412, 22413, 22396, 22397, 22398, 22399, 22400, 
    22401, 22402, 22403, 22404, 22387, 22388, 22389, 22390, 22391, 22392, 
    22393, 22394, 22395, 23146, 23147, 23148, 23149, 23150, 23151, 23152, 
    23153, 23154, 23137, 23138, 23139, 23140, 23141, 23142, 23143, 23144, 
    23145, 23128, 23129, 23130, 23131, 23132, 23133, 23134, 23135, 23136, 
    23119, 23120, 23121, 23122, 23123, 23124, 23125, 23126, 23127, 23110, 
    23111, 23112, 23113, 23114, 23115, 23116, 23117, 23118, 23101, 23102, 
    23103, 23104, 23105, 23106, 23107, 23108, 23109, 23092, 23093, 23094, 
    23095, 23096, 23097, 23098, 23099, 23100, 23083, 23084, 23085, 23086, 
    23087, 23088, 23089, 23090, 23091]]], unsorted=True)
mdb.models['HexFiberArray'].rootAssembly.SetFromNodeLabels(name=
    'RVE_AG_PosY_RVE_AGSORT', nodeLabels=[['HexPackPart-1', [6, 7, 39, 40, 52, 
    62, 115, 116, 149, 150, 162, 252, 253, 254, 255, 256, 257, 267, 268, 269, 
    270, 271, 272, 273, 274, 283, 284, 285, 286, 287, 288, 289, 290, 712, 713, 
    714, 715, 716, 717, 718, 719, 729, 730, 731, 732, 733, 734, 735, 736, 737, 
    738, 739, 740, 741, 742, 743, 744, 981, 982, 983, 984, 985, 986, 987, 988, 
    989, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1170, 1171, 1172, 
    1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 
    1185, 1186, 2070, 2071, 2072, 2073, 2074, 2075, 2115, 2116, 2117, 2118, 
    2119, 2120, 2121, 2122, 2131, 2132, 2133, 2134, 2135, 2136, 2137, 2138, 
    2534, 2535, 2536, 2537, 2538, 2539, 2540, 2541, 2577, 2578, 2579, 2580, 
    2581, 2582, 2583, 2584, 2585, 2586, 2587, 2588, 2589, 2590, 2591, 2592, 
    2812, 2813, 2814, 2815, 2816, 2817, 2818, 2819, 2820, 2821, 2822, 2823, 
    2824, 2825, 2826, 2827, 2828, 2911, 2912, 2913, 2914, 2915, 2916, 2917, 
    2918, 2919, 3999, 4000, 4001, 4002, 4003, 4004, 4005, 4006, 4007, 4008, 
    4009, 4010, 4011, 4012, 4013, 4014, 4015, 4016, 4017, 4018, 4019, 4020, 
    4021, 4022, 4023, 4024, 4025, 4026, 4027, 4028, 4029, 4030, 4031, 4032, 
    4033, 4034, 4035, 4036, 4037, 4038, 4039, 4040, 4041, 4042, 4043, 4044, 
    4045, 4046, 5939, 5940, 5941, 5942, 5943, 5944, 5945, 5946, 5947, 5948, 
    5949, 5950, 5951, 5952, 5953, 5954, 5955, 5956, 5957, 5958, 5959, 5960, 
    5961, 5962, 5963, 5964, 5965, 5966, 5967, 5968, 5969, 5970, 5971, 5972, 
    5973, 5974, 5975, 5976, 5977, 5978, 5979, 5980, 5981, 5982, 5983, 5984, 
    5985, 5986, 5987, 5988, 5989, 5990, 5991, 5992, 5993, 5994, 5995, 5996, 
    5997, 5998, 5999, 6000, 6001, 6002, 7943, 7944, 7945, 7946, 7947, 7948, 
    7949, 7950, 7951, 7952, 7953, 7954, 7955, 7956, 7957, 7958, 7959, 7960, 
    7961, 7962, 7963, 7964, 7965, 7966, 7967, 7968, 7969, 7970, 7971, 7972, 
    7973, 7974, 7975, 7976, 7977, 7978, 7979, 7980, 7981, 7982, 7983, 7984, 
    7985, 7986, 7987, 7988, 7989, 7990, 7991, 7992, 7993, 7994, 7995, 7996, 
    7997, 7998, 7999, 8000, 8001, 8002, 8003, 8004, 8005, 8006, 8007, 8008, 
    8009, 8010, 8011, 8012, 8013, 8014, 8687, 8688, 8689, 8690, 8691, 8692, 
    8693, 8694, 8695, 8696, 8697, 8698, 8699, 8700, 8701, 8702, 8703, 8704, 
    8705, 8706, 8707, 8708, 8709, 8710, 8711, 8712, 8713, 8714, 8715, 8716, 
    8717, 8718, 8719, 8720, 8721, 8722, 8723, 8724, 8725, 8726, 8727, 8728, 
    8729, 8730, 8731, 8732, 8733, 8734, 8735, 8736, 8737, 8738, 8739, 8740, 
    8741, 8742, 8743, 8744, 8745, 8746, 8747, 8748, 8749, 8750, 8751, 8752, 
    8753, 8754, 8755, 8756, 8757, 8758, 13991, 13992, 13993, 13994, 13995, 
    13996, 13997, 13998, 13999, 14000, 14001, 14002, 14003, 14004, 14005, 
    14006, 14007, 14008, 14009, 14010, 14011, 14012, 14013, 14014, 14015, 
    14016, 14017, 14018, 14019, 14020, 14021, 14022, 14023, 14024, 14025, 
    14026, 14027, 14028, 14029, 14030, 14031, 14032, 14033, 14034, 14035, 
    14036, 14037, 14038, 15931, 15932, 15933, 15934, 15935, 15936, 15937, 
    15938, 15939, 15940, 15941, 15942, 15943, 15944, 15945, 15946, 15947, 
    15948, 15949, 15950, 15951, 15952, 15953, 15954, 15955, 15956, 15957, 
    15958, 15959, 15960, 15961, 15962, 15963, 15964, 15965, 15966, 15967, 
    15968, 15969, 15970, 15971, 15972, 15973, 15974, 15975, 15976, 15977, 
    15978, 15979, 15980, 15981, 15982, 15983, 15984, 15985, 15986, 15987, 
    15988, 15989, 15990, 15991, 15992, 15993, 15994, 17559, 17560, 17561, 
    17562, 17563, 17564, 17565, 17566, 17567, 17568, 17569, 17570, 17571, 
    17572, 17573, 17574, 17575, 17576, 17577, 17578, 17579, 17580, 17581, 
    17582, 17583, 17584, 17585, 17586, 17587, 17588, 17589, 17590, 17591, 
    17592, 17593, 17594, 17595, 17596, 17597, 17598, 17599, 17600, 17601, 
    17602, 17603, 17604, 17605, 17606, 17607, 17608, 17609, 17610, 17611, 
    17612, 17613, 17614, 17615, 17616, 17617, 17618, 17619, 17620, 17621, 
    17622, 17623, 17624, 17625, 17626, 17627, 17628, 17629, 17630, 18479, 
    18480, 18481, 18482, 18483, 18484, 18485, 18486, 18487, 18488, 18489, 
    18490, 18491, 18492, 18493, 18494, 18495, 18496, 18497, 18498, 18499, 
    18500, 18501, 18502, 18503, 18504, 18505, 18506, 18507, 18508, 18509, 
    18510, 18511, 18512, 18513, 18514, 18515, 18516, 18517, 18518, 18519, 
    18520, 18521, 18522, 18523, 18524, 18525, 18526, 18527, 18528, 18529, 
    18530, 18531, 18532, 18533, 18534, 18535, 18536, 18537, 18538, 18539, 
    18540, 18541, 18542, 18543, 18544, 18545, 18546, 18547, 18548, 18549, 
    18550]]], unsorted=True)
mdb.models['HexFiberArray'].rootAssembly.SetFromNodeLabels(name=
    'RVE_AG_NegZ_RVE_AGSORT', nodeLabels=[['HexPackPart-1', [145, 146, 161, 
    163, 194, 201, 202, 206, 2473, 2472, 2471, 2470, 2469, 2468, 2467, 2466, 
    2516, 2515, 2514, 2513, 2512, 2511, 2510, 2509, 2524, 2523, 2522, 2521, 
    2520, 2519, 2518, 2517, 2811, 2810, 2809, 2808, 2807, 2806, 2805, 2804, 
    2803, 2802, 2801, 2800, 2799, 2798, 2797, 2796, 2795, 2794, 2793, 2829, 
    2830, 2831, 2832, 2833, 2834, 2835, 2836, 2842, 2841, 2840, 2839, 2838, 
    2837, 2874, 2873, 2872, 2871, 2870, 2869, 2868, 2867, 3332, 3331, 3330, 
    3329, 3328, 3327, 3326, 3325, 3340, 3339, 3338, 3337, 3336, 3335, 3334, 
    3333, 3544, 3543, 3542, 3541, 3540, 3539, 3538, 3537, 3536, 3535, 3534, 
    3533, 3532, 3531, 3530, 3529, 3528, 3527, 3526, 3591, 3592, 3593, 3594, 
    3595, 3596, 3597, 3598, 3599, 3600, 3601, 3602, 3603, 3604, 3605, 3606, 
    3627, 3626, 3625, 3624, 3623, 3622, 3644, 3643, 3642, 3641, 3640, 3639, 
    3638, 3637, 15635, 15636, 15637, 15638, 15639, 15640, 15641, 15642, 15627, 
    15628, 15629, 15630, 15631, 15632, 15633, 15634, 15619, 15620, 15621, 
    15622, 15623, 15624, 15625, 15626, 15611, 15612, 15613, 15614, 15615, 
    15616, 15617, 15618, 15603, 15604, 15605, 15606, 15607, 15608, 15609, 
    15610, 15595, 15596, 15597, 15598, 15599, 15600, 15601, 15602, 15587, 
    15588, 15589, 15590, 15591, 15592, 15593, 15594, 15579, 15580, 15581, 
    15582, 15583, 15584, 15585, 15586, 17854, 17853, 17852, 17851, 17850, 
    17849, 17848, 17847, 17846, 17845, 17844, 17843, 17842, 17841, 17840, 
    17839, 17838, 17837, 17836, 17835, 17834, 17833, 17832, 17831, 17830, 
    17829, 17828, 17827, 17826, 17825, 17824, 17823, 17822, 17821, 17820, 
    17819, 17818, 17817, 17816, 17815, 17814, 17813, 17812, 17811, 17810, 
    17809, 17808, 17807, 17806, 17805, 17804, 17803, 17802, 17801, 17800, 
    17799, 17798, 17797, 17796, 17795, 17794, 17793, 17792, 17791, 17790, 
    17789, 17788, 17787, 17786, 17785, 17784, 17783, 17782, 17781, 17780, 
    17779, 17778, 17777, 17776, 17775, 17774, 17773, 17772, 17771, 17770, 
    17769, 17768, 17767, 17766, 17765, 17764, 17763, 17762, 17761, 17760, 
    17759, 17758, 17757, 17756, 17755, 17754, 17753, 17752, 17751, 17750, 
    17749, 17748, 17747, 17746, 17745, 17744, 17743, 17742, 17741, 17740, 
    17739, 17738, 17737, 17736, 17735, 17734, 17733, 17732, 17731, 17730, 
    17729, 17728, 17727, 17726, 17725, 17724, 17723, 17722, 17721, 17720, 
    17719, 17718, 17717, 17716, 17715, 17714, 17713, 17712, 17711, 17710, 
    17709, 17708, 17707, 17706, 17705, 17704, 17703, 18077, 18078, 18079, 
    18080, 18081, 18082, 18071, 18072, 18073, 18074, 18075, 18076, 18065, 
    18066, 18067, 18068, 18069, 18070, 18059, 18060, 18061, 18062, 18063, 
    18064, 18053, 18054, 18055, 18056, 18057, 18058, 18047, 18048, 18049, 
    18050, 18051, 18052, 18041, 18042, 18043, 18044, 18045, 18046, 18035, 
    18036, 18037, 18038, 18039, 18040, 20359, 20360, 20361, 20362, 20363, 
    20364, 20365, 20366, 20351, 20352, 20353, 20354, 20355, 20356, 20357, 
    20358, 20343, 20344, 20345, 20346, 20347, 20348, 20349, 20350, 20335, 
    20336, 20337, 20338, 20339, 20340, 20341, 20342, 20327, 20328, 20329, 
    20330, 20331, 20332, 20333, 20334, 20319, 20320, 20321, 20322, 20323, 
    20324, 20325, 20326, 20311, 20312, 20313, 20314, 20315, 20316, 20317, 
    20318, 20303, 20304, 20305, 20306, 20307, 20308, 20309, 20310, 22314, 
    22313, 22312, 22311, 22310, 22309, 22308, 22307, 22306, 22305, 22304, 
    22303, 22302, 22301, 22300, 22299, 22298, 22297, 22296, 22295, 22294, 
    22293, 22292, 22291, 22290, 22289, 22288, 22287, 22286, 22285, 22284, 
    22283, 22282, 22281, 22280, 22279, 22278, 22277, 22276, 22275, 22274, 
    22273, 22272, 22271, 22270, 22269, 22268, 22267, 22266, 22265, 22264, 
    22263, 22262, 22261, 22260, 22259, 22258, 22257, 22256, 22255, 22254, 
    22253, 22252, 22251, 22250, 22249, 22248, 22247, 22246, 22245, 22244, 
    22243, 22242, 22241, 22240, 22239, 22238, 22237, 22236, 22235, 22234, 
    22233, 22232, 22231, 22230, 22229, 22228, 22227, 22226, 22225, 22224, 
    22223, 22222, 22221, 22220, 22219, 22218, 22217, 22216, 22215, 22214, 
    22213, 22212, 22211, 22210, 22209, 22208, 22207, 22206, 22205, 22204, 
    22203, 22202, 22201, 22200, 22199, 22198, 22197, 22196, 22195, 22194, 
    22193, 22192, 22191, 22190, 22189, 22188, 22187, 22186, 22185, 22184, 
    22183, 22182, 22181, 22180, 22179, 22178, 22177, 22176, 22175, 22174, 
    22173, 22172, 22171, 22170, 22169, 22168, 22167, 22166, 22165, 22164, 
    22163, 22681, 22682, 22683, 22684, 22685, 22686, 22675, 22676, 22677, 
    22678, 22679, 22680, 22669, 22670, 22671, 22672, 22673, 22674, 22663, 
    22664, 22665, 22666, 22667, 22668, 22657, 22658, 22659, 22660, 22661, 
    22662, 22651, 22652, 22653, 22654, 22655, 22656, 22645, 22646, 22647, 
    22648, 22649, 22650, 22639, 22640, 22641, 22642, 22643, 22644]]], unsorted=
    True)
mdb.models['HexFiberArray'].rootAssembly.SetFromNodeLabels(name=
    'RVE_AG_PosZ_RVE_AGSORT', nodeLabels=[['HexPackPart-1', [35, 36, 51, 56, 
    91, 103, 104, 105, 644, 645, 646, 647, 648, 649, 650, 651, 661, 662, 663, 
    664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 962, 963, 
    964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 
    979, 980, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1058, 1059, 1060, 
    1061, 1062, 1063, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1566, 
    1567, 1568, 1569, 1570, 1571, 1572, 1573, 1591, 1592, 1593, 1594, 1595, 
    1596, 1597, 1598, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 
    1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1895, 1896, 
    1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 
    1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1941, 1942, 1943, 1944, 
    1945, 1946, 1947, 1948, 5587, 5588, 5589, 5590, 5591, 5592, 5593, 5594, 
    5595, 5596, 5597, 5598, 5599, 5600, 5601, 5602, 5603, 5604, 5605, 5606, 
    5607, 5608, 5609, 5610, 5611, 5612, 5613, 5614, 5615, 5616, 5617, 5618, 
    5619, 5620, 5621, 5622, 5623, 5624, 5625, 5626, 5627, 5628, 5629, 5630, 
    5631, 5632, 5633, 5634, 5635, 5636, 5637, 5638, 5639, 5640, 5641, 5642, 
    5643, 5644, 5645, 5646, 5647, 5648, 5649, 5650, 7719, 7720, 7721, 7722, 
    7723, 7724, 7725, 7726, 7727, 7728, 7729, 7730, 7731, 7732, 7733, 7734, 
    7735, 7736, 7737, 7738, 7739, 7740, 7741, 7742, 7743, 7744, 7745, 7746, 
    7747, 7748, 7749, 7750, 7751, 7752, 7753, 7754, 7755, 7756, 7757, 7758, 
    7759, 7760, 7761, 7762, 7763, 7764, 7765, 7766, 7767, 7768, 7769, 7770, 
    7771, 7772, 7773, 7774, 7775, 7776, 7777, 7778, 7779, 7780, 7781, 7782, 
    7783, 7784, 7785, 7786, 7787, 7788, 7789, 7790, 7791, 7792, 7793, 7794, 
    7795, 7796, 7797, 7798, 7799, 7800, 7801, 7802, 7803, 7804, 7805, 7806, 
    7807, 7808, 7809, 7810, 7811, 7812, 7813, 7814, 7815, 7816, 7817, 7818, 
    7819, 7820, 7821, 7822, 7823, 7824, 7825, 7826, 7827, 7828, 7829, 7830, 
    7831, 7832, 7833, 7834, 7835, 7836, 7837, 7838, 7839, 7840, 7841, 7842, 
    7843, 7844, 7845, 7846, 7847, 7848, 7849, 7850, 7851, 7852, 7853, 7854, 
    7855, 7856, 7857, 7858, 7859, 7860, 7861, 7862, 7863, 7864, 7865, 7866, 
    7867, 7868, 7869, 7870, 8195, 8196, 8197, 8198, 8199, 8200, 8201, 8202, 
    8203, 8204, 8205, 8206, 8207, 8208, 8209, 8210, 8211, 8212, 8213, 8214, 
    8215, 8216, 8217, 8218, 8219, 8220, 8221, 8222, 8223, 8224, 8225, 8226, 
    8227, 8228, 8229, 8230, 8231, 8232, 8233, 8234, 8235, 8236, 8237, 8238, 
    8239, 8240, 8241, 8242, 10575, 10576, 10577, 10578, 10579, 10580, 10581, 
    10582, 10583, 10584, 10585, 10586, 10587, 10588, 10589, 10590, 10591, 
    10592, 10593, 10594, 10595, 10596, 10597, 10598, 10599, 10600, 10601, 
    10602, 10603, 10604, 10605, 10606, 10607, 10608, 10609, 10610, 10611, 
    10612, 10613, 10614, 10615, 10616, 10617, 10618, 10619, 10620, 10621, 
    10622, 10623, 10624, 10625, 10626, 10627, 10628, 10629, 10630, 10631, 
    10632, 10633, 10634, 10635, 10636, 10637, 10638, 12731, 12732, 12733, 
    12734, 12735, 12736, 12737, 12738, 12739, 12740, 12741, 12742, 12743, 
    12744, 12745, 12746, 12747, 12748, 12749, 12750, 12751, 12752, 12753, 
    12754, 12755, 12756, 12757, 12758, 12759, 12760, 12761, 12762, 12763, 
    12764, 12765, 12766, 12767, 12768, 12769, 12770, 12771, 12772, 12773, 
    12774, 12775, 12776, 12777, 12778, 12779, 12780, 12781, 12782, 12783, 
    12784, 12785, 12786, 12787, 12788, 12789, 12790, 12791, 12792, 12793, 
    12794, 12795, 12796, 12797, 12798, 12799, 12800, 12801, 12802, 12803, 
    12804, 12805, 12806, 12807, 12808, 12809, 12810, 12811, 12812, 12813, 
    12814, 12815, 12816, 12817, 12818, 12819, 12820, 12821, 12822, 12823, 
    12824, 12825, 12826, 12827, 12828, 12829, 12830, 12831, 12832, 12833, 
    12834, 12835, 12836, 12837, 12838, 12839, 12840, 12841, 12842, 12843, 
    12844, 12845, 12846, 12847, 12848, 12849, 12850, 12851, 12852, 12853, 
    12854, 12855, 12856, 12857, 12858, 12859, 12860, 12861, 12862, 12863, 
    12864, 12865, 12866, 12867, 12868, 12869, 12870, 12871, 12872, 12873, 
    12874, 12875, 12876, 12877, 12878, 12879, 12880, 12881, 12882, 13063, 
    13064, 13065, 13066, 13067, 13068, 13069, 13070, 13071, 13072, 13073, 
    13074, 13075, 13076, 13077, 13078, 13079, 13080, 13081, 13082, 13083, 
    13084, 13085, 13086, 13087, 13088, 13089, 13090, 13091, 13092, 13093, 
    13094, 13095, 13096, 13097, 13098, 13099, 13100, 13101, 13102, 13103, 
    13104, 13105, 13106, 13107, 13108, 13109, 13110]]], unsorted=True)
mdb.models['HexFiberArray'].rootAssembly.Set(name=
    'RVECenterNodeFinder_SearchNodes_8n48ncs8n', nodes=
    [mdb.models['HexFiberArray'].rootAssembly.nodes, 
    mdb.models['HexFiberArray'].rootAssembly.instances['HexPackPart-1'].nodes])
mdb.models['HexFiberArray'].rootAssembly.Set(name=
    'RVECenterNodeFinder_Omit_u9vnq3094m', nodes=
    [mdb.models['HexFiberArray'].rootAssembly.instances['HexPackPart-1'].nodes.getSequenceFromMask(
    mask=(
    '[#4cf80f6f #35ff15ff #cec1fc3c #f0fcabf6 #eafcb307 #4f80f0fa #ffffdc4d', 
    ' #f8000fff #fc03fc01 #fffffc03 #ff #0 #ff000000 #3ff', 
    ' #7fc #1ffffff0 #0 #7fffffc0 #0 #3ffffff #fff007f8', 
    ' #3fffffff #ff007f80 #ff00ffff #fffc0001 #ff000001 #7f #0', 
    ' #fffffff8 #ff #fffffffe #ffffffff:2 #ffff007f #c000007f #ff00007f', 
    ' #fffe01ff #3 #3fffffff #0 #f0000000 #3ffffff #fc000000', 
    ' #fff #80000000 #ff #fffe0000 #3ff #e00ffff8 #3fffffff', 
    ' #ff000000 #3ffff #f803fc00 #3fe00f #f00fffe0 #ffffff #f0000000', 
    ' #ffffffff #1ffffc01 #fffffc0 #fffffe0 #3fff800 #ff800 #3fffe000', 
    ' #7e00000 #fffffff0 #3fc03ff #0 #3fffffff #c0000000 #ffff', 
    ' #0 #ff8 #ffe00000 #3fff #ff800000 #ffff #fffc0000', 
    ' #fff #ffc01fe0 #ffffffff #fe00ff00 #fe000003 #800000ff #ffc03fff', 
    ' #fc0000ff #7fffffff #f8000000 #fff #3fff8 #ffe00ff8 #ffffffff', 
    ' #3fff #0 #fffff000 #3ff #0 #fc000000 #fff', 
    ' #1ff0 #7fffffc0 #0 #1ffff #7fffc #fffff000 #3f', 
    ' #ff0000 #7fc01ff #7fff0 #ff80000 #0 #fffffffe #ffc0003f', 
    ' #f000001f #7fc01f #fffc01ff #ffffffff #ff #0:6 #c0000000', 
    ' #ffffffff:3 #f #0:15 #fffffffc #ffffffff #3ff #0:7', 
    ' #fc000000 #ffffffff:2 #3 #0:7 #fffc0000 #ffffffff #3ffffff', 
    ' #0:6 #fffc0000 #ffffffff:3 #3ffffff #0:6 #fffc0000 #ffffffff:3', 
    ' #3ffffff #0:6 #fffffc00 #ffffffff #0:5 #ffffc000 #ffffffff', 
    ' #f #0:9 #e0000000 #ffffffff:5 #ff #0:13 #f8000000', 
    ' #ffffffff:9 #3fffffff #0:2 #ffffffc0 #ffffffff:3 #f #0:3', 
    ' #fffffffc #ffffffff:2 #ff #0:6 #c0000000 #ffffffff:2 #3f', 
    ' #0 #ffffc000 #ffffffff #3fffff #0:3 #fffff000 #ffffffff', 
    ' #3 #0:8 #ffffff00 #3fffffff #0:16 #ffffc000 #ffffffff', 
    ' #3fffff #0:8 #ffffffc0 #ffffffff #3fff #0:5 #c0000000', 
    ' #ffffffff:2 #3f #0 #ffffc000 #ffffffff #3fff #0', 
    ' #ffc00000 #ffffffff #3fffffff #0:8 #ffc00000 #ffffffff #3fffffff', 
    ' #0:5 #f0000000 #ffffffff #3ffff #0:3 #ffff0000 #ffffffff', 
    ' #3f #0:2 #c0000000 #ffffffff:5 #1ff #0:11 #fff00000', 
    ' #ffffffff:4 #7fffffff #0:9 #fc000000 #ffffffff:4 #3ffff #0', 
    ' #ffffff00 #3fffffff #0:2 #ffffffc0 #3fffff #0 #fffff000', 
    ' #ffffffff #3 #0:7 #fffffc00 #ffffffff #3ffff #0:5', 
    ' #ffff0000 #ffffffff #3f #0:5 #ffffffc0 #3fffff #0', 
    ' #fffff000 #ffffffff #3 #0:15 #fffc0000 #ffffffff #3ffffff', 
    ' #0:8 #fffffc00 #ffffffff #3ffff #0:8 #fffffffc #ffffffff', 
    ' #3ff #0:8 #fffffffc #ffffffff #3ff #0:3 #fc000000', 
    ' #ffffffff #3ffffff #0:2 #fffffffc #ffffffff #3ff #0:5', 
    ' #ffffff00 #3fffffff #0:5 #fffff000 #ffffffff #3 #0:2', 
    ' #fc000000 #ffffffff:5 #1f #0:9 #ffffffff:5 #7ff #0:4', 
    ' #ffc00000 #ffffffff #3fffffff #0:8 #fff00000 #ffffffff #3ff', 
    ' #0:4 #ff000000 #ffffffff #3fff #0:6 #ffffffc0 #ffffffff:5', 
    ' #fff #0:8 #fffc0000 #ffffffff #ff #0:15 #ffffffc0', 
    ' #ffffffff #3fff #0:7 #c0000000 #ffffffff:2 #3f #0:5', 
    ' #ffc00000 #ffffffff #3fffffff #0:6 #ffffc000 #ffffffff #3fffff', 
    ' #0:8 #ffffc000 #ffffffff #3fffff #0:6 #ffffffc0 #fffffff', 
    ' #0:3 #fc000000 #ffffffff #ffff #0:10 #fffffe00 #ffffffff:4', 
    ' #fffff #0:7 #ffffff80 #ffffffff:4 #3ffff #0:8 #fc000000', 
    ' #ffffffff #ffff #0:4 #c0000000 #ffffffff #fffff #0:5', 
    ' #fc000000 #ffffffff:2 #3 ]', ), )])
mdb.models['HexFiberArray'].rootAssembly.SetByBoolean(name=
    'RVECenterNodeFinder_SearchNodes_8n48ncs8n', operation=DIFFERENCE, sets=(
    mdb.models['HexFiberArray'].rootAssembly.sets['RVECenterNodeFinder_SearchNodes_8n48ncs8n'], 
    mdb.models['HexFiberArray'].rootAssembly.sets['RVECenterNodeFinder_Omit_u9vnq3094m']))
del mdb.models['HexFiberArray'].rootAssembly.sets['RVECenterNodeFinder_Omit_u9vnq3094m']
del mdb.models['HexFiberArray'].rootAssembly.sets['RVECenterNodeFinder_SearchNodes_8n48ncs8n']
mdb.models['HexFiberArray'].rootAssembly.Set(name='RVE_AG_PinNode', nodes=
    mdb.models['HexFiberArray'].rootAssembly.instances['HexPackPart-1'].nodes.getSequenceFromMask(
    mask=('[#0:29 #1000 ]', ), ))
mdb.models['HexFiberArray'].rootAssembly.Node((0, 0, 0))
mdb.models['HexFiberArray'].rootAssembly.Set('RP-Normal', 
    mdb.models['HexFiberArray'].rootAssembly.instances[''].nodes.getSequenceFromMask(
    mask=('[#1 ]', ), ))
mdb.models['HexFiberArray'].rootAssembly.Node((0, 0, 0))
mdb.models['HexFiberArray'].rootAssembly.Set('RP-Shear', 
    mdb.models['HexFiberArray'].rootAssembly.instances[''].nodes.getSequenceFromMask(
    mask=('[#2 ]', ), ))
mdb.models['HexFiberArray'].Equation(name=
    'RVE_AG_1_RVE_AG_NegX_RVE_AGSORT_to_RVE_AG_PosX_RVE_AGSORT', terms=[(-1.0, 
    'RVE_AG_PosX_RVE_AGSORT', 1), (1.0, 'RVE_AG_NegX_RVE_AGSORT', 1), (
    0.300000011920929, 'RP-Normal', 1)])
mdb.models['HexFiberArray'].Equation(name=
    'RVE_AG_2_RVE_AG_NegX_RVE_AGSORT_to_RVE_AG_PosX_RVE_AGSORT', terms=[(-1.0, 
    'RVE_AG_PosX_RVE_AGSORT', 2), (1.0, 'RVE_AG_NegX_RVE_AGSORT', 2), (
    0.300000011920929, 'RP-Shear', 1)])
mdb.models['HexFiberArray'].Equation(name=
    'RVE_AG_3_RVE_AG_NegX_RVE_AGSORT_to_RVE_AG_PosX_RVE_AGSORT', terms=[(-1.0, 
    'RVE_AG_PosX_RVE_AGSORT', 3), (1.0, 'RVE_AG_NegX_RVE_AGSORT', 3), (
    0.300000011920929, 'RP-Shear', 2)])
mdb.models['HexFiberArray'].Equation(name=
    'RVE_AG_1_RVE_AG_NegY_RVE_AGSORT_to_RVE_AG_PosY_RVE_AGSORT', terms=[(-1.0, 
    'RVE_AG_PosY_RVE_AGSORT', 1), (1.0, 'RVE_AG_NegY_RVE_AGSORT', 1), (
    0.903443276882172, 'RP-Shear', 1)])
mdb.models['HexFiberArray'].Equation(name=
    'RVE_AG_2_RVE_AG_NegY_RVE_AGSORT_to_RVE_AG_PosY_RVE_AGSORT', terms=[(-1.0, 
    'RVE_AG_PosY_RVE_AGSORT', 2), (1.0, 'RVE_AG_NegY_RVE_AGSORT', 2), (
    0.903443276882172, 'RP-Normal', 2)])
mdb.models['HexFiberArray'].Equation(name=
    'RVE_AG_3_RVE_AG_NegY_RVE_AGSORT_to_RVE_AG_PosY_RVE_AGSORT', terms=[(-1.0, 
    'RVE_AG_PosY_RVE_AGSORT', 3), (1.0, 'RVE_AG_NegY_RVE_AGSORT', 3), (
    0.903443276882172, 'RP-Shear', 3)])
mdb.models['HexFiberArray'].Equation(name=
    'RVE_AG_1_RVE_AG_NegZ_RVE_AGSORT_to_RVE_AG_PosZ_RVE_AGSORT', terms=[(-1.0, 
    'RVE_AG_PosZ_RVE_AGSORT', 1), (1.0, 'RVE_AG_NegZ_RVE_AGSORT', 1), (
    1.56480956077576, 'RP-Shear', 2)])
mdb.models['HexFiberArray'].Equation(name=
    'RVE_AG_2_RVE_AG_NegZ_RVE_AGSORT_to_RVE_AG_PosZ_RVE_AGSORT', terms=[(-1.0, 
    'RVE_AG_PosZ_RVE_AGSORT', 2), (1.0, 'RVE_AG_NegZ_RVE_AGSORT', 2), (
    1.56480956077576, 'RP-Shear', 3)])
mdb.models['HexFiberArray'].Equation(name=
    'RVE_AG_3_RVE_AG_NegZ_RVE_AGSORT_to_RVE_AG_PosZ_RVE_AGSORT', terms=[(-1.0, 
    'RVE_AG_PosZ_RVE_AGSORT', 3), (1.0, 'RVE_AG_NegZ_RVE_AGSORT', 3), (
    1.56480956077576, 'RP-Normal', 3)])
mdb.models['HexFiberArray'].PinnedBC(createStepName='Initial', name=
    'PinnedNode', region=
    mdb.models['HexFiberArray'].rootAssembly.sets['RVE_AG_PinNode'])
mdb.models['HexFiberArray'].StaticLinearPerturbationStep(name=
    'HomogStiff-Initial', previous='Initial')
mdb.models['HexFiberArray'].FieldOutputRequest(createStepName=
    'HomogStiff-Initial', name='Homogenization_FieldOutput', variables=('S', 
    'E', 'IVOL', 'LE', 'NE', 'U', 'RF', 'CF', 'PE', 'TEMP'))
mdb.models['HexFiberArray'].HistoryOutputRequest(createStepName=
    'HomogStiff-Initial', name='RP-Normal_Homogenization_HistoryOutput', 
    region=mdb.models['HexFiberArray'].rootAssembly.sets['RP-Normal'], 
    variables=('U', 'RF', 'CF'))
mdb.models['HexFiberArray'].HistoryOutputRequest(createStepName=
    'HomogStiff-Initial', name='RP-Shear_Homogenization_HistoryOutput', region=
    mdb.models['HexFiberArray'].rootAssembly.sets['RP-Shear'], variables=('U', 
    'RF', 'CF'))
mdb.models['HexFiberArray'].DisplacementBC(createStepName='HomogStiff-Initial', 
    name='HomogStiff-Initial-E11_RP-Normal', region=
    mdb.models['HexFiberArray'].rootAssembly.sets['RP-Normal'], u1=1.0, u2=0.0, 
    u3=0.0)
mdb.models['HexFiberArray'].DisplacementBC(createStepName='HomogStiff-Initial', 
    name='HomogStiff-Initial-E11_RP-Shear', region=
    mdb.models['HexFiberArray'].rootAssembly.sets['RP-Shear'], u1=0.0, u2=0.0, 
    u3=0.0)
mdb.models['HexFiberArray'].DisplacementBC(createStepName='HomogStiff-Initial', 
    name='HomogStiff-Initial-E22_RP-Normal', region=
    mdb.models['HexFiberArray'].rootAssembly.sets['RP-Normal'], u1=0.0, u2=1.0, 
    u3=0.0)
mdb.models['HexFiberArray'].DisplacementBC(createStepName='HomogStiff-Initial', 
    name='HomogStiff-Initial-E22_RP-Shear', region=
    mdb.models['HexFiberArray'].rootAssembly.sets['RP-Shear'], u1=0.0, u2=0.0, 
    u3=0.0)
mdb.models['HexFiberArray'].DisplacementBC(createStepName='HomogStiff-Initial', 
    name='HomogStiff-Initial-E33_RP-Normal', region=
    mdb.models['HexFiberArray'].rootAssembly.sets['RP-Normal'], u1=0.0, u2=0.0, 
    u3=1.0)
mdb.models['HexFiberArray'].DisplacementBC(createStepName='HomogStiff-Initial', 
    name='HomogStiff-Initial-E33_RP-Shear', region=
    mdb.models['HexFiberArray'].rootAssembly.sets['RP-Shear'], u1=0.0, u2=0.0, 
    u3=0.0)
mdb.models['HexFiberArray'].DisplacementBC(createStepName='HomogStiff-Initial', 
    name='HomogStiff-Initial-E12_RP-Normal', region=
    mdb.models['HexFiberArray'].rootAssembly.sets['RP-Normal'], u1=0.0, u2=0.0, 
    u3=0.0)
mdb.models['HexFiberArray'].DisplacementBC(createStepName='HomogStiff-Initial', 
    name='HomogStiff-Initial-E12_RP-Shear', region=
    mdb.models['HexFiberArray'].rootAssembly.sets['RP-Shear'], u1=0.5, u2=0.0, 
    u3=0.0)
mdb.models['HexFiberArray'].DisplacementBC(createStepName='HomogStiff-Initial', 
    name='HomogStiff-Initial-E13_RP-Normal', region=
    mdb.models['HexFiberArray'].rootAssembly.sets['RP-Normal'], u1=0.0, u2=0.0, 
    u3=0.0)
mdb.models['HexFiberArray'].DisplacementBC(createStepName='HomogStiff-Initial', 
    name='HomogStiff-Initial-E13_RP-Shear', region=
    mdb.models['HexFiberArray'].rootAssembly.sets['RP-Shear'], u1=0.0, u2=0.5, 
    u3=0.0)
mdb.models['HexFiberArray'].DisplacementBC(createStepName='HomogStiff-Initial', 
    name='HomogStiff-Initial-E23_RP-Normal', region=
    mdb.models['HexFiberArray'].rootAssembly.sets['RP-Normal'], u1=0.0, u2=0.0, 
    u3=0.0)
mdb.models['HexFiberArray'].DisplacementBC(createStepName='HomogStiff-Initial', 
    name='HomogStiff-Initial-E23_RP-Shear', region=
    mdb.models['HexFiberArray'].rootAssembly.sets['RP-Shear'], u1=0.0, u2=0.0, 
    u3=0.5)
mdb.models['HexFiberArray'].steps['HomogStiff-Initial'].LoadCase(
    boundaryConditions=(('HomogStiff-Initial-E11_RP-Normal', 1.0), (
    'HomogStiff-Initial-E11_RP-Shear', 1.0)), name=
    'LC-1-HomogStiff-Initial-E11')
mdb.models['HexFiberArray'].steps['HomogStiff-Initial'].LoadCase(
    boundaryConditions=(('HomogStiff-Initial-E22_RP-Normal', 1.0), (
    'HomogStiff-Initial-E22_RP-Shear', 1.0)), name=
    'LC-2-HomogStiff-Initial-E22')
mdb.models['HexFiberArray'].steps['HomogStiff-Initial'].LoadCase(
    boundaryConditions=(('HomogStiff-Initial-E33_RP-Normal', 1.0), (
    'HomogStiff-Initial-E33_RP-Shear', 1.0)), name=
    'LC-3-HomogStiff-Initial-E33')
mdb.models['HexFiberArray'].steps['HomogStiff-Initial'].LoadCase(
    boundaryConditions=(('HomogStiff-Initial-E12_RP-Normal', 1.0), (
    'HomogStiff-Initial-E12_RP-Shear', 1.0)), name=
    'LC-4-HomogStiff-Initial-E12')
mdb.models['HexFiberArray'].steps['HomogStiff-Initial'].LoadCase(
    boundaryConditions=(('HomogStiff-Initial-E13_RP-Normal', 1.0), (
    'HomogStiff-Initial-E13_RP-Shear', 1.0)), name=
    'LC-5-HomogStiff-Initial-E13')
mdb.models['HexFiberArray'].steps['HomogStiff-Initial'].LoadCase(
    boundaryConditions=(('HomogStiff-Initial-E23_RP-Normal', 1.0), (
    'HomogStiff-Initial-E23_RP-Shear', 1.0)), name=
    'LC-6-HomogStiff-Initial-E23')
mdb.models['HexFiberArray'].steps['HomogStiff-Initial'].setValues(description=
    'RP_strain')
mdb.jobs['UD_hex_homogen'].setValues(description='_Scenario_Mechanical_')
# Save by chri on 2025_09_16-08.42.06; build 2023 2022_09_28-20.11.55 183150
